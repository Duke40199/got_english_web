{"version":3,"sources":["api/coin-bundle.js","reusable/CoinBundleValidator.js","views/pages/manage-coin-bundle/AddCoinBundleModal.js","views/pages/manage-coin-bundle/UpdateCoinBundleModal.js","views/pages/manage-coin-bundle/DeleteCoinBundleModal.js","views/pages/manage-coin-bundle/ManageCoinBundle.js","api/APIKit.js","reusable/DefineErrorLog.js","api/pricing.js"],"names":["GetCoinBundleInfoListAPI","a","token","JSON","parse","localStorage","getItem","coinBundleInfoList","onSuccess","data","onFailure","error","console","log","apiConfig","headers","APIKit","get","then","catch","GetCoinBundleByIdAPI","coinBundleId","coinBundleInfo","UpdateCoinBundleByIdAPI","updateInfoJson","updateResult","response","success","DefineErrorLog","put","CreateCoinBundleAPI","coinBundleInfoJson","createResult","post","DeleteCoinBundleByIdAPI","deleteResult","delete","CoinBundleValidator","userInput","errors","title","length","isEmpty","toString","description","quantity","unparsedQuantity","parsedQuantity","parseInt","isNumeric","AddCoinBundleModal","show","handleClose","refreshDataFlag","setRefreshDataFlag","useState","addCoinBundleTitle","setAddCoinBundleTitle","addCoinBundleDescription","setAddCoinBundleDescription","addCoinBundleQuantity","setAddCoinBundleQuantity","coinPricing","setCoinPricing","fieldErrorMessages","setFieldErrorMessages","addMessage","setAddMessage","promiseInProgress","usePromiseTracker","useEffect","trackPromise","GetCoinPricingInfoAPI","price","fetchData","onSubmitAddForm","e","preventDefault","formValidate","Object","keys","addCoinBundleData","addCoinBundleResult","color","onClose","closeOnBackdrop","onSubmit","method","encType","className","closeButton","row","md","htmlFor","xs","id","name","onChange","target","value","required","type","min","max","readOnly","disabled","onClick","UpdateCoinBundleModal","selectedCoinBundleId","updateCoinBundleId","setUpdateCoinBundleId","updateCoinBundleTitle","setUpdateCoinBundleTitle","updateCoinBundleDescription","setUpdateCoinBundleDescription","updateCoinBundleQuantity","setUpdateCoinBundleQuantity","updateMessage","setUpdateMessage","selectedCoinBundleInfo","onSubmitUpdateForm","updateCoinBundleData","updateCoinBundleResult","DeleteCoinBundleModal","deleteMessage","setDeleteMessage","onSubmitDeleteForm","deleteCoinBundleResult","fields","key","label","_style","width","ManageCoinBundle","addCoinBundleModalShow","setAddCoinBundleModalShow","updateCoinBundleModalShow","setUpdateCoinBundleModalShow","deleteCoinBundleModalShow","setDeleteCoinBundleModalShow","setCoinBundleInfoList","setSelectedCoinBundleId","hideUpdateModal","hideAddModal","hideDeleteModal","moderator_details","can_manage_coin_bundle","size","addTableClasses","items","hover","striped","bordered","itemsPerPage","pagination","loading","noItemsView","noResults","noItems","tableFilter","placeholder","scopedSlots","item","index","data-toggle","axios","create","baseURL","timeout","errorResponse","definedErrorLog","errorLogMessage","includes","GetCoinValuePricingInfoListAPI","pricingInfoList","GetMessagingSessionPricingInfoListAPI","GetLiveCallSessionPricingInfoListAPI","GetTranslationCallSessionPricingInfoListAPI","GetPricingInfoByIdAPI","pricingId","pricingInfo","UpdatePricingInfoByIdAPI","AddPricingInfoAPI","addInfoJson","addResult","DeletePricingByIdAPI"],"mappings":"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","file":"static/js/36.1bbda42e.chunk.js","sourcesContent":["import APIKit from './APIKit';\r\nimport DefineErrorLog from '../reusable/DefineErrorLog'\r\n\r\nexport const GetCoinBundleInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let coinBundleInfoList = null;\r\n    const onSuccess = data => {\r\n        coinBundleInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: {\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    await APIKit.get('/coin-bundles', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return coinBundleInfoList;\r\n}\r\n\r\nexport const GetCoinBundleByIdAPI = async (coinBundleId) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let coinBundleInfo = null;\r\n    const onSuccess = data => {\r\n        //only first data\r\n        coinBundleInfo = data.data.data[0];\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: {\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    await APIKit.get('/coin-bundles?id=' + coinBundleId, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return coinBundleInfo;\r\n}\r\n\r\nexport const UpdateCoinBundleByIdAPI = async (coinBundleId, updateInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let updateResult = null;\r\n    const onSuccess = response => {\r\n        updateResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        updateResult = DefineErrorLog(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.put('/coin-bundles/' + coinBundleId + '/update', updateInfoJson, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return updateResult;\r\n}\r\n\r\nexport const CreateCoinBundleAPI = async (coinBundleInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let createResult = null;\r\n\r\n    const onSuccess = response => {\r\n        createResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        createResult = DefineErrorLog(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.post('/coin-bundles', coinBundleInfoJson, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return createResult;\r\n}\r\n\r\nexport const DeleteCoinBundleByIdAPI = async (coinBundleId) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let deleteResult = null;\r\n\r\n    const onSuccess = response => {\r\n        deleteResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        deleteResult = DefineErrorLog(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.delete('/coin-bundles/' + coinBundleId + \"/delete\", apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return deleteResult;\r\n}","import { isEmpty, isNumeric } from 'validator';\r\n\r\nconst CoinBundleValidator = (userInput) => {\r\n    const errors = {};\r\n\r\n    //title\r\n    if (userInput.title != null) {\r\n        if (userInput.title.length > 30) {\r\n            errors.title = \"Tên Gói không được quá 30 ký tự!\"\r\n        } else if (isEmpty(userInput.title.toString())) {\r\n            errors.title = \"Tên Gói là bắt buộc!\"\r\n        }\r\n    }\r\n    //description\r\n    if (userInput.description != null) {\r\n        if (userInput.description.length > 55) {\r\n            errors.description = \"Nội dung Gói không được quá 55 ký tự!\"\r\n        }\r\n    }\r\n    //quantity\r\n    if (userInput.quantity != null) {\r\n        const unparsedQuantity = userInput.quantity.toString();\r\n        const parsedQuantity = parseInt(userInput.quantity);\r\n        if (isEmpty(unparsedQuantity)) {\r\n            errors.quantity = \"Số lượng Coin là bắt buộc!\"\r\n        } else if (!isNumeric(unparsedQuantity)) {\r\n            errors.quantity = \"Số lượng Coin chỉ nhận giá trị số!\"\r\n        } else if (parsedQuantity < 1 || parsedQuantity > 1000) {\r\n            errors.quantity = \"Số lượng Coin chỉ được nằm trong khoảng 1 đến 1000!\"\r\n        }\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default CoinBundleValidator","import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n    CCol,\r\n    CInput,\r\n    CButton,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalTitle,\r\n    CLabel,\r\n    CFormGroup,\r\n    CForm,\r\n    CAlert,\r\n    CInvalidFeedback\r\n} from '@coreui/react'\r\nimport { CreateCoinBundleAPI } from '../../../api/coin-bundle';\r\nimport { GetCoinPricingInfoAPI } from '../../../api/pricing';\r\n\r\nimport CoinBundleValidator from '../../../reusable/CoinBundleValidator';\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nconst AddCoinBundleModal = ({ show, handleClose, refreshDataFlag, setRefreshDataFlag }) => {\r\n    const [addCoinBundleTitle, setAddCoinBundleTitle] = useState(\"\");\r\n    const [addCoinBundleDescription, setAddCoinBundleDescription] = useState(\"\");\r\n    const [addCoinBundleQuantity, setAddCoinBundleQuantity] = useState(1);\r\n    const [coinPricing, setCoinPricing] = useState(\"\");\r\n    const [fieldErrorMessages, setFieldErrorMessages] = useState({});\r\n    const [addMessage, setAddMessage] = useState(null);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    //this useEffect will be executed every time the modal show\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const coinPricing = await trackPromise(GetCoinPricingInfoAPI());\r\n            if (coinPricing != null) {\r\n                setCoinPricing(coinPricing.price);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const onSubmitAddForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const userInput = {\r\n            \"title\": addCoinBundleTitle,\r\n            \"description\": addCoinBundleDescription,\r\n            \"quantity\": addCoinBundleQuantity\r\n        }\r\n\r\n        const formValidate = CoinBundleValidator(userInput);\r\n        const noErrors = Object.keys(formValidate).length === 0;\r\n\r\n        if (noErrors) {\r\n            const addCoinBundleData = {\r\n                \"title\": addCoinBundleTitle,\r\n                \"description\": addCoinBundleDescription,\r\n                \"quantity\": parseInt(addCoinBundleQuantity),\r\n                \"price_unit\": \"VND\"\r\n            }\r\n\r\n            const addCoinBundleResult = await trackPromise(CreateCoinBundleAPI(addCoinBundleData));\r\n\r\n            if (addCoinBundleResult === true) {\r\n                setAddMessage(<CAlert color=\"success\">Thêm mới thành công!</CAlert>);\r\n                setRefreshDataFlag(!refreshDataFlag);\r\n            } else {\r\n                setAddMessage(<CAlert color=\"danger\">{addCoinBundleResult}</CAlert>);\r\n            }\r\n            //clear errors if any\r\n            setFieldErrorMessages({});\r\n        } else {\r\n            setFieldErrorMessages(formValidate);\r\n            setAddMessage(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CModal\r\n            show={show}\r\n            onClose={handleClose()}\r\n            closeOnBackdrop={false}\r\n            color=\"primary\">\r\n            <CForm onSubmit={onSubmitAddForm} method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Thêm mới Gói Coin</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel className=\"required\" htmlFor=\"coin-bundle-title-input\">Tên Gói:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput id=\"coin-bundle-title-input\" name=\"coin-bundle-title-input\" onChange={({ target }) => setAddCoinBundleTitle(target.value)} required />\r\n                            {fieldErrorMessages.title != null ? <CInvalidFeedback\r\n                                className=\"d-block\"\r\n                            >\r\n                                {fieldErrorMessages.title}\r\n                            </CInvalidFeedback>\r\n                                : null}\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"coin-bundle-description-input\">Nội dung Gói:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput id=\"coin-bundle-description-input\" name=\"coin-bundle-description-input\" onChange={({ target }) => setAddCoinBundleDescription(target.value)} />\r\n                            {fieldErrorMessages.description != null ? <CInvalidFeedback\r\n                                className=\"d-block\"\r\n                            >\r\n                                {fieldErrorMessages.description}\r\n                            </CInvalidFeedback>\r\n                                : null}\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel className=\"required\" htmlFor=\"coin-bundle-quantity-input\">Số lượng Coin:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"number\" min=\"1\" max=\"1000\" id=\"coin-bundle-quantity-input\" name=\"coin-bundle-quantity-input\" value={addCoinBundleQuantity} onChange={({ target }) => setAddCoinBundleQuantity(target.value)} required />\r\n                            {fieldErrorMessages.quantity != null ? <CInvalidFeedback\r\n                                className=\"d-block\"\r\n                            >\r\n                                {fieldErrorMessages.quantity}\r\n                            </CInvalidFeedback>\r\n                                : null}\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"coin-bundle-price-input\">Giá Gói:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput\r\n                                type=\"number\"\r\n                                id=\"coin-bundle-price-input\"\r\n                                name=\"coin-bundle-price-input\"\r\n                                min=\"0\"\r\n                                value={addCoinBundleQuantity * coinPricing}\r\n                                readOnly />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"coin-bundle-price-unit-input\">Đơn vị Giá:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput id=\"coin-bundle-price-unit-input\" name=\"coin-bundle-price-unit-input\"\r\n                                value=\"VND\"\r\n                                readOnly />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    {addMessage}\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"primary\" type=\"submit\" disabled={promiseInProgress}>\r\n                        Thêm\r\n                </CButton>\r\n                    <CButton color=\"secondary\" onClick={handleClose()}>\r\n                        Đóng\r\n                </CButton>\r\n                </CModalFooter>\r\n            </CForm>\r\n        </CModal>\r\n    );\r\n}\r\n\r\nexport default AddCoinBundleModal","import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n    CCol,\r\n    CInput,\r\n    CButton,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalTitle,\r\n    CLabel,\r\n    CFormGroup,\r\n    CForm,\r\n    CAlert,\r\n    CInvalidFeedback\r\n} from '@coreui/react'\r\nimport { GetCoinBundleByIdAPI, UpdateCoinBundleByIdAPI } from '../../../api/coin-bundle'\r\nimport { GetCoinPricingInfoAPI } from '../../../api/pricing';\r\n\r\nimport CoinBundleValidator from '../../../reusable/CoinBundleValidator';\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nconst UpdateCoinBundleModal = ({ selectedCoinBundleId, show, handleClose, refreshDataFlag, setRefreshDataFlag }) => {\r\n    const [updateCoinBundleId, setUpdateCoinBundleId] = useState(\"\");\r\n    const [updateCoinBundleTitle, setUpdateCoinBundleTitle] = useState(\"\");\r\n    const [updateCoinBundleDescription, setUpdateCoinBundleDescription] = useState(\"\");\r\n    const [updateCoinBundleQuantity, setUpdateCoinBundleQuantity] = useState(\"\");\r\n    const [coinPricing, setCoinPricing] = useState(\"\");\r\n    const [fieldErrorMessages, setFieldErrorMessages] = useState({});\r\n    const [updateMessage, setUpdateMessage] = useState(null);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    //this useEffect will be executed every time the modal show\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            if (selectedCoinBundleId != null) {\r\n                const selectedCoinBundleInfo = await trackPromise(GetCoinBundleByIdAPI(selectedCoinBundleId));\r\n                if (selectedCoinBundleInfo != null) {\r\n                    setUpdateCoinBundleId(selectedCoinBundleInfo.id);\r\n                    setUpdateCoinBundleTitle(selectedCoinBundleInfo.title);\r\n                    setUpdateCoinBundleDescription(selectedCoinBundleInfo.description);\r\n                    setUpdateCoinBundleQuantity(selectedCoinBundleInfo.quantity);\r\n                }\r\n            }\r\n            const coinPricing = await trackPromise(GetCoinPricingInfoAPI());\r\n            if (coinPricing != null) {\r\n                setCoinPricing(coinPricing.price);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [selectedCoinBundleId]);\r\n\r\n    const onSubmitUpdateForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const userInput = {\r\n            \"title\": updateCoinBundleTitle,\r\n            \"description\": updateCoinBundleDescription,\r\n            \"quantity\": updateCoinBundleQuantity\r\n        }\r\n\r\n        const formValidate = CoinBundleValidator(userInput);\r\n        const noErrors = Object.keys(formValidate).length === 0;\r\n\r\n        if (noErrors) {\r\n            const updateCoinBundleData = {\r\n                \"title\": updateCoinBundleTitle,\r\n                \"description\": updateCoinBundleDescription,\r\n                \"quantity\": parseInt(updateCoinBundleQuantity),\r\n            }\r\n\r\n            const updateCoinBundleResult = await trackPromise(UpdateCoinBundleByIdAPI(selectedCoinBundleId, updateCoinBundleData));\r\n\r\n            if (updateCoinBundleResult === true) {\r\n                setUpdateMessage(<CAlert color=\"success\">Cập nhật thành công!</CAlert>);\r\n                setRefreshDataFlag(!refreshDataFlag);\r\n            } else {\r\n                setUpdateMessage(<CAlert color=\"danger\">{updateCoinBundleResult}</CAlert>);\r\n            }\r\n            //clear errors if any\r\n            setFieldErrorMessages({});\r\n        } else {\r\n            setFieldErrorMessages(formValidate);\r\n            setUpdateMessage(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CModal\r\n            show={show}\r\n            onClose={handleClose()}\r\n            closeOnBackdrop={false}\r\n            color=\"success\"\r\n        >\r\n            <CForm onSubmit={onSubmitUpdateForm} method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Cập nhật Gói Coin</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"coin-bundle-id-input\">ID:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <p name=\"coin-bundle-id-static\">{updateCoinBundleId}</p>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel className=\"required\" htmlFor=\"update-coin-bundle-title-input\">Tên Gói:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"text\" id=\"update-coin-bundle-title-input\" name=\"title\" value={updateCoinBundleTitle} onChange={({ target }) => setUpdateCoinBundleTitle(target.value)} required />\r\n                            {fieldErrorMessages.title != null ? <CInvalidFeedback\r\n                                className=\"d-block\"\r\n                            >\r\n                                {fieldErrorMessages.title}\r\n                            </CInvalidFeedback>\r\n                                : null}\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-coin-bundle-description-input\">Nội dung Gói:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"text\" id=\"update-coin-bundle-description-input\" name=\"description\" value={updateCoinBundleDescription} onChange={({ target }) => setUpdateCoinBundleDescription(target.value)} />\r\n                            {fieldErrorMessages.description != null ? <CInvalidFeedback\r\n                                className=\"d-block\"\r\n                            >\r\n                                {fieldErrorMessages.description}\r\n                            </CInvalidFeedback>\r\n                                : null}\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel className=\"required\" htmlFor=\"update-coin-bundle-quantity-input\">Số lượng Coin:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"number\" id=\"update-coin-bundle-quantity-input\" min=\"1\" max=\"1000\" name=\"quantity\" value={updateCoinBundleQuantity} onChange={({ target }) => setUpdateCoinBundleQuantity(target.value)} required />\r\n                            {fieldErrorMessages.quantity != null ? <CInvalidFeedback\r\n                                className=\"d-block\"\r\n                            >\r\n                                {fieldErrorMessages.quantity}\r\n                            </CInvalidFeedback>\r\n                                : null}\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-coin-bundle-price-input\">Giá Gói:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"number\" id=\"update-coin-bundle-price-input\" min=\"0\" name=\"price\" value={updateCoinBundleQuantity * coinPricing} readOnly />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-coin-bundle-price-unit-input\">Đơn vị Giá:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"text\" id=\"update-coin-bundle-price-unit-input\" name=\"price-unit\" value=\"VND\" readOnly />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    {updateMessage}\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"success\" type=\"submit\" disabled={promiseInProgress}>\r\n                        Cập nhật\r\n                        </CButton>\r\n                    <CButton color=\"secondary\" onClick={handleClose()}>\r\n                        Đóng\r\n                        </CButton>\r\n                </CModalFooter>\r\n            </CForm>\r\n        </CModal>\r\n    );\r\n}\r\n\r\nexport default UpdateCoinBundleModal","import React, { useState } from 'react'\r\n\r\nimport {\r\n    CButton,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalTitle,\r\n    CForm,\r\n    CAlert\r\n} from '@coreui/react'\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nimport { DeleteCoinBundleByIdAPI } from '../../../api/coin-bundle';\r\n\r\nconst DeleteCoinBundleModal = ({ selectedCoinBundleId, show, handleClose, refreshDataFlag, setRefreshDataFlag }) => {\r\n    const [deleteMessage, setDeleteMessage] = useState(null);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    const onSubmitDeleteForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const deleteCoinBundleResult = await trackPromise(DeleteCoinBundleByIdAPI\r\n            (selectedCoinBundleId));\r\n\r\n        if (deleteCoinBundleResult === true) {\r\n            setDeleteMessage(<CAlert color=\"success\">Xóa thành công!</CAlert>);\r\n            setRefreshDataFlag(!refreshDataFlag);\r\n        } else {\r\n            setDeleteMessage(<CAlert color=\"danger\">{deleteCoinBundleResult}</CAlert>);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CModal\r\n            show={show}\r\n            onClose={handleClose()}\r\n            closeOnBackdrop={false}\r\n            color=\"danger\"\r\n        >\r\n            <CForm onSubmit={onSubmitDeleteForm} method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Xóa Gói Coin ( id: {selectedCoinBundleId} )</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    {deleteMessage ? deleteMessage : \"Bạn chắc chắn muốn xóa Gói Coin này chứ?\"}\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"danger\" type=\"submit\" disabled={promiseInProgress}>\r\n                        Xóa\r\n                </CButton>\r\n                    <CButton color=\"secondary\" onClick={handleClose()}>\r\n                        Đóng\r\n                </CButton>\r\n                </CModalFooter>\r\n            </CForm>\r\n        </CModal>\r\n    );\r\n}\r\n\r\nexport default DeleteCoinBundleModal","import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CDataTable,\r\n    CRow,\r\n    CButton,\r\n    CCardHeader,\r\n    CAlert\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport AddCoinBundleModal from '../manage-coin-bundle/AddCoinBundleModal';\r\nimport UpdateCoinBundleModal from '../manage-coin-bundle/UpdateCoinBundleModal';\r\nimport DeleteCoinBundleModal from '../manage-coin-bundle/DeleteCoinBundleModal';\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nimport { GetCoinBundleInfoListAPI } from '../../../api/coin-bundle'\r\n\r\nconst fields = [\r\n    { key: 'title', label: 'Tên Gói', _style: { width: '20%' } },\r\n    { key: 'description', label: 'Nội dung Gói', _style: { width: '40%' } },\r\n    { key: 'quantity', label: 'Số lượng Coin', _style: { width: '12%' } },\r\n    { key: 'price', label: 'Giá', _style: { width: '13%' } },\r\n    { key: 'price_unit', label: 'Đơn vị', _style: { width: '10%' } },\r\n    { key: 'action', label: '', _style: { width: '5%' } }\r\n]\r\n\r\nconst ManageCoinBundle = () => {\r\n    const [addCoinBundleModalShow, setAddCoinBundleModalShow] = useState(false);\r\n    const [updateCoinBundleModalShow, setUpdateCoinBundleModalShow] = useState(false);\r\n    const [deleteCoinBundleModalShow, setDeleteCoinBundleModalShow] = useState(false);\r\n    const [coinBundleInfoList, setCoinBundleInfoList] = useState(null);\r\n    const [selectedCoinBundleId, setSelectedCoinBundleId] = useState(null);\r\n    const [refreshDataFlag, setRefreshDataFlag] = useState(false);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const coinBundleInfoList = await trackPromise(GetCoinBundleInfoListAPI());\r\n            setCoinBundleInfoList(coinBundleInfoList);\r\n        }\r\n        fetchData();\r\n    }, [refreshDataFlag]);\r\n\r\n    const updateCoinBundleOnclick = (coinBundleId) => {\r\n        //open the update coin bundle modal\r\n        setUpdateCoinBundleModalShow(true);\r\n        //set params\r\n        setSelectedCoinBundleId(coinBundleId);\r\n    }\r\n\r\n    const deleteCoinBundleOnclick = (coinBundleId) => {\r\n        //open the delete coin bundle modal\r\n        setDeleteCoinBundleModalShow(true);\r\n        //set params\r\n        setSelectedCoinBundleId(coinBundleId);\r\n    }\r\n\r\n    const hideUpdateModal = () => {\r\n        setUpdateCoinBundleModalShow(false);\r\n    }\r\n\r\n    const hideAddModal = () => {\r\n        setAddCoinBundleModalShow(false);\r\n    }\r\n\r\n    const hideDeleteModal = () => {\r\n        setDeleteCoinBundleModalShow(false);\r\n    }\r\n\r\n    //check permission\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    const canManageCoinBundle = userInfo.moderator_details.can_manage_coin_bundle;\r\n    if (canManageCoinBundle) {\r\n        return (\r\n            <CRow>\r\n                <CCol>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            <h3 className=\"m-0\">Danh sách Gói Coin:</h3>\r\n                            <CButton color=\"primary\" className=\"mt-2 d-flex align-items-center\" onClick={() => setAddCoinBundleModalShow(true)}>\r\n                                <CIcon name=\"cilPlus\" size=\"sm\" className=\"mr-1\"></CIcon>Thêm mới Gói Coin</CButton>\r\n                        </CCardHeader>\r\n                        <CCardBody className=\"pt-0 pb-0\">\r\n                            <CDataTable\r\n                                addTableClasses=\"text-break\"\r\n                                items={coinBundleInfoList}\r\n                                fields={fields}\r\n                                hover\r\n                                striped\r\n                                bordered\r\n                                size=\"sm\"\r\n                                itemsPerPage={20}\r\n                                pagination\r\n                                loading={promiseInProgress}\r\n                                noItemsView={{ noResults: 'Không có kết quả tìm kiếm trùng khớp', noItems: 'Không có dữ liệu' }}\r\n                                tableFilter={\r\n                                    {\r\n                                        label: \"Tìm kiếm:\",\r\n                                        placeholder: \"nhập thông tin Gói Coin cần tìm...\",\r\n                                    }\r\n                                }\r\n                                scopedSlots={{\r\n                                    'action':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n\r\n                                                    <button type=\"button\" className=\"table-action-button mr-2\" data-toggle=\"tooltip\" title=\"Cập nhật\">\r\n                                                        <CIcon name=\"cil-pencil\" onClick={() => updateCoinBundleOnclick(item.id)}>\r\n                                                        </CIcon>\r\n                                                    </button>\r\n                                                    <button type=\"button\" className=\"table-action-button\" data-toggle=\"tooltip\" title=\"Xóa\">\r\n                                                        <CIcon name=\"cil-X\" onClick={() => deleteCoinBundleOnclick(item.id)}>\r\n                                                        </CIcon>\r\n                                                    </button>\r\n                                                </td>\r\n                                            )\r\n                                        },\r\n                                }}\r\n                            />\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n                {/*POPUP ADD COIN BUNDLE*/}\r\n                {addCoinBundleModalShow ?\r\n                    <AddCoinBundleModal\r\n                        show={addCoinBundleModalShow}\r\n                        handleClose={() => hideAddModal}\r\n                        refreshDataFlag={refreshDataFlag}\r\n                        setRefreshDataFlag={setRefreshDataFlag} />\r\n                    : null}\r\n                {/*POPUP UPDATE COIN BUNDLE*/}\r\n                {updateCoinBundleModalShow && selectedCoinBundleId != null ?\r\n                    <UpdateCoinBundleModal\r\n                        selectedCoinBundleId={selectedCoinBundleId}\r\n                        show={updateCoinBundleModalShow}\r\n                        handleClose={() => hideUpdateModal}\r\n                        refreshDataFlag={refreshDataFlag}\r\n                        setRefreshDataFlag={setRefreshDataFlag} />\r\n                    : null}\r\n                {/*POPUP DELETE COIN BUNDLE*/}\r\n                {deleteCoinBundleModalShow && selectedCoinBundleId != null ?\r\n                    <DeleteCoinBundleModal\r\n                        selectedCoinBundleId={selectedCoinBundleId}\r\n                        show={deleteCoinBundleModalShow}\r\n                        handleClose={() => hideDeleteModal}\r\n                        refreshDataFlag={refreshDataFlag}\r\n                        setRefreshDataFlag={setRefreshDataFlag} />\r\n                    : null}\r\n            </CRow>\r\n        )\r\n    } else {\r\n        return (\r\n            <CAlert color=\"danger\">Bạn không có quyền sử dụng chức năng này!</CAlert>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ManageCoinBundle","// import axios from 'axios';\r\n\r\n// let APIKit = axios.create({\r\n//     baseURL: process.env.BACKEND_URL,\r\n//     timeout: 10000\r\n// })\r\n\r\n// export default APIKit;\r\n\r\nimport axios from 'axios';\r\n\r\n// Create axios client, pre-configured with baseURL\r\nlet APIKit = axios.create({\r\n  baseURL: 'https://got-english-backend-production-swiyh5bc4q-de.a.run.app',\r\n  timeout: 10000,\r\n});\r\n\r\n// Set JSON Web Token in Client to be included in all calls\r\n// export const setClientToken = token => {\r\n//   APIKit.interceptors.request.use(function (config) {\r\n//     config.headers.Authorization = `Bearer ${token}`;\r\n//     return config;\r\n//   });\r\n// };\r\n\r\nexport default APIKit;","const DefineErrorLog = (errorResponse) => {\r\n    let definedErrorLog = \"\";\r\n    if (errorResponse != null) {\r\n        if (errorResponse.response != null) {\r\n            if (errorResponse.response.data != null) {\r\n                const errorLogMessage = errorResponse.response.data;\r\n                if (errorLogMessage.includes(\"Account is already suspended.\")) {\r\n                    definedErrorLog = \"Tài khoản này đã bị khóa!\";\r\n                } else if (errorLogMessage.includes(\"account unavailable\")) {\r\n                    definedErrorLog = \"Email đã được sử dụng!\";\r\n                } else if (errorLogMessage.includes(\"'username'\")) {\r\n                    definedErrorLog = \"Tên tài khoản đã được sử dụng!\";\r\n                } else if (errorLogMessage.includes(\"Account is currently in a messaging session\")) {\r\n                    definedErrorLog = \"Tài khoản này hiện đang sử dụng dịch vụ Phiên nhắn tin! Chưa thể khóa...\";\r\n                } else if (errorLogMessage.includes(\"Account is currently in a live call session\")) {\r\n                    definedErrorLog = \"Tài khoản này hiện đang sử dụng dịch vụ Phiên gọi trực tuyến! Chưa thể khóa...\";\r\n                } else if (errorLogMessage.includes(\"Account is currently in a translation session\")) {\r\n                    definedErrorLog = \"Tài khoản này hiện đang sử dụng dịch vụ Phòng phiên dịch! Chưa thể khóa...\";\r\n                } else if (errorLogMessage.includes(\"Account is not yet suspended.\")) {\r\n                    definedErrorLog = \"Tài khoản này đã được mở khóa!\";\r\n                } else if (errorLogMessage.includes(\"You don't have permission\")) {\r\n                    definedErrorLog = \"Tài khoản của bạn không có quyền để thực hiện thao tác này!\";\r\n                } else {\r\n                    definedErrorLog = \"Đã có lỗi xảy ra!\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return definedErrorLog;\r\n}\r\n\r\nexport default DefineErrorLog","import APIKit from './APIKit';\r\nimport DefineErrorLog from '../reusable/DefineErrorLog'\r\n\r\nexport const GetCoinValuePricingInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfoList = null;\r\n    const onSuccess = data => {\r\n        pricingInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?pricing_name=coin_value', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfoList;\r\n}\r\n\r\nexport const GetMessagingSessionPricingInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfoList = null;\r\n    const onSuccess = data => {\r\n        pricingInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?pricing_name=messaging_session', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfoList;\r\n}\r\n\r\nexport const GetLiveCallSessionPricingInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfoList = null;\r\n    const onSuccess = data => {\r\n        pricingInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?pricing_name=live_call_session', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfoList;\r\n}\r\n\r\nexport const GetTranslationCallSessionPricingInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfoList = null;\r\n    const onSuccess = data => {\r\n        pricingInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?pricing_name=translation_call_session', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfoList;\r\n}\r\n\r\nexport const GetCoinPricingInfoAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfoList = null;\r\n    const onSuccess = data => {\r\n        //only first data\r\n        pricingInfoList = data.data.data[0];\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?pricing_name=coin_value', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfoList;\r\n}\r\n\r\nexport const GetPricingInfoByIdAPI = async (pricingId) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfo = null;\r\n    const onSuccess = data => {\r\n        //only first data\r\n        pricingInfo = data.data.data[0];\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?id=' + pricingId, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfo;\r\n}\r\n\r\nexport const UpdatePricingInfoByIdAPI = async (pricingId, updateInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let updateResult = null;\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        updateResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        updateResult = DefineErrorLog(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.put('/pricings/' + pricingId + \"/update\", updateInfoJson, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return updateResult;\r\n}\r\n\r\nexport const AddPricingInfoAPI = async (addInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let addResult = null;\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        addResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        addResult = DefineErrorLog(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.post('/pricings', addInfoJson, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return addResult;\r\n}\r\n\r\nexport const DeletePricingByIdAPI = async (pricingId) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let deleteResult = null;\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        deleteResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        deleteResult = DefineErrorLog(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.delete('/pricings/' + pricingId + \"/delete\", apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return deleteResult;\r\n}"],"sourceRoot":""}