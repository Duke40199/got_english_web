{"version":3,"sources":["reusable/PricingValidator.js","views/pages/manage-pricing/UpdatePricingModal.js","views/pages/manage-pricing/AddPricingModal.js","views/pages/manage-pricing/DeletePricingModal.js","views/pages/manage-pricing/ManagePricing.js","api/APIKit.js","reusable/DefineErrorLog.js","../node_modules/date-fns/esm/parseISO/index.js","api/pricing.js"],"names":["PricingValidator","userInput","errors","quantity","unparsedQuantity","toString","parsedQuantity","parseInt","isEmpty","isInt","isNumeric","price","unparsedPrice","parsedPrice","UpdatePricingModal","selectedPricingId","show","handleClose","refreshDataFlag","setRefreshDataFlag","useState","updatePricingId","setUpdatePricingId","updatePricingName","setUpdatePricingName","updatePricingQuantity","setUpdatePricingQuantity","updatePricingQuantityUnit","setUpdatePricingQuantityUnit","updatePricingPrice","setUpdatePricingPrice","updatePricingPriceUnit","setUpdatePricingPriceUnit","fieldErrorMessages","setFieldErrorMessages","updateMessage","setUpdateMessage","promiseInProgress","usePromiseTracker","useEffect","a","trackPromise","GetPricingInfoByIdAPI","selectedPricingInfo","id","pricing_name","quantity_unit","price_unit","fetchData","pricingName","onSubmitUpdateForm","e","preventDefault","formValidate","Object","keys","length","updatePricingData","UpdatePricingInfoByIdAPI","updatePricingResult","color","onClose","closeOnBackdrop","onSubmit","method","encType","className","closeButton","row","md","htmlFor","xs","name","type","value","includes","readOnly","onChange","target","required","disabled","onClick","AddPricingModal","quantityUnitName","selectedPricingServiceName","addPricingName","addPricingQuantity","setAddPricingQuantity","addPricingQuantityUnit","addPricingPrice","setAddPricingPrice","addPricingPriceUnit","addMessage","setAddMessage","onSubmitAddForm","addPricingData","AddPricingInfoAPI","addPricingResult","DeletePricingModal","deleteMessage","setDeleteMessage","onSubmitDeleteForm","DeletePricingByIdAPI","deletePricingResult","defineQuantityUnitName","fields","key","label","_style","width","ManagePricing","updatePricingModalShow","setUpdatePricingModalShow","addPricingModalShow","setAddPricingModalShow","deletePricingModalShow","setDeletePricingModalShow","setSelectedPricingId","selectedServiceName","setSelectedServiceName","coinValuePricingInfoList","setCoinValuePricingInfoList","messagingSessionPricingInfoList","setMessagingSessionPricingInfoList","liveCallSessionPricingInfoList","setLiveCallSessionPricingInfoList","translationCallSessionPricingInfoList","setTranslationCallSessionPricingInfoList","GetCoinValuePricingInfoListAPI","GetMessagingSessionPricingInfoListAPI","GetLiveCallSessionPricingInfoListAPI","GetTranslationCallSessionPricingInfoListAPI","updatePricingOnclick","pricingId","addPricingOnclick","serviceName","deletePricingOnclick","hideUpdateModal","hideAddModal","hideDeleteModal","JSON","parse","localStorage","getItem","moderator_details","can_manage_pricing","addTableClasses","items","hover","striped","bordered","size","itemsPerPage","pagination","loading","noItemsView","noResults","noItems","scopedSlots","item","index","created_at","format","parseISO","updated_at","data-toggle","title","APIKit","axios","create","baseURL","timeout","DefineErrorLog","errorResponse","definedErrorLog","response","data","errorLogMessage","MILLISECONDS_IN_HOUR","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","argument","dirtyOptions","requiredArgs","arguments","options","additionalDigits","toInteger","RangeError","prototype","call","Date","NaN","date","dateStrings","splitDateString","parseYearResult","parseYear","parseDate","restDateString","year","isNaN","offset","timestamp","getTime","time","parseTime","dirtyDate","result","setFullYear","getUTCFullYear","getUTCMonth","getUTCDate","setHours","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","parseTimezone","dateString","timeString","array","split","test","substr","token","exec","replace","regex","RegExp","captures","match","century","slice","isWeekDate","dayOfYear","parseDateUnit","month","day","week","dayOfWeek","_year","validateWeekDate","isoWeekYear","setUTCFullYear","fourthOfJanuaryDay","getUTCDay","diff","setUTCDate","dayOfISOWeekYear","daysInMonths","isLeapYearIndex","validateDate","validateDayOfYearDate","Math","max","hours","parseTimeUnit","minutes","seconds","validateTime","parseFloat","timezoneString","sign","_hours","validateTimezone","pricingInfoList","onSuccess","onFailure","error","console","log","apiConfig","headers","get","then","catch","GetCoinPricingInfoAPI","pricingInfo","updateInfoJson","updateResult","success","put","addInfoJson","addResult","post","deleteResult","delete"],"mappings":"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","file":"static/js/22.a1ff7bea.chunk.js","sourcesContent":["import { isEmpty, isNumeric, isInt } from 'validator';\r\n\r\nconst PricingValidator = (userInput) => {\r\n    const errors = {};\r\n\r\n    //quantity\r\n    if (userInput.quantity != null) {\r\n        const unparsedQuantity = userInput.quantity.toString();\r\n        const parsedQuantity = parseInt(userInput.quantity);\r\n        if (isEmpty(unparsedQuantity)) {\r\n            errors.quantity = \"Thời lượng là bắt buộc!\"\r\n        } else if (!isInt(unparsedQuantity) || !isNumeric(unparsedQuantity)) {\r\n            errors.quantity = \"Thời lượng chỉ nhận giá trị số nguyên!\"\r\n        } else if (parsedQuantity < 0 || parsedQuantity > 1000000) {\r\n            errors.quantity = \"Thời lượng chỉ nhận giá trị lớn hơn 0 và nhỏ hơn 1000000!\"\r\n        }\r\n    }\r\n    //price\r\n    if (userInput.price != null) {\r\n        const unparsedPrice = userInput.price.toString();\r\n        const parsedPrice = parseInt(userInput.price);\r\n        if (isEmpty(unparsedPrice)) {\r\n            errors.price = \"Đơn giá là bắt buộc!\"\r\n        } else if (!isInt(unparsedPrice) || !isNumeric(unparsedPrice)) {\r\n            errors.price = \"Đơn giá chỉ nhận giá trị số nguyên!\"\r\n        } else if (parsedPrice < 0 || parsedPrice > 1000000) {\r\n            errors.price = \"Đơn giá chỉ nhận giá trị lớn hơn 0 và nhỏ hơn 1000000!\"\r\n        }\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default PricingValidator","import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n    CCol,\r\n    CInput,\r\n    CButton,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalTitle,\r\n    CLabel,\r\n    CFormGroup,\r\n    CForm,\r\n    CAlert,\r\n    CRow,\r\n    CInvalidFeedback\r\n} from '@coreui/react'\r\nimport { GetPricingInfoByIdAPI, UpdatePricingInfoByIdAPI } from '../../../api/pricing'\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nimport PricingValidator from '../../../reusable/PricingValidator';\r\n\r\nconst definePricingName = pricingName => {\r\n    if (pricingName.includes(\"coin_value\")) {\r\n        return \"Coin\";\r\n    }\r\n    else if (pricingName.includes(\"messaging_session\")) {\r\n        return \"Dịch vụ Phiên nhắn tin\";\r\n    } else if (pricingName.includes(\"live_call_session\")) {\r\n        return \"Dịch vụ Phiên gọi trực tuyến\";\r\n    } else if (pricingName.includes(\"translation_call_session\")) {\r\n        return \"Dịch vụ Phòng phiên dịch trực tuyến\";\r\n    } else {\r\n        return \"Không xác định\";\r\n    }\r\n}\r\n\r\nconst UpdatePricingModal = ({ selectedPricingId, show, handleClose, refreshDataFlag, setRefreshDataFlag }) => {\r\n    const [updatePricingId, setUpdatePricingId] = useState(\"\");\r\n    const [updatePricingName, setUpdatePricingName] = useState(\"\");\r\n    const [updatePricingQuantity, setUpdatePricingQuantity] = useState(\"\");\r\n    const [updatePricingQuantityUnit, setUpdatePricingQuantityUnit] = useState(\"\");\r\n    const [updatePricingPrice, setUpdatePricingPrice] = useState(\"\");\r\n    const [updatePricingPriceUnit, setUpdatePricingPriceUnit] = useState(\"\");\r\n    const [fieldErrorMessages, setFieldErrorMessages] = useState({});\r\n    const [updateMessage, setUpdateMessage] = useState(null);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    //this useEffect will be executed every time the modal show\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            if (selectedPricingId != null) {\r\n                const selectedPricingInfo = await trackPromise(GetPricingInfoByIdAPI(selectedPricingId));\r\n                if (selectedPricingInfo != null) {\r\n                    setUpdatePricingId(selectedPricingInfo.id);\r\n                    setUpdatePricingName(selectedPricingInfo.pricing_name);\r\n                    setUpdatePricingQuantity(selectedPricingInfo.quantity);\r\n                    setUpdatePricingQuantityUnit(selectedPricingInfo.quantity_unit)\r\n                    setUpdatePricingPrice(selectedPricingInfo.price);\r\n                    setUpdatePricingPriceUnit(selectedPricingInfo.price_unit);\r\n                }\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [selectedPricingId]);\r\n\r\n    const onSubmitUpdateForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const userInput = {\r\n            \"price\": updatePricingPrice,\r\n        }\r\n\r\n        const formValidate = PricingValidator(userInput);\r\n        const noErrors = Object.keys(formValidate).length === 0;\r\n\r\n        if (noErrors) {\r\n            const updatePricingData = {\r\n                \"price\": parseInt(updatePricingPrice)\r\n            }\r\n\r\n            const updatePricingResult = await trackPromise(UpdatePricingInfoByIdAPI(selectedPricingId, updatePricingData));\r\n\r\n            if (updatePricingResult === true) {\r\n                setUpdateMessage(<CAlert color=\"success\">Cập nhật thành công!</CAlert>);\r\n                setRefreshDataFlag(!refreshDataFlag);\r\n            } else {\r\n                setUpdateMessage(<CAlert color=\"danger\">{updatePricingResult}</CAlert>);\r\n            }\r\n            //clear errors if any\r\n            setFieldErrorMessages({});\r\n        } else {\r\n            setFieldErrorMessages(formValidate);\r\n            setUpdateMessage(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CModal\r\n            show={show}\r\n            onClose={handleClose()}\r\n            closeOnBackdrop={false}\r\n            color=\"success\"\r\n        >\r\n            <CForm onSubmit={onSubmitUpdateForm} method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Cập nhật Đơn Giá</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"pricing-id-input\">ID:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <p name=\"pricing-id-static\">{updatePricingId}</p>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-pricing-name-input\">Tên Đơn giá:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"text\" id=\"update-pricing-name-input\" name=\"service-name\" value={definePricingName(updatePricingName)} readOnly />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-pricing-price-input\">Đơn giá:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CRow className=\"m-0 align-items-center\">\r\n                                <CInput className=\"w-25 mr-2\" type=\"number\" id=\"update-pricing-price-input\" name=\"price\" value={updatePricingPrice} onChange={({ target }) => setUpdatePricingPrice(target.value)} required /> {updatePricingPriceUnit} = {updatePricingQuantity} {updatePricingQuantityUnit}\r\n                                {fieldErrorMessages.price != null ? <CInvalidFeedback\r\n                                    className=\"d-block\"\r\n                                >\r\n                                    {fieldErrorMessages.price}\r\n                                </CInvalidFeedback>\r\n                                    : null}\r\n                            </CRow>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    {updateMessage}\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"success\" type=\"submit\" disabled={promiseInProgress}>\r\n                        Cập nhật\r\n                        </CButton>\r\n                    <CButton color=\"secondary\" onClick={handleClose()}>\r\n                        Đóng\r\n                        </CButton>\r\n                </CModalFooter>\r\n            </CForm>\r\n        </CModal>\r\n    );\r\n}\r\n\r\nexport default UpdatePricingModal","import React, { useState } from 'react'\r\n\r\nimport {\r\n    CCol,\r\n    CInput,\r\n    CButton,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalTitle,\r\n    CLabel,\r\n    CFormGroup,\r\n    CForm,\r\n    CAlert,\r\n    CRow,\r\n    CInvalidFeedback\r\n} from '@coreui/react'\r\n\r\nimport { AddPricingInfoAPI } from '../../../api/pricing';\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nimport PricingValidator from '../../../reusable/PricingValidator';\r\n\r\nconst definePricingName = pricingName => {\r\n    if (pricingName.includes(\"coin_value\")) {\r\n        return \"Coin\";\r\n    }\r\n    else if (pricingName.includes(\"messaging_session\")) {\r\n        return \"Dịch vụ Phiên nhắn tin\";\r\n    } else if (pricingName.includes(\"live_call_session\")) {\r\n        return \"Dịch vụ Phiên gọi trực tuyến\";\r\n    } else if (pricingName.includes(\"translation_call_session\")) {\r\n        return \"Dịch vụ Phòng phiên dịch trực tuyến\";\r\n    } else {\r\n        return \"Không xác định\";\r\n    }\r\n}\r\n\r\nconst defineQuantityUnitName = quantityUnitName => {\r\n    if (quantityUnitName.includes(\"minutes\")) {\r\n        return 'phút';\r\n    } else {\r\n        return 'Không xác định';\r\n    }\r\n}\r\n\r\nconst AddPricingModal = ({ selectedPricingServiceName, show, handleClose, refreshDataFlag, setRefreshDataFlag }) => {\r\n    const [addPricingName] = useState(selectedPricingServiceName);\r\n    const [addPricingQuantity, setAddPricingQuantity] = useState(\"\");\r\n    const [addPricingQuantityUnit] = useState(\"minutes\");\r\n    const [addPricingPrice, setAddPricingPrice] = useState(\"\");\r\n    const [addPricingPriceUnit] = useState(\"coin(s)\");\r\n    const [fieldErrorMessages, setFieldErrorMessages] = useState({});\r\n    const [addMessage, setAddMessage] = useState(null);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    const onSubmitAddForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const userInput = {\r\n            \"quantity\": addPricingQuantity,\r\n            \"price\": addPricingPrice,\r\n        }\r\n\r\n        const formValidate = PricingValidator(userInput);\r\n        const noErrors = Object.keys(formValidate).length === 0;\r\n\r\n        if (noErrors) {\r\n            const addPricingData = {\r\n                \"pricing_name\": addPricingName,\r\n                \"quantity\": parseInt(addPricingQuantity),\r\n                \"quantity_unit\": addPricingQuantityUnit,\r\n                \"price\": parseInt(addPricingPrice),\r\n                \"price_unit\": addPricingPriceUnit\r\n            }\r\n\r\n            const addPricingResult = await trackPromise(AddPricingInfoAPI(addPricingData));\r\n\r\n            if (addPricingResult === true) {\r\n                setAddMessage(<CAlert color=\"success\">Thêm mới thành công!</CAlert>);\r\n                setRefreshDataFlag(!refreshDataFlag);\r\n            } else {\r\n                setAddMessage(<CAlert color=\"danger\">{addPricingResult}</CAlert>)\r\n            }\r\n            //clear errors if any\r\n            setFieldErrorMessages({});\r\n        } else {\r\n            setFieldErrorMessages(formValidate);\r\n            setAddMessage(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CModal\r\n            show={show}\r\n            onClose={handleClose()}\r\n            closeOnBackdrop={false}\r\n            color=\"primary\"\r\n        >\r\n            <CForm onSubmit={onSubmitAddForm} method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Thêm mới Đơn Giá</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"add-pricing-service-name-input\">Tên Đơn giá:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"text\" id=\"add-pricing-service-name-input\" name=\"service-name\" value={definePricingName(addPricingName)} readOnly />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"add-pricing-quantity-input\">Thời lượng:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CRow className=\"m-0\">\r\n                                <CInput type=\"number\" id=\"add-pricing-quantity-input\" className=\"w-25 mr-2\" name=\"quantity\" onChange={({ target }) => setAddPricingQuantity(target.value)} required />\r\n                                {defineQuantityUnitName(addPricingQuantityUnit)}\r\n                                {fieldErrorMessages.quantity != null ? <CInvalidFeedback\r\n                                    className=\"d-block\"\r\n                                >\r\n                                    {fieldErrorMessages.quantity}\r\n                                </CInvalidFeedback>\r\n                                    : null}\r\n                            </CRow>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"add-pricing-price-input\">Đơn giá:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CRow className=\"m-0\">\r\n                                <CInput type=\"number\" className=\"w-25 mr-2\" id=\"add-pricing-price-input\" name=\"price\" onChange={({ target }) => setAddPricingPrice(target.value)} required />\r\n                                {addPricingPriceUnit}\r\n                                {fieldErrorMessages.price != null ? <CInvalidFeedback\r\n                                    className=\"d-block\"\r\n                                >\r\n                                    {fieldErrorMessages.price}\r\n                                </CInvalidFeedback>\r\n                                    : null}\r\n                            </CRow>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    {addMessage}\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"primary\" type=\"submit\" disabled={promiseInProgress}>\r\n                        Thêm\r\n                        </CButton>\r\n                    <CButton color=\"secondary\" onClick={handleClose()}>\r\n                        Đóng\r\n                        </CButton>\r\n                </CModalFooter>\r\n            </CForm>\r\n        </CModal>\r\n    );\r\n}\r\n\r\nexport default AddPricingModal","import React, { useState } from 'react'\r\n\r\nimport {\r\n    CButton,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalTitle,\r\n    CForm,\r\n    CAlert\r\n} from '@coreui/react'\r\n\r\nimport { DeletePricingByIdAPI } from '../../../api/pricing';\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nconst DeletePricingModal = ({ selectedPricingId, show, handleClose, refreshDataFlag, setRefreshDataFlag }) => {\r\n    const [deleteMessage, setDeleteMessage] = useState(null);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    const onSubmitDeleteForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const deletePricingResult = await trackPromise(DeletePricingByIdAPI(selectedPricingId));\r\n\r\n        if (deletePricingResult === true) {\r\n            setDeleteMessage(<CAlert color=\"success\">Xóa thành công!</CAlert>);\r\n            setRefreshDataFlag(!refreshDataFlag);\r\n        } else {\r\n            setDeleteMessage(<CAlert color=\"danger\">{deletePricingResult}</CAlert>);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CModal\r\n            show={show}\r\n            onClose={handleClose()}\r\n            closeOnBackdrop={false}\r\n            color=\"danger\"\r\n        >\r\n            <CForm onSubmit={onSubmitDeleteForm} method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Xóa Đơn Giá ( id: {selectedPricingId} )</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    {deleteMessage ? deleteMessage : \"Bạn chắc chắn muốn xóa Đơn Giá này chứ?\"}\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"danger\" type=\"submit\" disabled={promiseInProgress}>\r\n                        Xóa\r\n                </CButton>\r\n                    <CButton color=\"secondary\" onClick={handleClose()}>\r\n                        Đóng\r\n                </CButton>\r\n                </CModalFooter>\r\n            </CForm>\r\n        </CModal>\r\n    );\r\n}\r\n\r\nexport default DeletePricingModal","import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CDataTable,\r\n    CRow,\r\n    CAlert,\r\n    CCardHeader,\r\n    CButton\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport UpdatePricingModal from '../manage-pricing/UpdatePricingModal';\r\nimport AddPricingModal from '../manage-pricing/AddPricingModal';\r\nimport DeletePricingModal from '../manage-pricing/DeletePricingModal';\r\n\r\nimport { format, parseISO } from 'date-fns';\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nimport {\r\n    GetMessagingSessionPricingInfoListAPI,\r\n    GetLiveCallSessionPricingInfoListAPI,\r\n    GetTranslationCallSessionPricingInfoListAPI,\r\n    GetCoinValuePricingInfoListAPI\r\n} from '../../../api/pricing';\r\n\r\nconst defineQuantityUnitName = quantityUnitName => {\r\n    if (quantityUnitName.includes(\"minutes\")) {\r\n        return 'phút';\r\n    } else {\r\n        return 'Không xác định';\r\n    }\r\n}\r\n\r\nconst fields = [\r\n    { key: 'price', label: 'Đơn giá', _style: { width: '20%' } },\r\n    { key: 'created_at', label: 'Thời gian tạo', _style: { width: '22%' } },\r\n    { key: 'updated_at', label: 'Thời gian cập nhật', _style: { width: '22%' } },\r\n    { key: 'action', label: '', _style: { width: '6%' } }\r\n]\r\n\r\nconst ManagePricing = () => {\r\n    const [updatePricingModalShow, setUpdatePricingModalShow] = useState(false);\r\n    const [addPricingModalShow, setAddPricingModalShow] = useState(false);\r\n    const [deletePricingModalShow, setDeletePricingModalShow] = useState(false);\r\n    const [selectedPricingId, setSelectedPricingId] = useState(null);\r\n    const [selectedServiceName, setSelectedServiceName] = useState(null);\r\n    const [coinValuePricingInfoList, setCoinValuePricingInfoList] = useState(null);\r\n    const [messagingSessionPricingInfoList, setMessagingSessionPricingInfoList] = useState(null);\r\n    const [liveCallSessionPricingInfoList, setLiveCallSessionPricingInfoList] = useState(null);\r\n    const [translationCallSessionPricingInfoList, setTranslationCallSessionPricingInfoList] = useState(null);\r\n    const [refreshDataFlag, setRefreshDataFlag] = useState(false);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const coinValuePricingInfoList = await trackPromise(GetCoinValuePricingInfoListAPI());\r\n            const messagingSessionPricingInfoList = await trackPromise(GetMessagingSessionPricingInfoListAPI());\r\n            const liveCallSessionPricingInfoList = await trackPromise(GetLiveCallSessionPricingInfoListAPI());\r\n            const translationCallSessionPricingInfoList = await trackPromise(GetTranslationCallSessionPricingInfoListAPI());\r\n            setCoinValuePricingInfoList(coinValuePricingInfoList);\r\n            setMessagingSessionPricingInfoList(messagingSessionPricingInfoList);\r\n            setLiveCallSessionPricingInfoList(liveCallSessionPricingInfoList);\r\n            setTranslationCallSessionPricingInfoList(translationCallSessionPricingInfoList);\r\n        }\r\n        fetchData();\r\n    }, [refreshDataFlag])\r\n\r\n    const updatePricingOnclick = (pricingId) => {\r\n        //open the update pricing modal\r\n        setUpdatePricingModalShow(true);\r\n        //set params\r\n        setSelectedPricingId(pricingId);\r\n    }\r\n\r\n    const addPricingOnclick = (serviceName) => {\r\n        //open the add pricing modal\r\n        setAddPricingModalShow(true);\r\n        //set params\r\n        setSelectedServiceName(serviceName);\r\n    }\r\n\r\n    const deletePricingOnclick = (pricingId) => {\r\n        //open the delete pricing modal\r\n        setDeletePricingModalShow(true);\r\n        //set params\r\n        setSelectedPricingId(pricingId);\r\n    }\r\n\r\n    const hideUpdateModal = () => {\r\n        setUpdatePricingModalShow(false);\r\n    }\r\n\r\n    const hideAddModal = () => {\r\n        setAddPricingModalShow(false);\r\n    }\r\n\r\n    const hideDeleteModal = () => {\r\n        setDeletePricingModalShow(false);\r\n    }\r\n\r\n    //check permission\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    const canManagePricing = userInfo.moderator_details.can_manage_pricing;\r\n    if (canManagePricing) {\r\n        return (\r\n            <CRow>\r\n                <CCol>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            <h3 className=\"m-0\">Đơn giá Coin:</h3>\r\n                        </CCardHeader>\r\n                        <CCardBody className=\"pt-0 pb-0\">\r\n                            <CDataTable\r\n                                addTableClasses=\"text-break\"\r\n                                items={coinValuePricingInfoList}\r\n                                fields={fields}\r\n                                hover\r\n                                striped\r\n                                bordered\r\n                                size=\"sm\"\r\n                                itemsPerPage={20}\r\n                                pagination\r\n                                loading={promiseInProgress}\r\n                                noItemsView={{ noResults: 'Không có kết quả tìm kiếm trùng khớp', noItems: 'Không có dữ liệu' }}\r\n                                scopedSlots={{\r\n                                    'price':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {item.quantity + \" \" + item.quantity_unit + \" = \" + item.price + \" \" + item.price_unit}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'created_at':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {(item.created_at == null || item.created_at === \"\") ? \"\" : format(parseISO(item.created_at), 'dd-MM-yyyy hh:mm:ss')}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'updated_at':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {(item.updated_at == null || item.updated_at === \"\") ? \"\" : format(parseISO(item.updated_at), 'dd-MM-yyyy hh:mm:ss')}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'action':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n\r\n                                                    <button type=\"button\" className=\"table-action-button mr-2\" data-toggle=\"tooltip\" title=\"Cập nhật\">\r\n                                                        <CIcon name=\"cil-pencil\" onClick={() => updatePricingOnclick(item.id)}>\r\n                                                        </CIcon>\r\n                                                    </button>\r\n                                                </td>\r\n                                            )\r\n                                        },\r\n                                }}\r\n                            />\r\n                        </CCardBody>\r\n                    </CCard>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            <h3 className=\"m-0\">Đơn giá dịch vụ Phiên Nhắn Tin:</h3>\r\n                        </CCardHeader>\r\n                        <CCardBody className=\"pt-0 pb-0\">\r\n                            <CDataTable\r\n                                addTableClasses=\"text-break\"\r\n                                items={messagingSessionPricingInfoList}\r\n                                fields={fields}\r\n                                hover\r\n                                striped\r\n                                bordered\r\n                                size=\"sm\"\r\n                                itemsPerPage={20}\r\n                                pagination\r\n                                loading={promiseInProgress}\r\n                                noItemsView={{ noResults: 'Không có kết quả tìm kiếm trùng khớp', noItems: 'Không có dữ liệu' }}\r\n                                scopedSlots={{\r\n                                    'price':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {item.quantity + \" \" + item.quantity_unit + \" = \" + item.price + \" \" + item.price_unit}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'created_at':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {(item.created_at == null || item.created_at === \"\") ? \"\" : format(parseISO(item.created_at), 'dd-MM-yyyy hh:mm:ss')}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'updated_at':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {(item.updated_at == null || item.updated_at === \"\") ? \"\" : format(parseISO(item.updated_at), 'dd-MM-yyyy hh:mm:ss')}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'action':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n\r\n                                                    <button type=\"button\" className=\"table-action-button mr-2\" data-toggle=\"tooltip\" title=\"Cập nhật\">\r\n                                                        <CIcon name=\"cil-pencil\" onClick={() => updatePricingOnclick(item.id)}>\r\n                                                        </CIcon>\r\n                                                    </button>\r\n                                                </td>\r\n                                            )\r\n                                        },\r\n                                }}\r\n                            />\r\n                        </CCardBody>\r\n                    </CCard>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            <h3 className=\"m-0\">Đơn giá dịch vụ Phiên Gọi Trực Tuyến:</h3>\r\n                            <CButton color=\"primary\" className=\"mt-2 d-flex align-items-center\" onClick={() => addPricingOnclick(\"live_call_session\")}>\r\n                                <CIcon name=\"cilPlus\" size=\"sm\" className=\"mr-1\" ></CIcon>Thêm mới Đơn Giá dịch vụ Phiên Gọi Trực Tuyến</CButton>\r\n                        </CCardHeader>\r\n                        <CCardBody className=\"pt-0 pb-0\">\r\n                            <CDataTable\r\n                                addTableClasses=\"text-break\"\r\n                                items={liveCallSessionPricingInfoList}\r\n                                fields={fields}\r\n                                hover\r\n                                striped\r\n                                bordered\r\n                                size=\"sm\"\r\n                                itemsPerPage={20}\r\n                                pagination\r\n                                loading={promiseInProgress}\r\n                                noItemsView={{ noResults: 'Không có kết quả tìm kiếm trùng khớp', noItems: 'Không có dữ liệu' }}\r\n                                scopedSlots={{\r\n                                    'price':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {item.quantity + \" \" + defineQuantityUnitName(item.quantity_unit) + \" = \" + item.price + \" \" + item.price_unit}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'created_at':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {(item.created_at == null || item.created_at === \"\") ? \"\" : format(parseISO(item.created_at), 'dd-MM-yyyy hh:mm:ss')}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'updated_at':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {(item.updated_at == null || item.updated_at === \"\") ? \"\" : format(parseISO(item.updated_at), 'dd-MM-yyyy hh:mm:ss')}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'action':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n\r\n                                                    <button type=\"button\" className=\"table-action-button mr-2\" data-toggle=\"tooltip\" title=\"Cập nhật\">\r\n                                                        <CIcon name=\"cil-pencil\" onClick={() => updatePricingOnclick(item.id)}>\r\n                                                        </CIcon>\r\n                                                    </button>\r\n                                                    <button type=\"button\" className=\"table-action-button mr-2\" data-toggle=\"tooltip\" title=\"Xóa\">\r\n                                                        <CIcon name=\"cil-x\" onClick={() => deletePricingOnclick(item.id)}>\r\n                                                        </CIcon>\r\n                                                    </button>\r\n                                                </td>\r\n                                            )\r\n                                        },\r\n                                }}\r\n                            />\r\n                        </CCardBody>\r\n                    </CCard>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            <h3 className=\"m-0\">Đơn giá dịch vụ Phòng Phiên Dịch Trực Tuyến:</h3>\r\n                            <CButton color=\"primary\" className=\"mt-2 d-flex align-items-center\" onClick={() => addPricingOnclick(\"translation_call_session\")}>\r\n                                <CIcon name=\"cilPlus\" size=\"sm\" className=\"mr-1\" ></CIcon>Thêm mới Đơn Giá dịch vụ Phòng Phiên Dịch</CButton>\r\n                        </CCardHeader>\r\n                        <CCardBody className=\"pt-0 pb-0\">\r\n                            <CDataTable\r\n                                addTableClasses=\"text-break\"\r\n                                items={translationCallSessionPricingInfoList}\r\n                                fields={fields}\r\n                                hover\r\n                                striped\r\n                                bordered\r\n                                size=\"sm\"\r\n                                itemsPerPage={20}\r\n                                pagination\r\n                                loading={promiseInProgress}\r\n                                noItemsView={{ noResults: 'Không có kết quả tìm kiếm trùng khớp', noItems: 'Không có dữ liệu' }}\r\n                                scopedSlots={{\r\n                                    'price':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {item.quantity + \" \" + defineQuantityUnitName(item.quantity_unit) + \" = \" + item.price + \" \" + item.price_unit}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'created_at':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {(item.created_at == null || item.created_at === \"\") ? \"\" : format(parseISO(item.created_at), 'dd-MM-yyyy hh:mm:ss')}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'updated_at':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {(item.updated_at == null || item.updated_at === \"\") ? \"\" : format(parseISO(item.updated_at), 'dd-MM-yyyy hh:mm:ss')}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'action':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n\r\n                                                    <button type=\"button\" className=\"table-action-button mr-2\" data-toggle=\"tooltip\" title=\"Cập nhật\">\r\n                                                        <CIcon name=\"cil-pencil\" onClick={() => updatePricingOnclick(item.id)}>\r\n                                                        </CIcon>\r\n                                                    </button>\r\n                                                    <button type=\"button\" className=\"table-action-button mr-2\" data-toggle=\"tooltip\" title=\"Xóa\">\r\n                                                        <CIcon name=\"cil-x\" onClick={() => deletePricingOnclick(item.id)}>\r\n                                                        </CIcon>\r\n                                                    </button>\r\n                                                </td>\r\n                                            )\r\n                                        },\r\n                                }}\r\n                            />\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n                {/* POPUP UPDATE PRICING */}\r\n                {(updatePricingModalShow && selectedPricingId != null) ?\r\n                    <UpdatePricingModal\r\n                        selectedPricingId={selectedPricingId}\r\n                        show={updatePricingModalShow}\r\n                        handleClose={() => hideUpdateModal}\r\n                        refreshDataFlag={refreshDataFlag}\r\n                        setRefreshDataFlag={setRefreshDataFlag}\r\n                    />\r\n                    : null}\r\n                {/* POPUP ADD PRICING */}\r\n                {(addPricingModalShow && selectedServiceName != null) ?\r\n                    <AddPricingModal\r\n                        selectedPricingServiceName={selectedServiceName}\r\n                        show={addPricingModalShow}\r\n                        handleClose={() => hideAddModal}\r\n                        refreshDataFlag={refreshDataFlag}\r\n                        setRefreshDataFlag={setRefreshDataFlag}\r\n                    />\r\n                    : null}\r\n                {/* POPUP DELETE PRICING */}\r\n                {(deletePricingModalShow && selectedPricingId != null) ?\r\n                    <DeletePricingModal\r\n                        selectedPricingId={selectedPricingId}\r\n                        show={deletePricingModalShow}\r\n                        handleClose={() => hideDeleteModal}\r\n                        refreshDataFlag={refreshDataFlag}\r\n                        setRefreshDataFlag={setRefreshDataFlag}\r\n                    />\r\n                    : null}\r\n            </CRow >\r\n        );\r\n    } else {\r\n        return (\r\n            <CAlert color=\"danger\">Bạn không có quyền sử dụng chức năng này!</CAlert>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ManagePricing","// import axios from 'axios';\r\n\r\n// let APIKit = axios.create({\r\n//     baseURL: process.env.BACKEND_URL,\r\n//     timeout: 10000\r\n// })\r\n\r\n// export default APIKit;\r\n\r\nimport axios from 'axios';\r\n\r\n// Create axios client, pre-configured with baseURL\r\nlet APIKit = axios.create({\r\n  baseURL: 'https://got-english-backend-production-swiyh5bc4q-de.a.run.app',\r\n  timeout: 10000,\r\n});\r\n\r\n// Set JSON Web Token in Client to be included in all calls\r\n// export const setClientToken = token => {\r\n//   APIKit.interceptors.request.use(function (config) {\r\n//     config.headers.Authorization = `Bearer ${token}`;\r\n//     return config;\r\n//   });\r\n// };\r\n\r\nexport default APIKit;","const DefineErrorLog = (errorResponse) => {\r\n    let definedErrorLog = \"\";\r\n    if (errorResponse != null) {\r\n        if (errorResponse.response != null) {\r\n            if (errorResponse.response.data != null) {\r\n                const errorLogMessage = errorResponse.response.data;\r\n                if (errorLogMessage.includes(\"Account is already suspended.\")) {\r\n                    definedErrorLog = \"Tài khoản này đã bị khóa!\";\r\n                } else if (errorLogMessage.includes(\"account unavailable\")) {\r\n                    definedErrorLog = \"Email đã được sử dụng!\";\r\n                } else if (errorLogMessage.includes(\"'username'\")) {\r\n                    definedErrorLog = \"Tên tài khoản đã được sử dụng!\";\r\n                } else if (errorLogMessage.includes(\"Account is currently in a messaging session\")) {\r\n                    definedErrorLog = \"Tài khoản này hiện đang sử dụng dịch vụ Phiên nhắn tin! Chưa thể khóa...\";\r\n                } else if (errorLogMessage.includes(\"Account is currently in a live call session\")) {\r\n                    definedErrorLog = \"Tài khoản này hiện đang sử dụng dịch vụ Phiên gọi trực tuyến! Chưa thể khóa...\";\r\n                } else if (errorLogMessage.includes(\"Account is currently in a translation session\")) {\r\n                    definedErrorLog = \"Tài khoản này hiện đang sử dụng dịch vụ Phòng phiên dịch! Chưa thể khóa...\";\r\n                } else if (errorLogMessage.includes(\"Account is not yet suspended.\")) {\r\n                    definedErrorLog = \"Tài khoản này đã được mở khóa!\";\r\n                } else if (errorLogMessage.includes(\"You don't have permission\")) {\r\n                    definedErrorLog = \"Tài khoản của bạn không có quyền để thực hiện thao tác này!\";\r\n                } else {\r\n                    definedErrorLog = \"Đã có lỗi xảy ra!\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return definedErrorLog;\r\n}\r\n\r\nexport default DefineErrorLog","import toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (isNaN(date) || !date) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time) || time === null) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString; // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: null\n  };\n  var year = captures[1] && parseInt(captures[1]);\n  var century = captures[2] && parseInt(captures[2]);\n  return {\n    year: century == null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return null;\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return null;\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return null; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import APIKit from './APIKit';\r\nimport DefineErrorLog from '../reusable/DefineErrorLog'\r\n\r\nexport const GetCoinValuePricingInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfoList = null;\r\n    const onSuccess = data => {\r\n        pricingInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?pricing_name=coin_value', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfoList;\r\n}\r\n\r\nexport const GetMessagingSessionPricingInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfoList = null;\r\n    const onSuccess = data => {\r\n        pricingInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?pricing_name=messaging_session', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfoList;\r\n}\r\n\r\nexport const GetLiveCallSessionPricingInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfoList = null;\r\n    const onSuccess = data => {\r\n        pricingInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?pricing_name=live_call_session', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfoList;\r\n}\r\n\r\nexport const GetTranslationCallSessionPricingInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfoList = null;\r\n    const onSuccess = data => {\r\n        pricingInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?pricing_name=translation_call_session', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfoList;\r\n}\r\n\r\nexport const GetCoinPricingInfoAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfoList = null;\r\n    const onSuccess = data => {\r\n        //only first data\r\n        pricingInfoList = data.data.data[0];\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?pricing_name=coin_value', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfoList;\r\n}\r\n\r\nexport const GetPricingInfoByIdAPI = async (pricingId) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfo = null;\r\n    const onSuccess = data => {\r\n        //only first data\r\n        pricingInfo = data.data.data[0];\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?id=' + pricingId, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfo;\r\n}\r\n\r\nexport const UpdatePricingInfoByIdAPI = async (pricingId, updateInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let updateResult = null;\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        updateResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        updateResult = DefineErrorLog(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.put('/pricings/' + pricingId + \"/update\", updateInfoJson, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return updateResult;\r\n}\r\n\r\nexport const AddPricingInfoAPI = async (addInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let addResult = null;\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        addResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        addResult = DefineErrorLog(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.post('/pricings', addInfoJson, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return addResult;\r\n}\r\n\r\nexport const DeletePricingByIdAPI = async (pricingId) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let deleteResult = null;\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        deleteResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        deleteResult = DefineErrorLog(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.delete('/pricings/' + pricingId + \"/delete\", apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return deleteResult;\r\n}"],"sourceRoot":""}