{"version":3,"sources":["api/APIKit.js","api/user.js","firebase/firebase.js","views/pages/my-profile/MyProfile.js"],"names":["APIKit","axios","create","baseURL","timeout","setClientToken","token","interceptors","request","use","config","headers","Authorization","GetUserInfoAPI","username","a","JSON","parse","localStorage","getItem","userInfo","onSuccess","data","onFailure","error","console","log","get","params","then","catch","GetModeratorInfoListAPI","moderatorInfoList","role","UpdateUserInfoByUserIdAPI","userID","updateInfoJson","updateResult","response","success","put","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","MyProfile","history","useHistory","useState","fullname","setFullname","setUsername","password","setPassword","email","setEmail","address","setAddress","phone_number","phoneNumber","setPhoneNumber","parseISO","birthday","setBirthday","avatar_url","avtSrc","setAvtSrc","confirmModalOpen","setConfirmModalOpen","updateMessage","setUpdateMessage","uploadToStorage","imageURL","imagesRef","storage","ref","child","id","url","cb","xhr","XMLHttpRequest","open","responseType","addEventListener","send","getFileBlob","blob","snapshot","getDownloadURL","onSubmitUpdateForm","e","preventDefault","userInput","newAvtSrc","format","color","newUserInfo","setItem","stringify","push","registerLocale","vi","onSubmit","sm","className","width","src","height","onClick","document","getElementById","click","onchange","img","fileSize","target","files","size","fileType","type","blobUrl","URL","createObjectURL","revokeObjectURL","name","htmlFor","value","onChange","ignoreReadonly","maxDate","locale","selected","placeholderText","date","required","dateFormat","created_at","updated_at","show","onClose","closeOnBackdrop","closeButton"],"mappings":"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","file":"static/js/29.0ee8c2b7.chunk.js","sourcesContent":["// import axios from 'axios';\r\n\r\n// let APIKit = axios.create({\r\n//     baseURL: process.env.BACKEND_URL,\r\n//     timeout: 10000\r\n// })\r\n\r\n// export default APIKit;\r\n\r\nimport axios from 'axios';\r\n\r\n// Create axios client, pre-configured with baseURL\r\nlet APIKit = axios.create({\r\n  baseURL: 'https://got-english-backend-production-swiyh5bc4q-de.a.run.app',\r\n  timeout: 10000,\r\n});\r\n\r\n// Set JSON Web Token in Client to be included in all calls\r\nexport const setClientToken = token => {\r\n  APIKit.interceptors.request.use(function (config) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n  });\r\n};\r\n\r\nexport default APIKit;","import APIKit, { setClientToken } from './APIKit';\r\n\r\nexport const GetUserInfoAPI = async (username) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let userInfo = null;\r\n    const onSuccess = data => {\r\n        //only first data\r\n        userInfo = data.data.data[0];\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    setClientToken(token);\r\n\r\n    await APIKit.get('/accounts', {\r\n        params: {\r\n            username: username,\r\n        }\r\n    })\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return userInfo;\r\n}\r\n\r\nexport const GetModeratorInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let moderatorInfoList = null;\r\n    const onSuccess = data => {\r\n        moderatorInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    setClientToken(token);\r\n\r\n    await APIKit.get('/accounts', {\r\n        params: {\r\n            role: 'Moderator',\r\n        }\r\n    })\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return moderatorInfoList;\r\n}\r\n\r\nexport const UpdateUserInfoByUserIdAPI = async (userID, updateInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let updateResult = null;\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        updateResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n        updateResult = false;\r\n    }\r\n\r\n    setClientToken(token);\r\n\r\n    await APIKit.put('/accounts/' + userID + '/update', updateInfoJson)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return updateResult;\r\n}\r\n\r\nexport const CreateModeratorAPI = async (moderatorInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let createResult = null;\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        createResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n        createResult = false;\r\n    }\r\n\r\n    setClientToken(token);\r\n\r\n    await APIKit.post('/accounts', moderatorInfoJson)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return createResult;\r\n}","import firebase from 'firebase'\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB0l31PMIfIMgDceOjlcOimsHUFSccvzjU\",\r\n    authDomain: \"gotenglish-app.firebaseapp.com\",\r\n    projectId: \"gotenglish-app\",\r\n    storageBucket: \"gotenglish-app.appspot.com\",\r\n    messagingSenderId: \"392616753385\",\r\n    appId: \"1:392616753385:web:cf70a3478c6f8ea51d5878\",\r\n    measurementId: \"G-T0K0LB12VF\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport default firebase","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CForm,\r\n    CInputFile,\r\n    CInput,\r\n    CRow,\r\n    CLabel,\r\n    CModal,\r\n    CModalFooter,\r\n    CModalBody,\r\n    CModalHeader,\r\n    CModalTitle,\r\n    CAlert\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport { UpdateUserInfoByUserIdAPI, GetUserInfoAPI } from '../../../api/user';\r\nimport firebase from '../../../firebase/firebase';\r\n\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport vi from \"date-fns/locale/vi\";\r\nimport { format, parseISO } from 'date-fns';\r\n\r\n\r\nconst MyProfile = () => {\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    const history = useHistory();\r\n\r\n    const [fullname, setFullname] = useState(userInfo.fullname);\r\n    const [username, setUsername] = useState(userInfo.username);\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(userInfo.email);\r\n    const [address, setAddress] = useState(userInfo.address);\r\n    const [phoneNumber, setPhoneNumber] = useState(userInfo.phone_number);\r\n    const [birthday, setBirthday] = useState(parseISO(userInfo.birthday));\r\n    const [avtSrc, setAvtSrc] = useState(userInfo.avatar_url);\r\n    const [confirmModalOpen, setConfirmModalOpen] = useState(false);\r\n    const [updateMessage, setUpdateMessage] = useState(null);\r\n\r\n    const getFileBlob = (url, cb) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", url);\r\n        xhr.responseType = \"blob\";\r\n        xhr.addEventListener('load', function () {\r\n            cb(xhr.response);\r\n        });\r\n        xhr.send();\r\n    };\r\n\r\n    const uploadToStorage = (imageURL) => {\r\n        const storageRef = firebase.storage().ref();\r\n        const imagesRef = storageRef.child('uploads/' + userInfo.id);\r\n\r\n        getFileBlob(imageURL, blob => {\r\n            imagesRef.put(blob).then(function (snapshot) {\r\n                console.log('Uploaded a blob!');\r\n            });\r\n\r\n        });\r\n\r\n        return imagesRef.getDownloadURL();\r\n    }\r\n\r\n    const avtUrlUploadOnclick = () => {\r\n        document.getElementById('avtUrlInput').click();\r\n        document.getElementById('avtUrlInput').onchange = (e) => {\r\n            const img = document.getElementById(\"myProfileAvt\");\r\n            const fileSize = e.target.files[0].size;\r\n            const fileType = e.target.files[0].type;\r\n            console.log(fileSize, fileType);\r\n            if (fileSize <= 300000 && (fileType == \"image/jpeg\" || fileType == \"image/png\" || fileType == \"image/jpg\")) {\r\n                // create blob url\r\n                const blobUrl = URL.createObjectURL(e.target.files[0]);\r\n                // use blob url to preview avatar\r\n                img.src = blobUrl;\r\n                setAvtSrc(blobUrl);\r\n                img.onchange = () => {\r\n                    // delete blob url when the avatar loaded successfully\r\n                    URL.revokeObjectURL(blobUrl);\r\n                }\r\n            } else {\r\n                setUpdateMessage(<CAlert color=\"danger\">Hệ thống chỉ chấp nhận file hình ảnh JPEG, JPG, PNG và dung lượng không quá 300KB</CAlert>);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onSubmitUpdateForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let userInput = {};\r\n\r\n        //upload local image to Firebase Storage\r\n        const newAvtSrc = await uploadToStorage(avtSrc);\r\n        console.log(newAvtSrc);\r\n\r\n        if (password === \"\") {\r\n            userInput = {\r\n                \"fullname\": fullname,\r\n                \"username\": username,\r\n                \"email\": email,\r\n                \"address\": address,\r\n                \"phone_number\": phoneNumber,\r\n                \"birthday\": format(birthday, 'yyyy/MM/dd'),\r\n                \"avatar_url\": newAvtSrc,\r\n            }\r\n        } else {\r\n            userInput = {\r\n                \"fullname\": fullname,\r\n                \"username\": username,\r\n                \"password\": password,\r\n                \"email\": email,\r\n                \"address\": address,\r\n                \"phone_number\": phoneNumber,\r\n                \"birthday\": format(birthday, 'yyyy/MM/dd'),\r\n                \"avatar_url\": newAvtSrc,\r\n            }\r\n        }\r\n\r\n        console.log(userInput);\r\n\r\n        const updateResult = await UpdateUserInfoByUserIdAPI(userInfo.id, userInput);\r\n\r\n        if (updateResult === true) {\r\n            setUpdateMessage(<CAlert color=\"success\">Cập nhật thành công!</CAlert>);\r\n            const newUserInfo = await GetUserInfoAPI(username);\r\n            localStorage.setItem(\"userInfo\", JSON.stringify(newUserInfo));\r\n            history.push(\"/my-profile\");\r\n        } else {\r\n            setUpdateMessage(<CAlert color=\"danger\">Cập nhật thất bại!</CAlert>);\r\n        }\r\n\r\n        setConfirmModalOpen(false);\r\n    }\r\n\r\n    registerLocale(\"vi\", vi);\r\n\r\n    return (\r\n        <CCol>\r\n            {updateMessage}\r\n            <CCard>\r\n                <CCardBody>\r\n                    <CForm onSubmit={onSubmitUpdateForm}>\r\n                        <CRow>\r\n                            <CCol sm=\"4\" className=\"text-center\">\r\n                                <div className=\"rounded-circle d-inline-block overflow-hidden border-2 border-dark position-relative\" width=\"auto\">\r\n                                    <img id=\"myProfileAvt\" src={userInfo.avatar_url != \"\" ? userInfo.avatar_url : \"/avatars/default_avt.png\"} width=\"250\" height=\"250\" />\r\n                                    <CButton\r\n                                        onClick={avtUrlUploadOnclick}\r\n                                        color=\"info\"\r\n                                        className=\"rounded-circle upload-avt-button position-absolute\"\r\n                                        width=\"150\">\r\n                                        <CIcon name=\"cil-pencil\"></CIcon>\r\n                                    </CButton>\r\n                                </div>\r\n                                <CInputFile\r\n                                    className=\"d-none\"\r\n                                    id=\"avtUrlInput\"\r\n                                    name=\"input-avatar-url\"\r\n                                />\r\n                            </CCol>\r\n                            <CCol sm=\"7\">\r\n                                <CRow>\r\n                                    <CCol>\r\n                                        <CLabel htmlFor=\"uuid\">UUID:</CLabel>\r\n                                        <p>{userInfo.id}</p>\r\n                                    </CCol>\r\n                                </CRow>\r\n                                <CRow>\r\n                                    <CCol>\r\n                                        <CLabel htmlFor=\"address\">Họ và tên:</CLabel>\r\n                                        <CInput value={fullname} onChange={({ target }) => setFullname(target.value)} />\r\n                                    </CCol>\r\n                                </CRow>\r\n                                <CRow className=\"mt-2\">\r\n                                    <CCol>\r\n                                        <CLabel htmlFor=\"username\">Tên đăng nhập:</CLabel>\r\n                                        <CInput value={username} onChange={({ target }) => setUsername(target.value)} />\r\n                                    </CCol>\r\n                                    <CCol>\r\n                                        <CLabel htmlFor=\"password\">Mật khẩu:</CLabel>\r\n                                        <CInput type=\"password\" value={password} onChange={({ target }) => setPassword(target.value)} />\r\n                                    </CCol>\r\n                                </CRow>\r\n                                <CRow className=\"mt-2\">\r\n                                    <CCol>\r\n                                        <CLabel htmlFor=\"phone_number\">Số điện thoại:</CLabel>\r\n                                        <CInput value={phoneNumber} onChange={({ target }) => setPhoneNumber(target.value)} />\r\n                                    </CCol>\r\n                                    <CCol>\r\n                                        <CLabel htmlFor=\"email\">Email:</CLabel>\r\n                                        <CInput value={email} onChange={({ target }) => setEmail(target.value)} />\r\n                                    </CCol>\r\n                                </CRow>\r\n                                <CRow className=\"mt-2\">\r\n                                    <CCol>\r\n                                        <CLabel htmlFor=\"birthday\">Ngày sinh:</CLabel>\r\n                                        <DatePicker\r\n                                            ignoreReadonly\r\n                                            maxDate=\"-1y\"\r\n                                            className=\"form-control\"\r\n                                            locale=\"vi\"\r\n                                            selected={birthday}\r\n                                            placeholderText=\"Ngày-Tháng-Năm\"\r\n                                            onChange={date => setBirthday(date)}\r\n                                            required={true}\r\n                                            value={birthday}\r\n                                            dateFormat=\"dd-MM-yyyy\" />\r\n                                    </CCol>\r\n                                    <CCol>\r\n                                        <CLabel htmlFor=\"address\">Địa chỉ:</CLabel>\r\n                                        <CInput value={address} onChange={({ target }) => setAddress(target.value)} />\r\n                                    </CCol>\r\n                                </CRow>\r\n                                <CRow className=\"mt-2\">\r\n                                    <CCol>\r\n                                        <CLabel htmlFor=\"createdAt\">Tài khoản được tạo lúc:</CLabel>\r\n                                        <p>{format(parseISO(userInfo.created_at), 'dd-MM-yyyy HH:mm:ss')}</p>\r\n                                    </CCol>\r\n                                    <CCol>\r\n                                        <CLabel htmlFor=\"updatedAt\">Lần cập nhật gần nhất lúc:</CLabel>\r\n                                        <p>{format(parseISO(userInfo.updated_at), 'dd-MM-yyyy HH:mm:ss')}</p>\r\n                                    </CCol>\r\n                                </CRow>\r\n                                <CRow className=\"mt-2 text-center\">\r\n                                    <CCol>\r\n                                        <CButton className=\"mr-2\" color=\"success\" onClick={() => setConfirmModalOpen(true)}>Cập nhật</CButton>\r\n                                        <CButton color=\"secondary\" onClick={() => history.push(\"/\")}>Trở về Trang Chủ</CButton >\r\n                                    </CCol>\r\n                                </CRow>\r\n                            </CCol>\r\n                        </CRow>\r\n                        <CModal\r\n                            show={confirmModalOpen}\r\n                            onClose={() => setConfirmModalOpen(false)}\r\n                            closeOnBackdrop={false}\r\n                            color=\"success\">\r\n                            <CModalHeader closeButton>\r\n                                <CModalTitle>Xác nhận cập nhật</CModalTitle>\r\n                            </CModalHeader>\r\n                            <CModalBody>\r\n                                <strong>Thông tin sau khi cập nhật:</strong>\r\n                                <CRow>\r\n                                    <CCol sm=\"4\">\r\n                                        <CLabel>Họ và tên:</CLabel>\r\n                                    </CCol>\r\n                                    <CCol>{fullname}</CCol>\r\n                                </CRow>\r\n                                <CRow>\r\n                                    <CCol sm=\"4\">\r\n                                        <CLabel>Tên đăng nhập:</CLabel>\r\n                                    </CCol>\r\n                                    <CCol>{username}</CCol>\r\n                                </CRow>\r\n                                <CRow>\r\n                                    <CCol sm=\"4\">\r\n                                        <CLabel>Mật khẩu:</CLabel>\r\n                                    </CCol>\r\n                                    <CCol>{password == \"\" ? \"[Không thay đổi]\" : password}</CCol>\r\n                                </CRow>\r\n                                <CRow>\r\n                                    <CCol sm=\"4\">\r\n                                        <CLabel>Email:</CLabel>\r\n                                    </CCol>\r\n                                    <CCol>{email}</CCol>\r\n                                </CRow>\r\n                                <CRow>\r\n                                    <CCol sm=\"4\">\r\n                                        <CLabel>Ngày sinh:</CLabel>\r\n                                    </CCol>\r\n                                    <CCol>{format(birthday, 'dd-MM-yyyy')}</CCol>\r\n                                </CRow>\r\n                                <CRow>\r\n                                    <CCol sm=\"4\">\r\n                                        <CLabel>Điện thoại:</CLabel>\r\n                                    </CCol>\r\n                                    <CCol>{phoneNumber}</CCol>\r\n                                </CRow>\r\n                                <CRow>\r\n                                    <CCol sm=\"4\">\r\n                                        <CLabel>Địa chỉ:</CLabel>\r\n                                    </CCol>\r\n                                    <CCol>{address}</CCol>\r\n                                </CRow>\r\n                                <CRow>\r\n                                    <CCol sm=\"4\">\r\n                                        <CLabel>Ảnh đại diện:</CLabel>\r\n                                    </CCol>\r\n                                    <CCol><img src={avtSrc} width=\"80\" height=\"80\" /></CCol>\r\n                                </CRow>\r\n                            </CModalBody>\r\n                            <CModalFooter>\r\n                                <CButton type=\"submit\" color=\"success\">\r\n                                    Xác nhận\r\n                            </CButton>\r\n                                <CButton color=\"secondary\" onClick={() => setConfirmModalOpen(false)}>\r\n                                    Hủy\r\n                            </CButton>\r\n                            </CModalFooter>\r\n                        </CModal>\r\n                    </CForm>\r\n                </CCardBody>\r\n            </CCard>\r\n        </CCol>\r\n\r\n    )\r\n}\r\n\r\nexport default MyProfile"],"sourceRoot":""}