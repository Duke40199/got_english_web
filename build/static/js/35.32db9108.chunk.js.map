{"version":3,"sources":["api/APIKit.js","../node_modules/date-fns/esm/parseISO/index.js","api/pricing.js","views/pages/manage-pricing/UpdatePricingModal.js","views/pages/manage-pricing/AddPricingModal.js","views/pages/manage-pricing/DeletePricingModal.js","views/pages/manage-pricing/ManagePricing.js"],"names":["APIKit","axios","create","baseURL","timeout","MILLISECONDS_IN_HOUR","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","parseISO","argument","dirtyOptions","requiredArgs","arguments","options","additionalDigits","toInteger","RangeError","Object","prototype","toString","call","Date","NaN","date","dateStrings","splitDateString","parseYearResult","parseYear","parseDate","restDateString","year","isNaN","offset","timestamp","getTime","time","parseTime","dirtyDate","result","setFullYear","getUTCFullYear","getUTCMonth","getUTCDate","setHours","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","parseTimezone","dateString","timeString","array","split","length","test","substr","token","exec","replace","regex","RegExp","captures","match","parseInt","century","slice","isWeekDate","dayOfYear","parseDateUnit","month","day","week","dayOfWeek","_year","validateWeekDate","isoWeekYear","setUTCFullYear","fourthOfJanuaryDay","getUTCDay","diff","setUTCDate","dayOfISOWeekYear","daysInMonths","isLeapYearIndex","validateDate","validateDayOfYearDate","Math","max","value","hours","parseTimeUnit","minutes","seconds","validateTime","parseFloat","timezoneString","sign","_hours","validateTimezone","GetCoinValuePricingInfoListAPI","a","JSON","parse","localStorage","getItem","pricingInfoList","onSuccess","data","onFailure","error","console","log","apiConfig","headers","get","then","catch","GetMessagingSessionPricingInfoListAPI","GetLiveCallSessionPricingInfoListAPI","GetTranslationCallSessionPricingInfoListAPI","GetPricingInfoByIdAPI","pricingId","pricingInfo","UpdatePricingInfoByIdAPI","updateInfoJson","updateResult","response","success","put","AddPricingInfoAPI","addInfoJson","addResult","post","DeletePricingByIdAPI","deleteResult","delete","UpdatePricingModal","selectedPricingId","show","handleClose","refreshDataFlag","setRefreshDataFlag","useState","updatePricingId","setUpdatePricingId","updatePricingName","setUpdatePricingName","updatePricingQuantity","setUpdatePricingQuantity","updatePricingQuantityUnit","setUpdatePricingQuantityUnit","updatePricingPrice","setUpdatePricingPrice","updatePricingPriceUnit","setUpdatePricingPriceUnit","updateMessage","setUpdateMessage","promiseInProgress","usePromiseTracker","useEffect","trackPromise","selectedPricingInfo","id","pricing_name","quantity","quantity_unit","price","price_unit","pricingName","onSubmitUpdateForm","e","preventDefault","userInput","updatePricingResult","color","onClose","closeOnBackdrop","onSubmit","method","encType","className","closeButton","row","md","htmlFor","xs","name","type","includes","readOnly","onChange","target","required","disabled","onClick","AddPricingModal","quantityUnitName","selectedPricingServiceName","addPricingName","addPricingQuantity","setAddPricingQuantity","addPricingQuantityUnit","addPricingPrice","setAddPricingPrice","addPricingPriceUnit","addMessage","setAddMessage","onSubmitAddForm","addPricingResult","DeletePricingModal","deleteMessage","setDeleteMessage","onSubmitDeleteForm","defineQuantityUnitName","fields","key","label","_style","width","ManagePricing","updatePricingModalShow","setUpdatePricingModalShow","addPricingModalShow","setAddPricingModalShow","deletePricingModalShow","setDeletePricingModalShow","setSelectedPricingId","selectedServiceName","setSelectedServiceName","coinValuePricingInfoList","setCoinValuePricingInfoList","messagingSessionPricingInfoList","setMessagingSessionPricingInfoList","liveCallSessionPricingInfoList","setLiveCallSessionPricingInfoList","translationCallSessionPricingInfoList","setTranslationCallSessionPricingInfoList","updatePricingOnclick","addPricingOnclick","serviceName","deletePricingOnclick","hideUpdateModal","hideAddModal","hideDeleteModal","moderator_details","can_manage_pricing","addTableClasses","items","hover","striped","bordered","size","itemsPerPage","pagination","loading","noItemsView","noResults","noItems","scopedSlots","item","index","created_at","format","updated_at","data-toggle","title"],"mappings":"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","file":"static/js/35.32db9108.chunk.js","sourcesContent":["// import axios from 'axios';\r\n\r\n// let APIKit = axios.create({\r\n//     baseURL: process.env.BACKEND_URL,\r\n//     timeout: 10000\r\n// })\r\n\r\n// export default APIKit;\r\n\r\nimport axios from 'axios';\r\n\r\n// Create axios client, pre-configured with baseURL\r\nlet APIKit = axios.create({\r\n  baseURL: 'https://got-english-backend-production-swiyh5bc4q-de.a.run.app',\r\n  timeout: 10000,\r\n});\r\n\r\n// Set JSON Web Token in Client to be included in all calls\r\n// export const setClientToken = token => {\r\n//   APIKit.interceptors.request.use(function (config) {\r\n//     config.headers.Authorization = `Bearer ${token}`;\r\n//     return config;\r\n//   });\r\n// };\r\n\r\nexport default APIKit;","import toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (isNaN(date) || !date) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time) || time === null) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString; // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: null\n  };\n  var year = captures[1] && parseInt(captures[1]);\n  var century = captures[2] && parseInt(captures[2]);\n  return {\n    year: century == null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return null;\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return null;\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return null; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import APIKit from './APIKit';\r\n\r\nexport const GetCoinValuePricingInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfoList = null;\r\n    const onSuccess = data => {\r\n        pricingInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?pricing_name=coin_value', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfoList;\r\n}\r\n\r\nexport const GetMessagingSessionPricingInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfoList = null;\r\n    const onSuccess = data => {\r\n        pricingInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?pricing_name=messaging_session', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfoList;\r\n}\r\n\r\nexport const GetLiveCallSessionPricingInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfoList = null;\r\n    const onSuccess = data => {\r\n        pricingInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?pricing_name=live_call_session', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfoList;\r\n}\r\n\r\nexport const GetTranslationCallSessionPricingInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfoList = null;\r\n    const onSuccess = data => {\r\n        pricingInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?pricing_name=translation_call_session', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfoList;\r\n}\r\n\r\nexport const GetPricingInfoByIdAPI = async (pricingId) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfo = null;\r\n    const onSuccess = data => {\r\n        //only first data\r\n        pricingInfo = data.data.data[0];\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?id=' + pricingId, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfo;\r\n}\r\n\r\nexport const UpdatePricingInfoByIdAPI = async (pricingId, updateInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let updateResult = null;\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        updateResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n        updateResult = false;\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.put('/pricings/' + pricingId + \"/update\", updateInfoJson, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return updateResult;\r\n}\r\n\r\nexport const AddPricingInfoAPI = async (addInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let addResult = null;\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        addResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n        addResult = false;\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.post('/pricings', addInfoJson, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return addResult;\r\n}\r\n\r\nexport const DeletePricingByIdAPI = async (pricingId) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let deleteResult = null;\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        deleteResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n        deleteResult = false;\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.delete('/pricings/' + pricingId + \"/delete\", apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return deleteResult;\r\n}","import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n    CCol,\r\n    CInput,\r\n    CButton,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalTitle,\r\n    CLabel,\r\n    CFormGroup,\r\n    CForm,\r\n    CAlert,\r\n    CRow\r\n} from '@coreui/react'\r\nimport { GetPricingInfoByIdAPI, UpdatePricingInfoByIdAPI } from '../../../api/pricing'\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nconst definePricingName = pricingName => {\r\n    if (pricingName.includes(\"coin_value\")) {\r\n        return \"Coin\";\r\n    }\r\n    else if (pricingName.includes(\"messaging_session\")) {\r\n        return \"Dịch vụ Phiên nhắn tin\";\r\n    } else if (pricingName.includes(\"live_call_session\")) {\r\n        return \"Dịch vụ Phiên gọi trực tuyến\";\r\n    } else if (pricingName.includes(\"translation_call_session\")) {\r\n        return \"Dịch vụ Phòng phiên dịch trực tuyến\";\r\n    } else {\r\n        return \"Không xác định\";\r\n    }\r\n}\r\n\r\nconst UpdatePricingModal = ({ selectedPricingId, show, handleClose, refreshDataFlag, setRefreshDataFlag }) => {\r\n    const [updatePricingId, setUpdatePricingId] = useState(\"\");\r\n    const [updatePricingName, setUpdatePricingName] = useState(\"\");\r\n    const [updatePricingQuantity, setUpdatePricingQuantity] = useState(\"\");\r\n    const [updatePricingQuantityUnit, setUpdatePricingQuantityUnit] = useState(\"\");\r\n    const [updatePricingPrice, setUpdatePricingPrice] = useState(\"\");\r\n    const [updatePricingPriceUnit, setUpdatePricingPriceUnit] = useState(\"\");\r\n    const [updateMessage, setUpdateMessage] = useState(null);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    //this useEffect will be executed every time the modal show\r\n    useEffect(async () => {\r\n        if (selectedPricingId != null) {\r\n            const selectedPricingInfo = await trackPromise(GetPricingInfoByIdAPI(selectedPricingId));\r\n            if (selectedPricingInfo != null) {\r\n                setUpdatePricingId(selectedPricingInfo.id);\r\n                setUpdatePricingName(selectedPricingInfo.pricing_name);\r\n                setUpdatePricingQuantity(selectedPricingInfo.quantity);\r\n                setUpdatePricingQuantityUnit(selectedPricingInfo.quantity_unit)\r\n                setUpdatePricingPrice(selectedPricingInfo.price);\r\n                setUpdatePricingPriceUnit(selectedPricingInfo.price_unit);\r\n            }\r\n        }\r\n    }, [selectedPricingId]);\r\n\r\n    const onSubmitUpdateForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const userInput = {\r\n            \"price\": parseInt(updatePricingPrice)\r\n        }\r\n\r\n        const updatePricingResult = await trackPromise(UpdatePricingInfoByIdAPI(selectedPricingId, userInput));\r\n        console.log(updatePricingResult, userInput);\r\n\r\n        if (updatePricingResult === true) {\r\n            setUpdateMessage(<CAlert color=\"success\">Cập nhật thành công!</CAlert>);\r\n            setRefreshDataFlag(!refreshDataFlag);\r\n        } else {\r\n            setUpdateMessage(<CAlert color=\"danger\">Cập nhật thất bại!</CAlert>);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CModal\r\n            show={show}\r\n            onClose={handleClose()}\r\n            closeOnBackdrop={false}\r\n            color=\"success\"\r\n        >\r\n            <CForm onSubmit={onSubmitUpdateForm} method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Cập nhật Đơn Giá</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"pricing-id-input\">ID:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <p name=\"pricing-id-static\">{updatePricingId}</p>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-pricing-name-input\">Tên Đơn giá:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"text\" id=\"update-pricing-name-input\" name=\"service-name\" value={definePricingName(updatePricingName)} readOnly />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-pricing-price-input\">Đơn giá:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CRow className=\"m-0 align-items-center\">\r\n                                <CInput className=\"w-25 mr-2\" type=\"number\" id=\"update-pricing-price-input\" name=\"price\" value={updatePricingPrice} onChange={({ target }) => setUpdatePricingPrice(target.value)} required /> {updatePricingPriceUnit} = {updatePricingQuantity} {updatePricingQuantityUnit}\r\n                            </CRow>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    {updateMessage}\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"success\" type=\"submit\" disabled={promiseInProgress}>\r\n                        Cập nhật\r\n                        </CButton>\r\n                    <CButton color=\"secondary\" onClick={handleClose()}>\r\n                        Đóng\r\n                        </CButton>\r\n                </CModalFooter>\r\n            </CForm>\r\n        </CModal>\r\n    );\r\n}\r\n\r\nexport default UpdatePricingModal","import React, { useState } from 'react'\r\n\r\nimport {\r\n    CCol,\r\n    CInput,\r\n    CButton,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalTitle,\r\n    CLabel,\r\n    CFormGroup,\r\n    CForm,\r\n    CAlert,\r\n    CRow\r\n} from '@coreui/react'\r\n\r\nimport { AddPricingInfoAPI } from '../../../api/pricing';\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nconst definePricingName = pricingName => {\r\n    if (pricingName.includes(\"coin_value\")) {\r\n        return \"Coin\";\r\n    }\r\n    else if (pricingName.includes(\"messaging_session\")) {\r\n        return \"Dịch vụ Phiên nhắn tin\";\r\n    } else if (pricingName.includes(\"live_call_session\")) {\r\n        return \"Dịch vụ Phiên gọi trực tuyến\";\r\n    } else if (pricingName.includes(\"translation_call_session\")) {\r\n        return \"Dịch vụ Phòng phiên dịch trực tuyến\";\r\n    } else {\r\n        return \"Không xác định\";\r\n    }\r\n}\r\n\r\nconst defineQuantityUnitName = quantityUnitName => {\r\n    if (quantityUnitName.includes(\"minutes\")) {\r\n        return 'phút';\r\n    } else {\r\n        return 'Không xác định';\r\n    }\r\n}\r\n\r\nconst AddPricingModal = ({ selectedPricingServiceName, show, handleClose, refreshDataFlag, setRefreshDataFlag }) => {\r\n    const [addPricingName] = useState(selectedPricingServiceName);\r\n    const [addPricingQuantity, setAddPricingQuantity] = useState(\"\");\r\n    const [addPricingQuantityUnit] = useState(\"minutes\");\r\n    const [addPricingPrice, setAddPricingPrice] = useState(\"\");\r\n    const [addPricingPriceUnit] = useState(\"coin(s)\");\r\n    const [addMessage, setAddMessage] = useState(null);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    const onSubmitAddForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const userInput = {\r\n            \"pricing_name\": addPricingName,\r\n            \"quantity\": parseInt(addPricingQuantity),\r\n            \"quantity_unit\": addPricingQuantityUnit,\r\n            \"price\": parseInt(addPricingPrice),\r\n            \"price_unit\": addPricingPriceUnit\r\n        }\r\n\r\n        const addPricingResult = await trackPromise(AddPricingInfoAPI(userInput));\r\n        console.log(addPricingResult, userInput);\r\n\r\n        if (addPricingResult === true) {\r\n            setAddMessage(<CAlert color=\"success\">Thêm mới thành công!</CAlert>);\r\n            setRefreshDataFlag(!refreshDataFlag);\r\n        } else {\r\n            setAddMessage(<CAlert color=\"danger\">Thêm mới thất bại!</CAlert>)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CModal\r\n            show={show}\r\n            onClose={handleClose()}\r\n            closeOnBackdrop={false}\r\n            color=\"primary\"\r\n        >\r\n            <CForm onSubmit={onSubmitAddForm} method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Thêm mới Đơn Giá</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"add-pricing-service-name-input\">Tên Đơn giá:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"text\" id=\"add-pricing-service-name-input\" name=\"service-name\" value={definePricingName(addPricingName)} readOnly />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"add-pricing-quantity-input\">Thời lượng:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CRow className=\"m-0\">\r\n                                <CInput type=\"number\" id=\"add-pricing-quantity-input\" className=\"w-25 mr-2\" name=\"quantity\" onChange={({ target }) => setAddPricingQuantity(target.value)} required />\r\n                                {defineQuantityUnitName(addPricingQuantityUnit)}\r\n                            </CRow>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"add-pricing-price-input\">Đơn giá:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CRow className=\"m-0\">\r\n                                <CInput type=\"number\" className=\"w-25 mr-2\" id=\"add-pricing-price-input\" name=\"price\" onChange={({ target }) => setAddPricingPrice(target.value)} required />\r\n                                {addPricingPriceUnit}\r\n                            </CRow>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    {addMessage}\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"primary\" type=\"submit\" disabled={promiseInProgress}>\r\n                        Thêm\r\n                        </CButton>\r\n                    <CButton color=\"secondary\" onClick={handleClose()}>\r\n                        Đóng\r\n                        </CButton>\r\n                </CModalFooter>\r\n            </CForm>\r\n        </CModal>\r\n    );\r\n}\r\n\r\nexport default AddPricingModal","import React, { useState } from 'react'\r\n\r\nimport {\r\n    CButton,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalTitle,\r\n    CForm,\r\n    CAlert\r\n} from '@coreui/react'\r\n\r\nimport { DeletePricingByIdAPI } from '../../../api/pricing';\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nconst DeletePricingModal = ({ selectedPricingId, show, handleClose, refreshDataFlag, setRefreshDataFlag }) => {\r\n    const [deleteMessage, setDeleteMessage] = useState(null);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    const onSubmitDeleteForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const deletePricingResult = await trackPromise(DeletePricingByIdAPI(selectedPricingId));\r\n\r\n        if (deletePricingResult === true) {\r\n            setDeleteMessage(<CAlert color=\"success\">Xóa thành công!</CAlert>);\r\n            setRefreshDataFlag(!refreshDataFlag);\r\n        } else {\r\n            setDeleteMessage(<CAlert color=\"danger\">Xóa thất bại!</CAlert>);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CModal\r\n            show={show}\r\n            onClose={handleClose()}\r\n            closeOnBackdrop={false}\r\n            color=\"danger\"\r\n        >\r\n            <CForm onSubmit={onSubmitDeleteForm} method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Xóa Đơn Giá ( id: {selectedPricingId} )</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    {deleteMessage ? deleteMessage : \"Bạn chắc chắn muốn xóa Đơn Giá này chứ?\"}\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"danger\" type=\"submit\" disabled={promiseInProgress}>\r\n                        Xóa\r\n                </CButton>\r\n                    <CButton color=\"secondary\" onClick={handleClose()}>\r\n                        Đóng\r\n                </CButton>\r\n                </CModalFooter>\r\n            </CForm>\r\n        </CModal>\r\n    );\r\n}\r\n\r\nexport default DeletePricingModal","import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CDataTable,\r\n    CRow,\r\n    CAlert,\r\n    CCardHeader,\r\n    CButton\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport UpdatePricingModal from '../manage-pricing/UpdatePricingModal';\r\nimport AddPricingModal from '../manage-pricing/AddPricingModal';\r\nimport DeletePricingModal from '../manage-pricing/DeletePricingModal';\r\n\r\nimport { format, parseISO } from 'date-fns';\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nimport {\r\n    GetMessagingSessionPricingInfoListAPI,\r\n    GetLiveCallSessionPricingInfoListAPI,\r\n    GetTranslationCallSessionPricingInfoListAPI,\r\n    GetCoinValuePricingInfoListAPI\r\n} from '../../../api/pricing';\r\n\r\nconst defineQuantityUnitName = quantityUnitName => {\r\n    if (quantityUnitName.includes(\"minutes\")) {\r\n        return 'phút';\r\n    } else {\r\n        return 'Không xác định';\r\n    }\r\n}\r\n\r\nconst fields = [\r\n    { key: 'price', label: 'Đơn giá', _style: { width: '20%' } },\r\n    { key: 'created_at', label: 'Thời gian tạo', _style: { width: '22%' } },\r\n    { key: 'updated_at', label: 'Thời gian cập nhật', _style: { width: '22%' } },\r\n    { key: 'action', label: '', _style: { width: '6%' } }\r\n]\r\n\r\nconst ManagePricing = () => {\r\n    const [updatePricingModalShow, setUpdatePricingModalShow] = useState(false);\r\n    const [addPricingModalShow, setAddPricingModalShow] = useState(false);\r\n    const [deletePricingModalShow, setDeletePricingModalShow] = useState(false);\r\n    const [selectedPricingId, setSelectedPricingId] = useState(null);\r\n    const [selectedServiceName, setSelectedServiceName] = useState(null);\r\n    const [coinValuePricingInfoList, setCoinValuePricingInfoList] = useState(null);\r\n    const [messagingSessionPricingInfoList, setMessagingSessionPricingInfoList] = useState(null);\r\n    const [liveCallSessionPricingInfoList, setLiveCallSessionPricingInfoList] = useState(null);\r\n    const [translationCallSessionPricingInfoList, setTranslationCallSessionPricingInfoList] = useState(null);\r\n    const [refreshDataFlag, setRefreshDataFlag] = useState(false);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    useEffect(async () => {\r\n        const coinValuePricingInfoList = await trackPromise(GetCoinValuePricingInfoListAPI());\r\n        const messagingSessionPricingInfoList = await trackPromise(GetMessagingSessionPricingInfoListAPI());\r\n        const liveCallSessionPricingInfoList = await trackPromise(GetLiveCallSessionPricingInfoListAPI());\r\n        const translationCallSessionPricingInfoList = await trackPromise(GetTranslationCallSessionPricingInfoListAPI());\r\n        setCoinValuePricingInfoList(coinValuePricingInfoList);\r\n        setMessagingSessionPricingInfoList(messagingSessionPricingInfoList);\r\n        setLiveCallSessionPricingInfoList(liveCallSessionPricingInfoList);\r\n        setTranslationCallSessionPricingInfoList(translationCallSessionPricingInfoList);\r\n    }, [refreshDataFlag])\r\n\r\n    const updatePricingOnclick = (pricingId) => {\r\n        //open the update pricing modal\r\n        setUpdatePricingModalShow(true);\r\n        //set params\r\n        setSelectedPricingId(pricingId);\r\n    }\r\n\r\n    const addPricingOnclick = (serviceName) => {\r\n        //open the add pricing modal\r\n        setAddPricingModalShow(true);\r\n        //set params\r\n        setSelectedServiceName(serviceName);\r\n    }\r\n\r\n    const deletePricingOnclick = (pricingId) => {\r\n        //open the delete pricing modal\r\n        setDeletePricingModalShow(true);\r\n        //set params\r\n        setSelectedPricingId(pricingId);\r\n    }\r\n\r\n    const hideUpdateModal = () => {\r\n        setUpdatePricingModalShow(false);\r\n    }\r\n\r\n    const hideAddModal = () => {\r\n        setAddPricingModalShow(false);\r\n    }\r\n\r\n    const hideDeleteModal = () => {\r\n        setDeletePricingModalShow(false);\r\n    }\r\n\r\n    //check permission\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    const canManagePricing = userInfo.moderator_details.can_manage_pricing;\r\n    if (canManagePricing) {\r\n        return (\r\n            <CRow>\r\n                <CCol>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            <h3 className=\"m-0\">Đơn giá Coin:</h3>\r\n                        </CCardHeader>\r\n                        <CCardBody className=\"pt-0 pb-0\">\r\n                            <CDataTable\r\n                                addTableClasses=\"text-break\"\r\n                                items={coinValuePricingInfoList}\r\n                                fields={fields}\r\n                                hover\r\n                                striped\r\n                                bordered\r\n                                size=\"sm\"\r\n                                itemsPerPage={20}\r\n                                pagination\r\n                                loading={promiseInProgress}\r\n                                noItemsView={{ noResults: 'Không có kết quả tìm kiếm trùng khớp', noItems: 'Không có dữ liệu' }}\r\n                                scopedSlots={{\r\n                                    'price':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {item.quantity + \" \" + item.quantity_unit + \" = \" + item.price + \" \" + item.price_unit}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'created_at':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {(item.created_at == null || item.created_at == \"\") ? \"\" : format(parseISO(item.created_at), 'dd-MM-yyyy hh:mm:ss')}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'updated_at':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {(item.updated_at == null || item.updated_at == \"\") ? \"\" : format(parseISO(item.updated_at), 'dd-MM-yyyy hh:mm:ss')}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'action':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n\r\n                                                    <button type=\"button\" className=\"table-action-button mr-2\" data-toggle=\"tooltip\" title=\"Cập nhật\">\r\n                                                        <CIcon name=\"cil-pencil\" onClick={() => updatePricingOnclick(item.id)}>\r\n                                                        </CIcon>\r\n                                                    </button>\r\n                                                </td>\r\n                                            )\r\n                                        },\r\n                                }}\r\n                            />\r\n                        </CCardBody>\r\n                    </CCard>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            <h3 className=\"m-0\">Đơn giá dịch vụ Phiên Nhắn Tin:</h3>\r\n                        </CCardHeader>\r\n                        <CCardBody className=\"pt-0 pb-0\">\r\n                            <CDataTable\r\n                                addTableClasses=\"text-break\"\r\n                                items={messagingSessionPricingInfoList}\r\n                                fields={fields}\r\n                                hover\r\n                                striped\r\n                                bordered\r\n                                size=\"sm\"\r\n                                itemsPerPage={20}\r\n                                pagination\r\n                                loading={promiseInProgress}\r\n                                noItemsView={{ noResults: 'Không có kết quả tìm kiếm trùng khớp', noItems: 'Không có dữ liệu' }}\r\n                                scopedSlots={{\r\n                                    'price':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {item.quantity + \" \" + item.quantity_unit + \" = \" + item.price + \" \" + item.price_unit}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'created_at':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {(item.created_at == null || item.created_at == \"\") ? \"\" : format(parseISO(item.created_at), 'dd-MM-yyyy hh:mm:ss')}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'updated_at':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {(item.updated_at == null || item.updated_at == \"\") ? \"\" : format(parseISO(item.updated_at), 'dd-MM-yyyy hh:mm:ss')}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'action':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n\r\n                                                    <button type=\"button\" className=\"table-action-button mr-2\" data-toggle=\"tooltip\" title=\"Cập nhật\">\r\n                                                        <CIcon name=\"cil-pencil\" onClick={() => updatePricingOnclick(item.id)}>\r\n                                                        </CIcon>\r\n                                                    </button>\r\n                                                </td>\r\n                                            )\r\n                                        },\r\n                                }}\r\n                            />\r\n                        </CCardBody>\r\n                    </CCard>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            <h3 className=\"m-0\">Đơn giá dịch vụ Phiên Gọi Trực Tuyến:</h3>\r\n                            <CButton color=\"primary\" className=\"mt-2 d-flex align-items-center\" onClick={() => addPricingOnclick(\"live_call_session\")}>\r\n                                <CIcon name=\"cilPlus\" size=\"sm\" className=\"mr-1\" ></CIcon>Thêm mới Đơn Giá dịch vụ Phiên Gọi Trực Tuyến</CButton>\r\n                        </CCardHeader>\r\n                        <CCardBody className=\"pt-0 pb-0\">\r\n                            <CDataTable\r\n                                addTableClasses=\"text-break\"\r\n                                items={liveCallSessionPricingInfoList}\r\n                                fields={fields}\r\n                                hover\r\n                                striped\r\n                                bordered\r\n                                size=\"sm\"\r\n                                itemsPerPage={20}\r\n                                pagination\r\n                                loading={promiseInProgress}\r\n                                noItemsView={{ noResults: 'Không có kết quả tìm kiếm trùng khớp', noItems: 'Không có dữ liệu' }}\r\n                                scopedSlots={{\r\n                                    'price':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {item.quantity + \" \" + defineQuantityUnitName(item.quantity_unit) + \" = \" + item.price + \" \" + item.price_unit}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'created_at':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {(item.created_at == null || item.created_at == \"\") ? \"\" : format(parseISO(item.created_at), 'dd-MM-yyyy hh:mm:ss')}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'updated_at':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {(item.updated_at == null || item.updated_at == \"\") ? \"\" : format(parseISO(item.updated_at), 'dd-MM-yyyy hh:mm:ss')}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'action':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n\r\n                                                    <button type=\"button\" className=\"table-action-button mr-2\" data-toggle=\"tooltip\" title=\"Cập nhật\">\r\n                                                        <CIcon name=\"cil-pencil\" onClick={() => updatePricingOnclick(item.id)}>\r\n                                                        </CIcon>\r\n                                                    </button>\r\n                                                    <button type=\"button\" className=\"table-action-button mr-2\" data-toggle=\"tooltip\" title=\"Xóa\">\r\n                                                        <CIcon name=\"cil-x\" onClick={() => deletePricingOnclick(item.id)}>\r\n                                                        </CIcon>\r\n                                                    </button>\r\n                                                </td>\r\n                                            )\r\n                                        },\r\n                                }}\r\n                            />\r\n                        </CCardBody>\r\n                    </CCard>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            <h3 className=\"m-0\">Đơn giá dịch vụ Phòng Phiên Dịch Trực Tuyến:</h3>\r\n                            <CButton color=\"primary\" className=\"mt-2 d-flex align-items-center\" onClick={() => addPricingOnclick(\"translation_call_session\")}>\r\n                                <CIcon name=\"cilPlus\" size=\"sm\" className=\"mr-1\" ></CIcon>Thêm mới Đơn Giá dịch vụ Phòng Phiên Dịch</CButton>\r\n                        </CCardHeader>\r\n                        <CCardBody className=\"pt-0 pb-0\">\r\n                            <CDataTable\r\n                                addTableClasses=\"text-break\"\r\n                                items={translationCallSessionPricingInfoList}\r\n                                fields={fields}\r\n                                hover\r\n                                striped\r\n                                bordered\r\n                                size=\"sm\"\r\n                                itemsPerPage={20}\r\n                                pagination\r\n                                loading={promiseInProgress}\r\n                                noItemsView={{ noResults: 'Không có kết quả tìm kiếm trùng khớp', noItems: 'Không có dữ liệu' }}\r\n                                scopedSlots={{\r\n                                    'price':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {item.quantity + \" \" + defineQuantityUnitName(item.quantity_unit) + \" = \" + item.price + \" \" + item.price_unit}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'created_at':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {(item.created_at == null || item.created_at == \"\") ? \"\" : format(parseISO(item.created_at), 'dd-MM-yyyy hh:mm:ss')}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'updated_at':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n                                                    {(item.updated_at == null || item.updated_at == \"\") ? \"\" : format(parseISO(item.updated_at), 'dd-MM-yyyy hh:mm:ss')}\r\n                                                </td>\r\n                                            );\r\n                                        },\r\n                                    'action':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n\r\n                                                    <button type=\"button\" className=\"table-action-button mr-2\" data-toggle=\"tooltip\" title=\"Cập nhật\">\r\n                                                        <CIcon name=\"cil-pencil\" onClick={() => updatePricingOnclick(item.id)}>\r\n                                                        </CIcon>\r\n                                                    </button>\r\n                                                    <button type=\"button\" className=\"table-action-button mr-2\" data-toggle=\"tooltip\" title=\"Xóa\">\r\n                                                        <CIcon name=\"cil-x\" onClick={() => deletePricingOnclick(item.id)}>\r\n                                                        </CIcon>\r\n                                                    </button>\r\n                                                </td>\r\n                                            )\r\n                                        },\r\n                                }}\r\n                            />\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n                {/* POPUP UPDATE PRICING */}\r\n                {(updatePricingModalShow && selectedPricingId != null) ?\r\n                    <UpdatePricingModal\r\n                        selectedPricingId={selectedPricingId}\r\n                        show={updatePricingModalShow}\r\n                        handleClose={() => hideUpdateModal}\r\n                        refreshDataFlag={refreshDataFlag}\r\n                        setRefreshDataFlag={setRefreshDataFlag}\r\n                    />\r\n                    : null}\r\n                {/* POPUP ADD PRICING */}\r\n                {(addPricingModalShow && selectedServiceName != null) ?\r\n                    <AddPricingModal\r\n                        selectedPricingServiceName={selectedServiceName}\r\n                        show={addPricingModalShow}\r\n                        handleClose={() => hideAddModal}\r\n                        refreshDataFlag={refreshDataFlag}\r\n                        setRefreshDataFlag={setRefreshDataFlag}\r\n                    />\r\n                    : null}\r\n                {/* POPUP DELETE PRICING */}\r\n                {(deletePricingModalShow && selectedPricingId != null) ?\r\n                    <DeletePricingModal\r\n                        selectedPricingId={selectedPricingId}\r\n                        show={deletePricingModalShow}\r\n                        handleClose={() => hideDeleteModal}\r\n                        refreshDataFlag={refreshDataFlag}\r\n                        setRefreshDataFlag={setRefreshDataFlag}\r\n                    />\r\n                    : null}\r\n            </CRow >\r\n        );\r\n    } else {\r\n        return (\r\n            <CAlert color=\"danger\">Bạn không có quyền sử dụng chức năng này!</CAlert>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ManagePricing"],"sourceRoot":""}