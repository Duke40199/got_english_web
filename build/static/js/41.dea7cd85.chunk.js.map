{"version":3,"sources":["api/APIKit.js","api/coin-bundle.js","views/pages/manage-coin-bundle/AddCoinBundleModal.js","views/pages/manage-coin-bundle/UpdateCoinBundleModal.js","views/pages/manage-coin-bundle/DeleteCoinBundleModal.js","views/pages/manage-coin-bundle/ManageCoinBundle.js"],"names":["APIKit","axios","create","baseURL","timeout","GetCoinBundleInfoListAPI","a","token","JSON","parse","localStorage","getItem","coinBundleInfoList","onSuccess","data","onFailure","error","console","log","apiConfig","headers","get","then","catch","GetCoinBundleByIdAPI","coinBundleId","coinBundleInfo","UpdateCoinBundleByIdAPI","updateInfoJson","updateResult","response","success","put","CreateCoinBundleAPI","coinBundleInfoJson","createResult","post","DeleteCoinBundleByIdAPI","deleteResult","includes","delete","AddCoinBundleModal","show","handleClose","refreshDataFlag","setRefreshDataFlag","useState","addCoinBundleTitle","setAddCoinBundleTitle","addCoinBundleDescription","setAddCoinBundleDescription","addCoinBundleQuantity","setAddCoinBundleQuantity","addCoinBundlePrice","setAddCoinBundlePrice","addMessage","setAddMessage","promiseInProgress","usePromiseTracker","onSubmitAddForm","e","preventDefault","userInput","parseInt","trackPromise","addCoinBundleResult","color","onClose","closeOnBackdrop","onSubmit","method","encType","className","closeButton","row","md","htmlFor","xs","id","name","onChange","target","value","required","type","min","readOnly","disabled","onClick","UpdateCoinBundleModal","selectedCoinBundleId","updateCoinBundleId","setUpdateCoinBundleId","updateCoinBundleTitle","setUpdateCoinBundleTitle","updateCoinBundleDescription","setUpdateCoinBundleDescription","updateCoinBundleQuantity","setUpdateCoinBundleQuantity","updateCoinBundlePrice","setUpdateCoinBundlePrice","updateMessage","setUpdateMessage","useEffect","selectedCoinBundleInfo","title","description","quantity","price","onSubmitUpdateForm","updateCoinBundleResult","DeleteCoinBundleModal","deleteMessage","setDeleteMessage","onSubmitDeleteForm","deleteCoinBundleResult","fields","key","label","_style","width","ManageCoinBundle","addCoinBundleModalShow","setAddCoinBundleModalShow","updateCoinBundleModalShow","setUpdateCoinBundleModalShow","deleteCoinBundleModalShow","setDeleteCoinBundleModalShow","setCoinBundleInfoList","setSelectedCoinBundleId","hideUpdateModal","hideAddModal","hideDeleteModal","moderator_details","can_manage_coin_bundle","size","addTableClasses","items","hover","striped","bordered","itemsPerPage","pagination","loading","noItemsView","noResults","noItems","tableFilter","placeholder","scopedSlots","item","index","data-toggle"],"mappings":"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","file":"static/js/41.dea7cd85.chunk.js","sourcesContent":["// import axios from 'axios';\r\n\r\n// let APIKit = axios.create({\r\n//     baseURL: process.env.BACKEND_URL,\r\n//     timeout: 10000\r\n// })\r\n\r\n// export default APIKit;\r\n\r\nimport axios from 'axios';\r\n\r\n// Create axios client, pre-configured with baseURL\r\nlet APIKit = axios.create({\r\n  baseURL: 'https://got-english-backend-production-swiyh5bc4q-de.a.run.app',\r\n  timeout: 10000,\r\n});\r\n\r\n// Set JSON Web Token in Client to be included in all calls\r\n// export const setClientToken = token => {\r\n//   APIKit.interceptors.request.use(function (config) {\r\n//     config.headers.Authorization = `Bearer ${token}`;\r\n//     return config;\r\n//   });\r\n// };\r\n\r\nexport default APIKit;","import APIKit from './APIKit';\r\n\r\nexport const GetCoinBundleInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let coinBundleInfoList = null;\r\n    const onSuccess = data => {\r\n        coinBundleInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: {\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    await APIKit.get('/coin-bundles', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return coinBundleInfoList;\r\n}\r\n\r\nexport const GetCoinBundleByIdAPI = async (coinBundleId) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let coinBundleInfo = null;\r\n    const onSuccess = data => {\r\n        //only first data\r\n        coinBundleInfo = data.data.data[0];\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: {\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    await APIKit.get('/coin-bundles?id=' + coinBundleId, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return coinBundleInfo;\r\n}\r\n\r\nexport const UpdateCoinBundleByIdAPI = async (coinBundleId, updateInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let updateResult = null;\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        updateResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n        updateResult = false;\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.put('/coin-bundles/' + coinBundleId + '/update', updateInfoJson, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return updateResult;\r\n}\r\n\r\nexport const CreateCoinBundleAPI = async (coinBundleInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let createResult = null;\r\n\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        createResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n        createResult = false;\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.post('/coin-bundles', coinBundleInfoJson, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return createResult;\r\n}\r\n\r\nexport const DeleteCoinBundleByIdAPI = async (coinBundleId) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let deleteResult = null;\r\n\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        deleteResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n        if ((error.response.data).includes(\"coin bundle not found or already deleted\")) {\r\n            deleteResult = \"Gói Coin này không tìm thấy hoặc đã bị xóa!\"\r\n        } else {\r\n            deleteResult = \"Xóa Gói Coin thất bại!\"\r\n        }\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.delete('/coin-bundles/' + coinBundleId + \"/delete\", apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return deleteResult;\r\n}","import React, { useState } from 'react'\r\n\r\nimport {\r\n    CCol,\r\n    CInput,\r\n    CButton,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalTitle,\r\n    CLabel,\r\n    CFormGroup,\r\n    CForm,\r\n    CAlert\r\n} from '@coreui/react'\r\nimport { CreateCoinBundleAPI } from '../../../api/coin-bundle';\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nconst AddCoinBundleModal = ({ show, handleClose, refreshDataFlag, setRefreshDataFlag }) => {\r\n    const [addCoinBundleTitle, setAddCoinBundleTitle] = useState(\"\");\r\n    const [addCoinBundleDescription, setAddCoinBundleDescription] = useState(\"\");\r\n    const [addCoinBundleQuantity, setAddCoinBundleQuantity] = useState(\"\");\r\n    const [addCoinBundlePrice, setAddCoinBundlePrice] = useState(\"\");\r\n    const [addMessage, setAddMessage] = useState(null);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    const onSubmitAddForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const userInput = {\r\n            \"title\": addCoinBundleTitle,\r\n            \"description\": addCoinBundleDescription,\r\n            \"quantity\": parseInt(addCoinBundleQuantity),\r\n            \"price\": parseInt(addCoinBundlePrice),\r\n            \"price_unit\": \"VND\"\r\n        }\r\n\r\n        const addCoinBundleResult = await trackPromise(CreateCoinBundleAPI(userInput));\r\n        console.log(addCoinBundleResult, userInput);\r\n\r\n        if (addCoinBundleResult === true) {\r\n            setAddMessage(<CAlert color=\"success\">Thêm mới thành công!</CAlert>);\r\n            setRefreshDataFlag(!refreshDataFlag);\r\n        } else {\r\n            setAddMessage(<CAlert color=\"danger\">Thêm mới thất bại!</CAlert>);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CModal\r\n            show={show}\r\n            onClose={handleClose()}\r\n            closeOnBackdrop={false}\r\n            color=\"primary\">\r\n            <CForm onSubmit={onSubmitAddForm} method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Thêm mới Gói Coin</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"coin-bundle-title-input\">Tên Gói:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput id=\"coin-bundle-title-input\" name=\"coin-bundle-title-input\" onChange={({ target }) => setAddCoinBundleTitle(target.value)} required />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"coin-bundle-description-input\">Nội dung Gói:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput id=\"coin-bundle-description-input\" name=\"coin-bundle-description-input\" onChange={({ target }) => setAddCoinBundleDescription(target.value)} />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"coin-bundle-quantity-input\">Số lượng Coin:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"number\" min=\"0\" id=\"coin-bundle-quantity-input\" name=\"coin-bundle-quantity-input\" onChange={({ target }) => setAddCoinBundleQuantity(target.value)} required />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"coin-bundle-price-input\">Giá Gói:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput\r\n                                type=\"number\"\r\n                                id=\"coin-bundle-price-input\"\r\n                                name=\"coin-bundle-price-input\"\r\n                                min=\"0\"\r\n                                onChange={({ target }) => setAddCoinBundlePrice(target.value)}\r\n                                required />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"coin-bundle-price-unit-input\">Đơn vị Giá:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput id=\"coin-bundle-price-unit-input\" name=\"coin-bundle-price-unit-input\"\r\n                                value=\"VND\"\r\n                                readOnly />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    {addMessage}\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"primary\" type=\"submit\" disabled={promiseInProgress}>\r\n                        Thêm\r\n                </CButton>\r\n                    <CButton color=\"secondary\" onClick={handleClose()}>\r\n                        Đóng\r\n                </CButton>\r\n                </CModalFooter>\r\n            </CForm>\r\n        </CModal>\r\n    );\r\n}\r\n\r\nexport default AddCoinBundleModal","import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n    CCol,\r\n    CInput,\r\n    CButton,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalTitle,\r\n    CLabel,\r\n    CFormGroup,\r\n    CForm,\r\n    CAlert\r\n} from '@coreui/react'\r\nimport { GetCoinBundleByIdAPI, UpdateCoinBundleByIdAPI } from '../../../api/coin-bundle'\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nconst UpdateCoinBundleModal = ({ selectedCoinBundleId, show, handleClose, refreshDataFlag, setRefreshDataFlag }) => {\r\n    const [updateCoinBundleId, setUpdateCoinBundleId] = useState(\"\");\r\n    const [updateCoinBundleTitle, setUpdateCoinBundleTitle] = useState(\"\");\r\n    const [updateCoinBundleDescription, setUpdateCoinBundleDescription] = useState(\"\");\r\n    const [updateCoinBundleQuantity, setUpdateCoinBundleQuantity] = useState(\"\");\r\n    const [updateCoinBundlePrice, setUpdateCoinBundlePrice] = useState(\"\");\r\n    const [updateMessage, setUpdateMessage] = useState(null);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    //this useEffect will be executed every time the modal show\r\n    useEffect(async () => {\r\n        if (selectedCoinBundleId != null) {\r\n            const selectedCoinBundleInfo = await trackPromise(GetCoinBundleByIdAPI(selectedCoinBundleId));\r\n            if (selectedCoinBundleInfo != null) {\r\n                setUpdateCoinBundleId(selectedCoinBundleInfo.id);\r\n                setUpdateCoinBundleTitle(selectedCoinBundleInfo.title);\r\n                setUpdateCoinBundleDescription(selectedCoinBundleInfo.description);\r\n                setUpdateCoinBundleQuantity(selectedCoinBundleInfo.quantity);\r\n                setUpdateCoinBundlePrice(selectedCoinBundleInfo.price);\r\n            }\r\n        }\r\n    }, [selectedCoinBundleId]);\r\n\r\n    const onSubmitUpdateForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const userInput = {\r\n            \"title\": updateCoinBundleTitle,\r\n            \"description\": updateCoinBundleDescription,\r\n            \"quantity\": parseInt(updateCoinBundleQuantity),\r\n            \"price\": parseInt(updateCoinBundlePrice)\r\n        }\r\n\r\n        const updateCoinBundleResult = await trackPromise(UpdateCoinBundleByIdAPI(selectedCoinBundleId, userInput));\r\n        console.log(updateCoinBundleResult, userInput);\r\n\r\n        if (updateCoinBundleResult === true) {\r\n            setUpdateMessage(<CAlert color=\"success\">Cập nhật thành công!</CAlert>);\r\n            setRefreshDataFlag(!refreshDataFlag);\r\n        } else {\r\n            setUpdateMessage(<CAlert color=\"danger\">Cập nhật thất bại!</CAlert>);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CModal\r\n            show={show}\r\n            onClose={handleClose()}\r\n            closeOnBackdrop={false}\r\n            color=\"success\"\r\n        >\r\n            <CForm onSubmit={onSubmitUpdateForm} method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Cập nhật Gói Coin</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"coin-bundle-id-input\">ID:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <p name=\"coin-bundle-id-static\">{updateCoinBundleId}</p>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-coin-bundle-title-input\">Tên Gói:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"text\" id=\"update-coin-bundle-title-input\" name=\"title\" value={updateCoinBundleTitle} onChange={({ target }) => setUpdateCoinBundleTitle(target.value)} required />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-coin-bundle-description-input\">Nội dung Gói:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"text\" id=\"update-coin-bundle-description-input\" name=\"description\" value={updateCoinBundleDescription} onChange={({ target }) => setUpdateCoinBundleDescription(target.value)} />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-coin-bundle-quantity-input\">Số lượng Coin:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"number\" id=\"update-coin-bundle-quantity-input\" min=\"0\" name=\"quantity\" value={updateCoinBundleQuantity} onChange={({ target }) => setUpdateCoinBundleQuantity(target.value)} required />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-coin-bundle-price-input\">Giá:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"number\" id=\"update-coin-bundle-price-input\" min=\"0\" name=\"price\" value={updateCoinBundlePrice} onChange={({ target }) => setUpdateCoinBundlePrice(target.value)} required />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-coin-bundle-price-unit-input\">Đơn vị Giá:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"text\" id=\"update-coin-bundle-price-unit-input\" name=\"price-unit\" value=\"VND\" readOnly />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    {updateMessage}\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"success\" type=\"submit\" disabled={promiseInProgress}>\r\n                        Cập nhật\r\n                        </CButton>\r\n                    <CButton color=\"secondary\" onClick={handleClose()}>\r\n                        Đóng\r\n                        </CButton>\r\n                </CModalFooter>\r\n            </CForm>\r\n        </CModal>\r\n    );\r\n}\r\n\r\nexport default UpdateCoinBundleModal","import React, { useState } from 'react'\r\n\r\nimport {\r\n    CButton,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalTitle,\r\n    CForm,\r\n    CAlert\r\n} from '@coreui/react'\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nimport { DeleteCoinBundleByIdAPI } from '../../../api/coin-bundle';\r\n\r\nconst DeleteCoinBundleModal = ({ selectedCoinBundleId, show, handleClose, refreshDataFlag, setRefreshDataFlag }) => {\r\n    const [deleteMessage, setDeleteMessage] = useState(null);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    const onSubmitDeleteForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const deleteCoinBundleResult = await trackPromise(DeleteCoinBundleByIdAPI\r\n            (selectedCoinBundleId));\r\n\r\n        if (deleteCoinBundleResult === true) {\r\n            setDeleteMessage(<CAlert color=\"success\">Xóa thành công!</CAlert>);\r\n            setRefreshDataFlag(!refreshDataFlag);\r\n        } else {\r\n            setDeleteMessage(<CAlert color=\"danger\">{deleteCoinBundleResult}</CAlert>);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CModal\r\n            show={show}\r\n            onClose={handleClose()}\r\n            closeOnBackdrop={false}\r\n            color=\"danger\"\r\n        >\r\n            <CForm onSubmit={onSubmitDeleteForm} method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Xóa Gói Coin ( id: {selectedCoinBundleId} )</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    {deleteMessage ? deleteMessage : \"Bạn chắc chắn muốn xóa Gói Coin này chứ?\"}\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"danger\" type=\"submit\" disabled={promiseInProgress}>\r\n                        Xóa\r\n                </CButton>\r\n                    <CButton color=\"secondary\" onClick={handleClose()}>\r\n                        Đóng\r\n                </CButton>\r\n                </CModalFooter>\r\n            </CForm>\r\n        </CModal>\r\n    );\r\n}\r\n\r\nexport default DeleteCoinBundleModal","import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CDataTable,\r\n    CRow,\r\n    CButton,\r\n    CCardHeader,\r\n    CAlert\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport AddCoinBundleModal from '../manage-coin-bundle/AddCoinBundleModal';\r\nimport UpdateCoinBundleModal from '../manage-coin-bundle/UpdateCoinBundleModal';\r\nimport DeleteCoinBundleModal from '../manage-coin-bundle/DeleteCoinBundleModal';\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nimport { GetCoinBundleInfoListAPI } from '../../../api/coin-bundle'\r\n\r\nconst fields = [\r\n    { key: 'title', label: 'Tên Gói', _style: { width: '20%' } },\r\n    { key: 'description', label: 'Nội dung Gói', _style: { width: '40%' } },\r\n    { key: 'quantity', label: 'Số lượng Coin', _style: { width: '12%' } },\r\n    { key: 'price', label: 'Giá', _style: { width: '13%' } },\r\n    { key: 'price_unit', label: 'Đơn vị', _style: { width: '10%' } },\r\n    { key: 'action', label: '', _style: { width: '5%' } }\r\n]\r\n\r\nconst ManageCoinBundle = () => {\r\n    const [addCoinBundleModalShow, setAddCoinBundleModalShow] = useState(false);\r\n    const [updateCoinBundleModalShow, setUpdateCoinBundleModalShow] = useState(false);\r\n    const [deleteCoinBundleModalShow, setDeleteCoinBundleModalShow] = useState(false);\r\n    const [coinBundleInfoList, setCoinBundleInfoList] = useState(null);\r\n    const [selectedCoinBundleId, setSelectedCoinBundleId] = useState(null);\r\n    const [refreshDataFlag, setRefreshDataFlag] = useState(false);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    useEffect(async () => {\r\n        const coinBundleInfoList = await trackPromise(GetCoinBundleInfoListAPI());\r\n        setCoinBundleInfoList(coinBundleInfoList);\r\n    }, [refreshDataFlag]);\r\n\r\n    const updateCoinBundleOnclick = (coinBundleId) => {\r\n        //open the update coin bundle modal\r\n        setUpdateCoinBundleModalShow(true);\r\n        //set params\r\n        setSelectedCoinBundleId(coinBundleId);\r\n    }\r\n\r\n    const deleteCoinBundleOnclick = (coinBundleId) => {\r\n        //open the delete coin bundle modal\r\n        setDeleteCoinBundleModalShow(true);\r\n        //set params\r\n        setSelectedCoinBundleId(coinBundleId);\r\n    }\r\n\r\n    const hideUpdateModal = () => {\r\n        setUpdateCoinBundleModalShow(false);\r\n    }\r\n\r\n    const hideAddModal = () => {\r\n        setAddCoinBundleModalShow(false);\r\n    }\r\n\r\n    const hideDeleteModal = () => {\r\n        setDeleteCoinBundleModalShow(false);\r\n    }\r\n\r\n    //check permission\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    const canManageCoinBundle = userInfo.moderator_details.can_manage_coin_bundle;\r\n    if (canManageCoinBundle) {\r\n        return (\r\n            <CRow>\r\n                <CCol>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            <h3 className=\"m-0\">Danh sách Gói Coin:</h3>\r\n                            <CButton color=\"primary\" className=\"mt-2 d-flex align-items-center\" onClick={() => setAddCoinBundleModalShow(true)}>\r\n                                <CIcon name=\"cilPlus\" size=\"sm\" className=\"mr-1\"></CIcon>Thêm mới Gói Coin</CButton>\r\n                        </CCardHeader>\r\n                        <CCardBody className=\"pt-0 pb-0\">\r\n                            <CDataTable\r\n                                addTableClasses=\"text-break\"\r\n                                items={coinBundleInfoList}\r\n                                fields={fields}\r\n                                hover\r\n                                striped\r\n                                bordered\r\n                                size=\"sm\"\r\n                                itemsPerPage={20}\r\n                                pagination\r\n                                loading={promiseInProgress}\r\n                                noItemsView={{ noResults: 'Không có kết quả tìm kiếm trùng khớp', noItems: 'Không có dữ liệu' }}\r\n                                tableFilter={\r\n                                    {\r\n                                        label: \"Tìm kiếm:\",\r\n                                        placeholder: \"nhập thông tin Gói Coin cần tìm...\",\r\n                                    }\r\n                                }\r\n                                scopedSlots={{\r\n                                    'action':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n\r\n                                                    <button type=\"button\" className=\"table-action-button mr-2\" data-toggle=\"tooltip\" title=\"Cập nhật\">\r\n                                                        <CIcon name=\"cil-pencil\" onClick={() => updateCoinBundleOnclick(item.id)}>\r\n                                                        </CIcon>\r\n                                                    </button>\r\n                                                    <button type=\"button\" className=\"table-action-button\" data-toggle=\"tooltip\" title=\"Xóa\">\r\n                                                        <CIcon name=\"cil-X\" onClick={() => deleteCoinBundleOnclick(item.id)}>\r\n                                                        </CIcon>\r\n                                                    </button>\r\n                                                </td>\r\n                                            )\r\n                                        },\r\n                                }}\r\n                            />\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n                {/*POPUP ADD COIN BUNDLE*/}\r\n                {addCoinBundleModalShow ?\r\n                    <AddCoinBundleModal\r\n                        show={addCoinBundleModalShow}\r\n                        handleClose={() => hideAddModal}\r\n                        refreshDataFlag={refreshDataFlag}\r\n                        setRefreshDataFlag={setRefreshDataFlag} />\r\n                    : null}\r\n                {/*POPUP UPDATE COIN BUNDLE*/}\r\n                {updateCoinBundleModalShow && selectedCoinBundleId != null ?\r\n                    <UpdateCoinBundleModal\r\n                        selectedCoinBundleId={selectedCoinBundleId}\r\n                        show={updateCoinBundleModalShow}\r\n                        handleClose={() => hideUpdateModal}\r\n                        refreshDataFlag={refreshDataFlag}\r\n                        setRefreshDataFlag={setRefreshDataFlag} />\r\n                    : null}\r\n                {/*POPUP DELETE COIN BUNDLE*/}\r\n                {deleteCoinBundleModalShow && selectedCoinBundleId != null ?\r\n                    <DeleteCoinBundleModal\r\n                        selectedCoinBundleId={selectedCoinBundleId}\r\n                        show={deleteCoinBundleModalShow}\r\n                        handleClose={() => hideDeleteModal}\r\n                        refreshDataFlag={refreshDataFlag}\r\n                        setRefreshDataFlag={setRefreshDataFlag} />\r\n                    : null}\r\n            </CRow>\r\n        )\r\n    } else {\r\n        return (\r\n            <CAlert color=\"danger\">Bạn không có quyền sử dụng chức năng này!</CAlert>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ManageCoinBundle"],"sourceRoot":""}