{"version":3,"sources":["views/pages/login/Login.js","api/APIKit.js","firebase/firebase.js","../../lib/atob.js","../../lib/base64_url_decode.js","../../lib/index.js","api/login.js"],"names":["Login","useState","email","setEmail","password","setPassword","setUser","loginMessage","setLoginMessage","history","useHistory","promiseInProgress","usePromiseTracker","onPressLogin","e","a","preventDefault","trackPromise","signInWithEmailAndPasswordHandler","idToken","LoginAPI","loginResult","console","log","userData","role","jwt_decode","token","claims","role_name","color","localStorage","setItem","JSON","stringify","GetMyProfileAPI","userInfo","go","errorMessage","className","md","onSubmit","name","type","placeholder","required","onChange","target","value","xs","disabled","APIKit","axios","create","baseURL","timeout","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","analytics","signInWithEmailAndPassword","catch","error","then","userCredential","undefined","firebaseUser","user","getIdTokenResult","InvalidCharacterError","message","this","prototype","Error","window","atob","bind","input","str","String","replace","length","bs","buffer","bc","idx","output","charAt","fromCharCode","indexOf","decodeURIComponent","m","p","code","charCodeAt","toString","toUpperCase","err","InvalidTokenError","options","pos","header","parse","base64_url_decode","split","result","onSuccess","data","onFailure","response","status","apiConfig","headers","post","getItem","myProfile","get"],"mappings":"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","file":"static/js/22.d24fea18.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { LoginAPI, GetMyProfileAPI } from '../../../api/login'\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow,\r\n  CAlert\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { signInWithEmailAndPasswordHandler } from 'src/firebase/firebase';\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nconst Login = () => {\r\n  //initial state\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user, setUser] = useState();\r\n  const [loginMessage, setLoginMessage] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n  const onPressLogin = async e => {\r\n    e.preventDefault();\r\n\r\n    const idToken = await trackPromise(signInWithEmailAndPasswordHandler(email, password));\r\n    const loginResult = await trackPromise(LoginAPI(idToken));\r\n    console.log(loginResult);\r\n\r\n    if (loginResult.userData != null) {\r\n      //role check\r\n      const role = (jwt_decode(loginResult.userData.token)).claims.role_name;\r\n      if (role === \"Admin\" || role === \"Moderator\") {\r\n        setLoginMessage(<CAlert color=\"success\">Đăng nhập thành công! Xin chờ trong giây lát...</CAlert>);\r\n        // set the state of the user\r\n        setUser(loginResult.userData);\r\n        // store the user in localStorage\r\n        localStorage.setItem(\"user\", JSON.stringify(loginResult.userData));\r\n        // get logged in user detail info then store it into localStorage\r\n        const userInfo = await GetMyProfileAPI();\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\r\n        // reload the page\r\n        history.go(0);\r\n      } else {\r\n        setLoginMessage(<CAlert color=\"danger\">Tài khoản của bạn không có quyền truy cập hệ thống này!</CAlert>);\r\n      }\r\n    } else {\r\n      setLoginMessage(<CAlert color=\"danger\">{loginResult.errorMessage}</CAlert>);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n      <CContainer>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md=\"8\">\r\n            <CCard>\r\n              <CCardBody>\r\n                <CForm onSubmit={onPressLogin}>\r\n                  <h1>Đăng nhập</h1>\r\n                  <p className=\"text-muted\">Xin hãy điền thông tin tài khoản</p>\r\n                  <CInputGroup className=\"mb-3\">\r\n                    <CInputGroupPrepend>\r\n                      <CInputGroupText>\r\n                        <CIcon name=\"cil-user\" />\r\n                      </CInputGroupText>\r\n                    </CInputGroupPrepend>\r\n                    <CInput type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      required\r\n                      onChange={({ target }) => setEmail(target.value)}\r\n                    />\r\n                  </CInputGroup>\r\n                  <CInputGroup className=\"mb-4\">\r\n                    <CInputGroupPrepend>\r\n                      <CInputGroupText>\r\n                        <CIcon name=\"cil-lock-locked\" />\r\n                      </CInputGroupText>\r\n                    </CInputGroupPrepend>\r\n                    <CInput type=\"password\"\r\n                      placeholder=\"Mật khẩu\"\r\n                      required\r\n                      onChange={({ target }) => setPassword(target.value)}\r\n                    />\r\n                  </CInputGroup>\r\n                  {promiseInProgress ?\r\n                    <div className=\"spinner-border text-primary mb-3\">\r\n                    </div> :\r\n                    (loginMessage != null && loginMessage != \"\") ? loginMessage : null\r\n                  }\r\n                  <CRow>\r\n                    <CCol xs=\"6\">\r\n                      <CButton color=\"primary\" className=\"px-4\" type=\"Submit\" disabled={promiseInProgress}>Đăng Nhập</CButton>\r\n                    </CCol>\r\n                    <CCol xs=\"6\" className=\"text-right\">\r\n                      <CButton color=\"link\" className=\"px-0\">Quên mật khẩu?</CButton>\r\n                    </CCol>\r\n                  </CRow>\r\n                </CForm>\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","// import axios from 'axios';\r\n\r\n// let APIKit = axios.create({\r\n//     baseURL: process.env.BACKEND_URL,\r\n//     timeout: 10000\r\n// })\r\n\r\n// export default APIKit;\r\n\r\nimport axios from 'axios';\r\n\r\n// Create axios client, pre-configured with baseURL\r\nlet APIKit = axios.create({\r\n  baseURL: 'https://got-english-backend-production-swiyh5bc4q-de.a.run.app',\r\n  timeout: 10000,\r\n});\r\n\r\n// Set JSON Web Token in Client to be included in all calls\r\n// export const setClientToken = token => {\r\n//   APIKit.interceptors.request.use(function (config) {\r\n//     config.headers.Authorization = `Bearer ${token}`;\r\n//     return config;\r\n//   });\r\n// };\r\n\r\nexport default APIKit;","import firebase from 'firebase'\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport util from 'util';\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB0l31PMIfIMgDceOjlcOimsHUFSccvzjU\",\r\n    authDomain: \"gotenglish-app.firebaseapp.com\",\r\n    projectId: \"gotenglish-app\",\r\n    storageBucket: \"gotenglish-app.appspot.com\",\r\n    messagingSenderId: \"392616753385\",\r\n    appId: \"1:392616753385:web:cf70a3478c6f8ea51d5878\",\r\n    measurementId: \"G-T0K0LB12VF\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nfirebase.analytics();\r\n\r\nexport const signInWithEmailAndPasswordHandler = async (email, password) => {\r\n    var idToken\r\n    await auth.signInWithEmailAndPassword(email, password).catch(error => {\r\n        console.error(\"Error signing in with password and email\", error);\r\n    }).then(async (userCredential) => {\r\n        if (userCredential !== undefined) {\r\n            var firebaseUser = userCredential.user;\r\n            idToken = await firebaseUser.getIdTokenResult(false);\r\n        }\r\n    });\r\n    return idToken\r\n};\r\n\r\nexport default firebase","/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}","import APIKit from './APIKit';\r\n\r\nexport const LoginAPI = async idToken => {\r\n  let result = {\r\n    userData: null,\r\n    errorMessage: null,\r\n  };\r\n  if (idToken === undefined) {\r\n    result.errorMessage = \"Xin kiểm tra lại thông tin đăng nhập.\"\r\n    return result;\r\n  }\r\n  const onSuccess = data => {\r\n    result.userData = data.data.data;\r\n  };\r\n  const onFailure = error => {\r\n    console.log(error);\r\n    let errorMessage = \"\";\r\n    if (error.response != null) {\r\n      if (error.response.status === 403) {\r\n        errorMessage = \"Xin kiểm tra lại thông tin đăng nhập.\";\r\n      } else if (error.response.status === 401) {\r\n        errorMessage = \"Tài khoản của bạn đã bị khóa.\";\r\n      }\r\n    } else {\r\n      errorMessage = \"Đã có một lỗi bất thường xảy ra. Xin hãy liên hệ với Admin để bảo trì hệ thống.\";\r\n    }\r\n    result.errorMessage = errorMessage;\r\n  };\r\n  // console.log(idToken.token);\r\n  // await sleep(5000);\r\n  const apiConfig = {\r\n    headers: { \"Authorization\": `Bearer ${idToken.token}` }\r\n  }\r\n  await APIKit.post('/login', null, apiConfig)\r\n    .then(onSuccess)\r\n    .catch(onFailure);\r\n\r\n  return result;\r\n}\r\n// function sleep(ms) {\r\n//   return new Promise((resolve) => {\r\n//     setTimeout(resolve, ms);\r\n//   });\r\n// }\r\nexport const GetMyProfileAPI = async () => {\r\n  const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n\r\n  let myProfile = null;\r\n\r\n  const onSuccess = data => {\r\n    myProfile = data.data.data;\r\n  }\r\n\r\n  const onFailure = error => {\r\n    console.log(error);\r\n  }\r\n\r\n  const apiConfig = {\r\n    headers: { \"Authorization\": `Bearer ${token}` }\r\n  }\r\n\r\n  await APIKit.get('/profile', apiConfig)\r\n    .then(onSuccess)\r\n    .catch(onFailure);\r\n\r\n  return myProfile;\r\n}"],"sourceRoot":""}