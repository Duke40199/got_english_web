{"version":3,"sources":["api/APIKit.js","reusable/DefineErrorLog.js","api/pricing.js","api/coin-bundle.js","reusable/CoinBundleValidator.js","views/pages/manage-coin-bundle/AddCoinBundleModal.js","views/pages/manage-coin-bundle/UpdateCoinBundleModal.js","views/pages/manage-coin-bundle/DeleteCoinBundleModal.js","views/pages/manage-coin-bundle/ManageCoinBundle.js"],"names":["APIKit","axios","create","baseURL","timeout","DefineErrorLog","errorResponse","definedErrorLog","response","data","errorLogMessage","includes","GetCoinValuePricingInfoListAPI","a","token","JSON","parse","localStorage","getItem","pricingInfoList","onSuccess","onFailure","error","console","log","apiConfig","headers","get","then","catch","GetMessagingSessionPricingInfoListAPI","GetLiveCallSessionPricingInfoListAPI","GetTranslationCallSessionPricingInfoListAPI","GetCoinPricingInfoAPI","GetPricingInfoByIdAPI","pricingId","pricingInfo","UpdatePricingInfoByIdAPI","updateInfoJson","updateResult","success","put","AddPricingInfoAPI","addInfoJson","addResult","post","DeletePricingByIdAPI","deleteResult","delete","GetCoinBundleInfoListAPI","coinBundleInfoList","GetCoinBundleByIdAPI","coinBundleId","coinBundleInfo","UpdateCoinBundleByIdAPI","CreateCoinBundleAPI","coinBundleInfoJson","createResult","DeleteCoinBundleByIdAPI","CoinBundleValidator","userInput","errors","title","length","isEmpty","toString","description","quantity","unparsedQuantity","parsedQuantity","parseInt","isNumeric","AddCoinBundleModal","show","handleClose","refreshDataFlag","setRefreshDataFlag","useState","addCoinBundleTitle","setAddCoinBundleTitle","addCoinBundleDescription","setAddCoinBundleDescription","addCoinBundleQuantity","setAddCoinBundleQuantity","coinPricing","setCoinPricing","fieldErrorMessages","setFieldErrorMessages","addMessage","setAddMessage","promiseInProgress","usePromiseTracker","useEffect","trackPromise","price","fetchData","onSubmitAddForm","e","preventDefault","formValidate","Object","keys","addCoinBundleData","addCoinBundleResult","color","onClose","closeOnBackdrop","onSubmit","method","encType","className","closeButton","row","md","htmlFor","xs","id","name","onChange","target","value","required","type","min","max","readOnly","disabled","onClick","UpdateCoinBundleModal","selectedCoinBundleId","updateCoinBundleId","setUpdateCoinBundleId","updateCoinBundleTitle","setUpdateCoinBundleTitle","updateCoinBundleDescription","setUpdateCoinBundleDescription","updateCoinBundleQuantity","setUpdateCoinBundleQuantity","updateMessage","setUpdateMessage","selectedCoinBundleInfo","onSubmitUpdateForm","updateCoinBundleData","updateCoinBundleResult","DeleteCoinBundleModal","deleteMessage","setDeleteMessage","onSubmitDeleteForm","deleteCoinBundleResult","fields","key","label","_style","width","ManageCoinBundle","addCoinBundleModalShow","setAddCoinBundleModalShow","updateCoinBundleModalShow","setUpdateCoinBundleModalShow","deleteCoinBundleModalShow","setDeleteCoinBundleModalShow","setCoinBundleInfoList","setSelectedCoinBundleId","hideUpdateModal","hideAddModal","hideDeleteModal","moderator_details","can_manage_coin_bundle","size","addTableClasses","items","hover","striped","bordered","itemsPerPage","pagination","loading","noItemsView","noResults","noItems","tableFilter","placeholder","scopedSlots","item","index","data-toggle"],"mappings":"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","file":"static/js/19.ea644e31.chunk.js","sourcesContent":["// import axios from 'axios';\r\n\r\n// let APIKit = axios.create({\r\n//     baseURL: process.env.BACKEND_URL,\r\n//     timeout: 10000\r\n// })\r\n\r\n// export default APIKit;\r\n\r\nimport axios from 'axios';\r\n\r\n// Create axios client, pre-configured with baseURL\r\nlet APIKit = axios.create({\r\n  baseURL: 'https://got-english-backend-production-swiyh5bc4q-de.a.run.app',\r\n  timeout: 10000,\r\n});\r\n\r\n// Set JSON Web Token in Client to be included in all calls\r\n// export const setClientToken = token => {\r\n//   APIKit.interceptors.request.use(function (config) {\r\n//     config.headers.Authorization = `Bearer ${token}`;\r\n//     return config;\r\n//   });\r\n// };\r\n\r\nexport default APIKit;","const DefineErrorLog = (errorResponse) => {\r\n    let definedErrorLog = \"\";\r\n    if (errorResponse != null) {\r\n        if (errorResponse.response != null) {\r\n            if (errorResponse.response.data != null) {\r\n                const errorLogMessage = errorResponse.response.data;\r\n                if (errorLogMessage.includes(\"Account is already suspended.\")) {\r\n                    definedErrorLog = \"Tài khoản này đã bị khóa!\";\r\n                } else if (errorLogMessage.includes(\"account unavailable\")) {\r\n                    definedErrorLog = \"Email đã được sử dụng!\";\r\n                } else if (errorLogMessage.includes(\"'username'\")) {\r\n                    definedErrorLog = \"Tên tài khoản đã được sử dụng!\";\r\n                } else if (errorLogMessage.includes(\"Account is currently in a messaging session\")) {\r\n                    definedErrorLog = \"Tài khoản này hiện đang sử dụng dịch vụ Phiên nhắn tin! Chưa thể khóa...\";\r\n                } else if (errorLogMessage.includes(\"Account is currently in a live call session\")) {\r\n                    definedErrorLog = \"Tài khoản này hiện đang sử dụng dịch vụ Phiên gọi trực tuyến! Chưa thể khóa...\";\r\n                } else if (errorLogMessage.includes(\"Account is currently in a translation session\")) {\r\n                    definedErrorLog = \"Tài khoản này hiện đang sử dụng dịch vụ Phòng phiên dịch! Chưa thể khóa...\";\r\n                } else if (errorLogMessage.includes(\"Account is not yet suspended.\")) {\r\n                    definedErrorLog = \"Tài khoản này đã được mở khóa!\";\r\n                } else if (errorLogMessage.includes(\"You don't have permission\")) {\r\n                    definedErrorLog = \"Tài khoản của bạn không có quyền để thực hiện thao tác này!\";\r\n                } else {\r\n                    definedErrorLog = \"Đã có lỗi xảy ra!\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return definedErrorLog;\r\n}\r\n\r\nexport default DefineErrorLog","import APIKit from './APIKit';\r\nimport DefineErrorLog from '../reusable/DefineErrorLog'\r\n\r\nexport const GetCoinValuePricingInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfoList = null;\r\n    const onSuccess = data => {\r\n        pricingInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?pricing_name=coin_value', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfoList;\r\n}\r\n\r\nexport const GetMessagingSessionPricingInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfoList = null;\r\n    const onSuccess = data => {\r\n        pricingInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?pricing_name=messaging_session', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfoList;\r\n}\r\n\r\nexport const GetLiveCallSessionPricingInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfoList = null;\r\n    const onSuccess = data => {\r\n        pricingInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?pricing_name=live_call_session', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfoList;\r\n}\r\n\r\nexport const GetTranslationCallSessionPricingInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfoList = null;\r\n    const onSuccess = data => {\r\n        pricingInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?pricing_name=translation_call_session', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfoList;\r\n}\r\n\r\nexport const GetCoinPricingInfoAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfoList = null;\r\n    const onSuccess = data => {\r\n        //only first data\r\n        pricingInfoList = data.data.data[0];\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?pricing_name=coin_value', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfoList;\r\n}\r\n\r\nexport const GetPricingInfoByIdAPI = async (pricingId) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let pricingInfo = null;\r\n    const onSuccess = data => {\r\n        //only first data\r\n        pricingInfo = data.data.data[0];\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/pricings?id=' + pricingId, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return pricingInfo;\r\n}\r\n\r\nexport const UpdatePricingInfoByIdAPI = async (pricingId, updateInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let updateResult = null;\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        updateResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        updateResult = DefineErrorLog(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.put('/pricings/' + pricingId + \"/update\", updateInfoJson, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return updateResult;\r\n}\r\n\r\nexport const AddPricingInfoAPI = async (addInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let addResult = null;\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        addResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        addResult = DefineErrorLog(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.post('/pricings', addInfoJson, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return addResult;\r\n}\r\n\r\nexport const DeletePricingByIdAPI = async (pricingId) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let deleteResult = null;\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        deleteResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        deleteResult = DefineErrorLog(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.delete('/pricings/' + pricingId + \"/delete\", apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return deleteResult;\r\n}","import APIKit from './APIKit';\r\nimport DefineErrorLog from '../reusable/DefineErrorLog'\r\n\r\nexport const GetCoinBundleInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let coinBundleInfoList = null;\r\n    const onSuccess = data => {\r\n        coinBundleInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: {\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    await APIKit.get('/coin-bundles', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return coinBundleInfoList;\r\n}\r\n\r\nexport const GetCoinBundleByIdAPI = async (coinBundleId) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let coinBundleInfo = null;\r\n    const onSuccess = data => {\r\n        //only first data\r\n        coinBundleInfo = data.data.data[0];\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: {\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    await APIKit.get('/coin-bundles?id=' + coinBundleId, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return coinBundleInfo;\r\n}\r\n\r\nexport const UpdateCoinBundleByIdAPI = async (coinBundleId, updateInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let updateResult = null;\r\n    const onSuccess = response => {\r\n        updateResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        updateResult = DefineErrorLog(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.put('/coin-bundles/' + coinBundleId + '/update', updateInfoJson, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return updateResult;\r\n}\r\n\r\nexport const CreateCoinBundleAPI = async (coinBundleInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let createResult = null;\r\n\r\n    const onSuccess = response => {\r\n        createResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        createResult = DefineErrorLog(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.post('/coin-bundles', coinBundleInfoJson, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return createResult;\r\n}\r\n\r\nexport const DeleteCoinBundleByIdAPI = async (coinBundleId) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let deleteResult = null;\r\n\r\n    const onSuccess = response => {\r\n        deleteResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        deleteResult = DefineErrorLog(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.delete('/coin-bundles/' + coinBundleId + \"/delete\", apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return deleteResult;\r\n}","import { isEmpty, isNumeric } from 'validator';\r\n\r\nconst CoinBundleValidator = (userInput) => {\r\n    const errors = {};\r\n\r\n    //title\r\n    if (userInput.title != null) {\r\n        if (userInput.title.length > 30) {\r\n            errors.title = \"Tên Gói không được quá 30 ký tự!\"\r\n        } else if (isEmpty(userInput.title.toString())) {\r\n            errors.title = \"Tên Gói là bắt buộc!\"\r\n        }\r\n    }\r\n    //description\r\n    if (userInput.description != null) {\r\n        if (userInput.description.length > 55) {\r\n            errors.description = \"Nội dung Gói không được quá 55 ký tự!\"\r\n        }\r\n    }\r\n    //quantity\r\n    if (userInput.quantity != null) {\r\n        const unparsedQuantity = userInput.quantity.toString();\r\n        const parsedQuantity = parseInt(userInput.quantity);\r\n        if (isEmpty(unparsedQuantity)) {\r\n            errors.quantity = \"Số lượng Coin là bắt buộc!\"\r\n        } else if (!isNumeric(unparsedQuantity)) {\r\n            errors.quantity = \"Số lượng Coin chỉ nhận giá trị số!\"\r\n        } else if (parsedQuantity < 1 || parsedQuantity > 1000) {\r\n            errors.quantity = \"Số lượng Coin chỉ được nằm trong khoảng 1 đến 1000!\"\r\n        }\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default CoinBundleValidator","import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n    CCol,\r\n    CInput,\r\n    CButton,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalTitle,\r\n    CLabel,\r\n    CFormGroup,\r\n    CForm,\r\n    CAlert,\r\n    CInvalidFeedback\r\n} from '@coreui/react'\r\nimport { CreateCoinBundleAPI } from '../../../api/coin-bundle';\r\nimport { GetCoinPricingInfoAPI } from '../../../api/pricing';\r\n\r\nimport CoinBundleValidator from '../../../reusable/CoinBundleValidator';\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nconst AddCoinBundleModal = ({ show, handleClose, refreshDataFlag, setRefreshDataFlag }) => {\r\n    const [addCoinBundleTitle, setAddCoinBundleTitle] = useState(\"\");\r\n    const [addCoinBundleDescription, setAddCoinBundleDescription] = useState(\"\");\r\n    const [addCoinBundleQuantity, setAddCoinBundleQuantity] = useState(1);\r\n    const [coinPricing, setCoinPricing] = useState(\"\");\r\n    const [fieldErrorMessages, setFieldErrorMessages] = useState({});\r\n    const [addMessage, setAddMessage] = useState(null);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    //this useEffect will be executed every time the modal show\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const coinPricing = await trackPromise(GetCoinPricingInfoAPI());\r\n            if (coinPricing != null) {\r\n                setCoinPricing(coinPricing.price);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const onSubmitAddForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const userInput = {\r\n            \"title\": addCoinBundleTitle,\r\n            \"description\": addCoinBundleDescription,\r\n            \"quantity\": addCoinBundleQuantity\r\n        }\r\n\r\n        const formValidate = CoinBundleValidator(userInput);\r\n        const noErrors = Object.keys(formValidate).length === 0;\r\n\r\n        if (noErrors) {\r\n            const addCoinBundleData = {\r\n                \"title\": addCoinBundleTitle,\r\n                \"description\": addCoinBundleDescription,\r\n                \"quantity\": parseInt(addCoinBundleQuantity),\r\n                \"price_unit\": \"VND\"\r\n            }\r\n\r\n            const addCoinBundleResult = await trackPromise(CreateCoinBundleAPI(addCoinBundleData));\r\n\r\n            if (addCoinBundleResult === true) {\r\n                setAddMessage(<CAlert color=\"success\">Thêm mới thành công!</CAlert>);\r\n                setRefreshDataFlag(!refreshDataFlag);\r\n            } else {\r\n                setAddMessage(<CAlert color=\"danger\">{addCoinBundleResult}</CAlert>);\r\n            }\r\n            //clear errors if any\r\n            setFieldErrorMessages({});\r\n        } else {\r\n            setFieldErrorMessages(formValidate);\r\n            setAddMessage(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CModal\r\n            show={show}\r\n            onClose={handleClose()}\r\n            closeOnBackdrop={false}\r\n            color=\"primary\">\r\n            <CForm onSubmit={onSubmitAddForm} method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Thêm mới Gói Coin</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel className=\"required\" htmlFor=\"coin-bundle-title-input\">Tên Gói:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput id=\"coin-bundle-title-input\" name=\"coin-bundle-title-input\" onChange={({ target }) => setAddCoinBundleTitle(target.value)} required />\r\n                            {fieldErrorMessages.title != null ? <CInvalidFeedback\r\n                                className=\"d-block\"\r\n                            >\r\n                                {fieldErrorMessages.title}\r\n                            </CInvalidFeedback>\r\n                                : null}\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"coin-bundle-description-input\">Nội dung Gói:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput id=\"coin-bundle-description-input\" name=\"coin-bundle-description-input\" onChange={({ target }) => setAddCoinBundleDescription(target.value)} />\r\n                            {fieldErrorMessages.description != null ? <CInvalidFeedback\r\n                                className=\"d-block\"\r\n                            >\r\n                                {fieldErrorMessages.description}\r\n                            </CInvalidFeedback>\r\n                                : null}\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel className=\"required\" htmlFor=\"coin-bundle-quantity-input\">Số lượng Coin:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"number\" min=\"1\" max=\"1000\" id=\"coin-bundle-quantity-input\" name=\"coin-bundle-quantity-input\" value={addCoinBundleQuantity} onChange={({ target }) => setAddCoinBundleQuantity(target.value)} required />\r\n                            {fieldErrorMessages.quantity != null ? <CInvalidFeedback\r\n                                className=\"d-block\"\r\n                            >\r\n                                {fieldErrorMessages.quantity}\r\n                            </CInvalidFeedback>\r\n                                : null}\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"coin-bundle-price-input\">Giá Gói:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput\r\n                                type=\"number\"\r\n                                id=\"coin-bundle-price-input\"\r\n                                name=\"coin-bundle-price-input\"\r\n                                min=\"0\"\r\n                                value={addCoinBundleQuantity * coinPricing}\r\n                                readOnly />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"coin-bundle-price-unit-input\">Đơn vị Giá:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput id=\"coin-bundle-price-unit-input\" name=\"coin-bundle-price-unit-input\"\r\n                                value=\"VND\"\r\n                                readOnly />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    {addMessage}\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"primary\" type=\"submit\" disabled={promiseInProgress}>\r\n                        Thêm\r\n                </CButton>\r\n                    <CButton color=\"secondary\" onClick={handleClose()}>\r\n                        Đóng\r\n                </CButton>\r\n                </CModalFooter>\r\n            </CForm>\r\n        </CModal>\r\n    );\r\n}\r\n\r\nexport default AddCoinBundleModal","import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n    CCol,\r\n    CInput,\r\n    CButton,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalTitle,\r\n    CLabel,\r\n    CFormGroup,\r\n    CForm,\r\n    CAlert,\r\n    CInvalidFeedback\r\n} from '@coreui/react'\r\nimport { GetCoinBundleByIdAPI, UpdateCoinBundleByIdAPI } from '../../../api/coin-bundle'\r\nimport { GetCoinPricingInfoAPI } from '../../../api/pricing';\r\n\r\nimport CoinBundleValidator from '../../../reusable/CoinBundleValidator';\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nconst UpdateCoinBundleModal = ({ selectedCoinBundleId, show, handleClose, refreshDataFlag, setRefreshDataFlag }) => {\r\n    const [updateCoinBundleId, setUpdateCoinBundleId] = useState(\"\");\r\n    const [updateCoinBundleTitle, setUpdateCoinBundleTitle] = useState(\"\");\r\n    const [updateCoinBundleDescription, setUpdateCoinBundleDescription] = useState(\"\");\r\n    const [updateCoinBundleQuantity, setUpdateCoinBundleQuantity] = useState(\"\");\r\n    const [coinPricing, setCoinPricing] = useState(\"\");\r\n    const [fieldErrorMessages, setFieldErrorMessages] = useState({});\r\n    const [updateMessage, setUpdateMessage] = useState(null);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    //this useEffect will be executed every time the modal show\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            if (selectedCoinBundleId != null) {\r\n                const selectedCoinBundleInfo = await trackPromise(GetCoinBundleByIdAPI(selectedCoinBundleId));\r\n                if (selectedCoinBundleInfo != null) {\r\n                    setUpdateCoinBundleId(selectedCoinBundleInfo.id);\r\n                    setUpdateCoinBundleTitle(selectedCoinBundleInfo.title);\r\n                    setUpdateCoinBundleDescription(selectedCoinBundleInfo.description);\r\n                    setUpdateCoinBundleQuantity(selectedCoinBundleInfo.quantity);\r\n                }\r\n            }\r\n            const coinPricing = await trackPromise(GetCoinPricingInfoAPI());\r\n            if (coinPricing != null) {\r\n                setCoinPricing(coinPricing.price);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [selectedCoinBundleId]);\r\n\r\n    const onSubmitUpdateForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const userInput = {\r\n            \"title\": updateCoinBundleTitle,\r\n            \"description\": updateCoinBundleDescription,\r\n            \"quantity\": updateCoinBundleQuantity\r\n        }\r\n\r\n        const formValidate = CoinBundleValidator(userInput);\r\n        const noErrors = Object.keys(formValidate).length === 0;\r\n\r\n        if (noErrors) {\r\n            const updateCoinBundleData = {\r\n                \"title\": updateCoinBundleTitle,\r\n                \"description\": updateCoinBundleDescription,\r\n                \"quantity\": parseInt(updateCoinBundleQuantity),\r\n            }\r\n\r\n            const updateCoinBundleResult = await trackPromise(UpdateCoinBundleByIdAPI(selectedCoinBundleId, updateCoinBundleData));\r\n\r\n            if (updateCoinBundleResult === true) {\r\n                setUpdateMessage(<CAlert color=\"success\">Cập nhật thành công!</CAlert>);\r\n                setRefreshDataFlag(!refreshDataFlag);\r\n            } else {\r\n                setUpdateMessage(<CAlert color=\"danger\">{updateCoinBundleResult}</CAlert>);\r\n            }\r\n            //clear errors if any\r\n            setFieldErrorMessages({});\r\n        } else {\r\n            setFieldErrorMessages(formValidate);\r\n            setUpdateMessage(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CModal\r\n            show={show}\r\n            onClose={handleClose()}\r\n            closeOnBackdrop={false}\r\n            color=\"success\"\r\n        >\r\n            <CForm onSubmit={onSubmitUpdateForm} method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Cập nhật Gói Coin</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"coin-bundle-id-input\">ID:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <p name=\"coin-bundle-id-static\">{updateCoinBundleId}</p>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel className=\"required\" htmlFor=\"update-coin-bundle-title-input\">Tên Gói:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"text\" id=\"update-coin-bundle-title-input\" name=\"title\" value={updateCoinBundleTitle} onChange={({ target }) => setUpdateCoinBundleTitle(target.value)} required />\r\n                            {fieldErrorMessages.title != null ? <CInvalidFeedback\r\n                                className=\"d-block\"\r\n                            >\r\n                                {fieldErrorMessages.title}\r\n                            </CInvalidFeedback>\r\n                                : null}\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-coin-bundle-description-input\">Nội dung Gói:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"text\" id=\"update-coin-bundle-description-input\" name=\"description\" value={updateCoinBundleDescription} onChange={({ target }) => setUpdateCoinBundleDescription(target.value)} />\r\n                            {fieldErrorMessages.description != null ? <CInvalidFeedback\r\n                                className=\"d-block\"\r\n                            >\r\n                                {fieldErrorMessages.description}\r\n                            </CInvalidFeedback>\r\n                                : null}\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel className=\"required\" htmlFor=\"update-coin-bundle-quantity-input\">Số lượng Coin:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"number\" id=\"update-coin-bundle-quantity-input\" min=\"1\" max=\"1000\" name=\"quantity\" value={updateCoinBundleQuantity} onChange={({ target }) => setUpdateCoinBundleQuantity(target.value)} required />\r\n                            {fieldErrorMessages.quantity != null ? <CInvalidFeedback\r\n                                className=\"d-block\"\r\n                            >\r\n                                {fieldErrorMessages.quantity}\r\n                            </CInvalidFeedback>\r\n                                : null}\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-coin-bundle-price-input\">Giá Gói:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"number\" id=\"update-coin-bundle-price-input\" min=\"0\" name=\"price\" value={updateCoinBundleQuantity * coinPricing} readOnly />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-coin-bundle-price-unit-input\">Đơn vị Giá:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"text\" id=\"update-coin-bundle-price-unit-input\" name=\"price-unit\" value=\"VND\" readOnly />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    {updateMessage}\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"success\" type=\"submit\" disabled={promiseInProgress}>\r\n                        Cập nhật\r\n                        </CButton>\r\n                    <CButton color=\"secondary\" onClick={handleClose()}>\r\n                        Đóng\r\n                        </CButton>\r\n                </CModalFooter>\r\n            </CForm>\r\n        </CModal>\r\n    );\r\n}\r\n\r\nexport default UpdateCoinBundleModal","import React, { useState } from 'react'\r\n\r\nimport {\r\n    CButton,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalTitle,\r\n    CForm,\r\n    CAlert\r\n} from '@coreui/react'\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nimport { DeleteCoinBundleByIdAPI } from '../../../api/coin-bundle';\r\n\r\nconst DeleteCoinBundleModal = ({ selectedCoinBundleId, show, handleClose, refreshDataFlag, setRefreshDataFlag }) => {\r\n    const [deleteMessage, setDeleteMessage] = useState(null);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    const onSubmitDeleteForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const deleteCoinBundleResult = await trackPromise(DeleteCoinBundleByIdAPI\r\n            (selectedCoinBundleId));\r\n\r\n        if (deleteCoinBundleResult === true) {\r\n            setDeleteMessage(<CAlert color=\"success\">Xóa thành công!</CAlert>);\r\n            setRefreshDataFlag(!refreshDataFlag);\r\n        } else {\r\n            setDeleteMessage(<CAlert color=\"danger\">{deleteCoinBundleResult}</CAlert>);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CModal\r\n            show={show}\r\n            onClose={handleClose()}\r\n            closeOnBackdrop={false}\r\n            color=\"danger\"\r\n        >\r\n            <CForm onSubmit={onSubmitDeleteForm} method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Xóa Gói Coin</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    {deleteMessage ? deleteMessage : \"Bạn chắc chắn muốn xóa Gói Coin này chứ?\"}\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"danger\" type=\"submit\" disabled={promiseInProgress}>\r\n                        Xóa\r\n                </CButton>\r\n                    <CButton color=\"secondary\" onClick={handleClose()}>\r\n                        Đóng\r\n                </CButton>\r\n                </CModalFooter>\r\n            </CForm>\r\n        </CModal>\r\n    );\r\n}\r\n\r\nexport default DeleteCoinBundleModal","import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CDataTable,\r\n    CRow,\r\n    CButton,\r\n    CCardHeader,\r\n    CAlert\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport AddCoinBundleModal from '../manage-coin-bundle/AddCoinBundleModal';\r\nimport UpdateCoinBundleModal from '../manage-coin-bundle/UpdateCoinBundleModal';\r\nimport DeleteCoinBundleModal from '../manage-coin-bundle/DeleteCoinBundleModal';\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nimport { GetCoinBundleInfoListAPI } from '../../../api/coin-bundle'\r\n\r\nconst fields = [\r\n    { key: 'title', label: 'Tên Gói', _style: { width: '20%' } },\r\n    { key: 'description', label: 'Nội dung Gói', _style: { width: '40%' } },\r\n    { key: 'quantity', label: 'Số lượng Coin', _style: { width: '12%' } },\r\n    { key: 'price', label: 'Giá', _style: { width: '13%' } },\r\n    { key: 'price_unit', label: 'Đơn vị', _style: { width: '10%' } },\r\n    { key: 'action', label: '', _style: { width: '5%' } }\r\n]\r\n\r\nconst ManageCoinBundle = () => {\r\n    const [addCoinBundleModalShow, setAddCoinBundleModalShow] = useState(false);\r\n    const [updateCoinBundleModalShow, setUpdateCoinBundleModalShow] = useState(false);\r\n    const [deleteCoinBundleModalShow, setDeleteCoinBundleModalShow] = useState(false);\r\n    const [coinBundleInfoList, setCoinBundleInfoList] = useState(null);\r\n    const [selectedCoinBundleId, setSelectedCoinBundleId] = useState(null);\r\n    const [refreshDataFlag, setRefreshDataFlag] = useState(false);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const coinBundleInfoList = await trackPromise(GetCoinBundleInfoListAPI());\r\n            setCoinBundleInfoList(coinBundleInfoList);\r\n        }\r\n        fetchData();\r\n    }, [refreshDataFlag]);\r\n\r\n    const updateCoinBundleOnclick = (coinBundleId) => {\r\n        //open the update coin bundle modal\r\n        setUpdateCoinBundleModalShow(true);\r\n        //set params\r\n        setSelectedCoinBundleId(coinBundleId);\r\n    }\r\n\r\n    const deleteCoinBundleOnclick = (coinBundleId) => {\r\n        //open the delete coin bundle modal\r\n        setDeleteCoinBundleModalShow(true);\r\n        //set params\r\n        setSelectedCoinBundleId(coinBundleId);\r\n    }\r\n\r\n    const hideUpdateModal = () => {\r\n        setUpdateCoinBundleModalShow(false);\r\n    }\r\n\r\n    const hideAddModal = () => {\r\n        setAddCoinBundleModalShow(false);\r\n    }\r\n\r\n    const hideDeleteModal = () => {\r\n        setDeleteCoinBundleModalShow(false);\r\n    }\r\n\r\n    //check permission\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    const canManageCoinBundle = userInfo.moderator_details.can_manage_coin_bundle;\r\n    if (canManageCoinBundle) {\r\n        return (\r\n            <CRow>\r\n                <CCol>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            <h3 className=\"m-0\">Danh sách Gói Coin:</h3>\r\n                            <CButton color=\"primary\" className=\"mt-2 d-flex align-items-center\" onClick={() => setAddCoinBundleModalShow(true)}>\r\n                                <CIcon name=\"cilPlus\" size=\"sm\" className=\"mr-1\"></CIcon>Thêm mới Gói Coin</CButton>\r\n                        </CCardHeader>\r\n                        <CCardBody className=\"pt-0 pb-0\">\r\n                            <CDataTable\r\n                                addTableClasses=\"text-break\"\r\n                                items={coinBundleInfoList}\r\n                                fields={fields}\r\n                                hover\r\n                                striped\r\n                                bordered\r\n                                size=\"sm\"\r\n                                itemsPerPage={20}\r\n                                pagination\r\n                                loading={promiseInProgress}\r\n                                noItemsView={{ noResults: 'Không có kết quả tìm kiếm trùng khớp', noItems: 'Không có dữ liệu' }}\r\n                                tableFilter={\r\n                                    {\r\n                                        label: \"Tìm kiếm:\",\r\n                                        placeholder: \"nhập thông tin Gói Coin cần tìm...\",\r\n                                    }\r\n                                }\r\n                                scopedSlots={{\r\n                                    'action':\r\n                                        (item, index) => {\r\n                                            return (\r\n                                                <td className=\"py-1\">\r\n\r\n                                                    <button type=\"button\" className=\"table-action-button mr-2\" data-toggle=\"tooltip\" title=\"Cập nhật\">\r\n                                                        <CIcon name=\"cil-pencil\" onClick={() => updateCoinBundleOnclick(item.id)}>\r\n                                                        </CIcon>\r\n                                                    </button>\r\n                                                    <button type=\"button\" className=\"table-action-button\" data-toggle=\"tooltip\" title=\"Xóa\">\r\n                                                        <CIcon name=\"cil-X\" onClick={() => deleteCoinBundleOnclick(item.id)}>\r\n                                                        </CIcon>\r\n                                                    </button>\r\n                                                </td>\r\n                                            )\r\n                                        },\r\n                                }}\r\n                            />\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n                {/*POPUP ADD COIN BUNDLE*/}\r\n                {addCoinBundleModalShow ?\r\n                    <AddCoinBundleModal\r\n                        show={addCoinBundleModalShow}\r\n                        handleClose={() => hideAddModal}\r\n                        refreshDataFlag={refreshDataFlag}\r\n                        setRefreshDataFlag={setRefreshDataFlag} />\r\n                    : null}\r\n                {/*POPUP UPDATE COIN BUNDLE*/}\r\n                {updateCoinBundleModalShow && selectedCoinBundleId != null ?\r\n                    <UpdateCoinBundleModal\r\n                        selectedCoinBundleId={selectedCoinBundleId}\r\n                        show={updateCoinBundleModalShow}\r\n                        handleClose={() => hideUpdateModal}\r\n                        refreshDataFlag={refreshDataFlag}\r\n                        setRefreshDataFlag={setRefreshDataFlag} />\r\n                    : null}\r\n                {/*POPUP DELETE COIN BUNDLE*/}\r\n                {deleteCoinBundleModalShow && selectedCoinBundleId != null ?\r\n                    <DeleteCoinBundleModal\r\n                        selectedCoinBundleId={selectedCoinBundleId}\r\n                        show={deleteCoinBundleModalShow}\r\n                        handleClose={() => hideDeleteModal}\r\n                        refreshDataFlag={refreshDataFlag}\r\n                        setRefreshDataFlag={setRefreshDataFlag} />\r\n                    : null}\r\n            </CRow>\r\n        )\r\n    } else {\r\n        return (\r\n            <CAlert color=\"danger\">Bạn không có quyền sử dụng chức năng này!</CAlert>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ManageCoinBundle"],"sourceRoot":""}