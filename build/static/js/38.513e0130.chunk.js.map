{"version":3,"sources":["api/exchange-rate.js","reusable/ExchangeRateValidator.js","views/pages/manage-exchange-rate/UpdateExchangeRateModal.js","views/pages/manage-exchange-rate/ManageExchangeRate.js","api/APIKit.js","reusable/DefineErrorLog.js","../node_modules/date-fns/esm/parseISO/index.js"],"names":["GetExchangeRateInfoListAPI","a","token","JSON","parse","localStorage","getItem","exchangeRateInfoList","onSuccess","data","onFailure","error","console","log","apiConfig","headers","APIKit","get","then","catch","GetExchangeRateInfoByIdAPI","exchangeRateId","exchangeRateInfo","UpdateExchangeRateInfoByIdAPI","updateInfoJson","updateResult","response","success","DefineErrorLog","put","ExchangeRateValidator","userInput","errors","rate","unparsedRate","toString","parsedRate","parseFloat","isEmpty","isDecimal","isNumeric","length","UpdateExchangeRateModal","selectedExchangeRateId","show","handleClose","refreshDataFlag","setRefreshDataFlag","useState","updateExchangeRateId","setUpdateExchangeRateId","updateExchangeRateServiceName","setUpdateExchangeRateServiceName","updateExchangeRateRate","setUpdateExchangeRateRate","fieldErrorMessages","setFieldErrorMessages","updateMessage","setUpdateMessage","promiseInProgress","usePromiseTracker","useEffect","trackPromise","selectedExchangeRateInfo","id","service_name","fetchData","serviceName","onSubmitUpdateForm","e","preventDefault","formValidate","Object","keys","exchangeRateData","updateExchangeRateResult","color","onClose","closeOnBackdrop","onSubmit","method","encType","className","closeButton","row","md","htmlFor","xs","name","type","min","value","includes","readOnly","onChange","target","required","disabled","onClick","fields","key","label","_style","width","ManageExchangeRate","updateExchangeRateModalShow","setUpdateExchangeRateModalShow","setExchangeRateInfoList","setSelectedExchangeRateId","hideUpdateModal","moderator_details","can_manage_exchange_rate","addTableClasses","items","hover","striped","bordered","size","itemsPerPage","pagination","loading","noItemsView","noResults","noItems","scopedSlots","item","index","updated_at","format","parseISO","data-toggle","title","axios","create","baseURL","timeout","errorResponse","definedErrorLog","errorLogMessage","MILLISECONDS_IN_HOUR","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","argument","dirtyOptions","requiredArgs","arguments","options","additionalDigits","toInteger","RangeError","prototype","call","Date","NaN","date","dateStrings","splitDateString","parseYearResult","parseYear","parseDate","restDateString","year","isNaN","offset","timestamp","getTime","time","parseTime","dirtyDate","result","setFullYear","getUTCFullYear","getUTCMonth","getUTCDate","setHours","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","parseTimezone","dateString","timeString","array","split","test","substr","exec","replace","regex","RegExp","captures","match","parseInt","century","slice","isWeekDate","dayOfYear","parseDateUnit","month","day","week","dayOfWeek","_year","validateWeekDate","isoWeekYear","setUTCFullYear","fourthOfJanuaryDay","getUTCDay","diff","setUTCDate","dayOfISOWeekYear","daysInMonths","isLeapYearIndex","validateDate","validateDayOfYearDate","Math","max","hours","parseTimeUnit","minutes","seconds","validateTime","timezoneString","sign","_hours","validateTimezone"],"mappings":"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","file":"static/js/38.513e0130.chunk.js","sourcesContent":["import APIKit from './APIKit';\r\nimport DefineErrorLog from '../reusable/DefineErrorLog';\r\n\r\nexport const GetExchangeRateInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let exchangeRateInfoList = null;\r\n    const onSuccess = data => {\r\n        exchangeRateInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: {\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    await APIKit.get('/exchange-rates', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return exchangeRateInfoList;\r\n}\r\n\r\nexport const GetExchangeRateInfoByIdAPI = async (exchangeRateId) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let exchangeRateInfo = null;\r\n    const onSuccess = data => {\r\n        //only first data\r\n        exchangeRateInfo = data.data.data[0];\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: {\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    }\r\n\r\n    await APIKit.get('/exchange-rates?id=' + exchangeRateId, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return exchangeRateInfo;\r\n}\r\n\r\nexport const UpdateExchangeRateInfoByIdAPI = async (exchangeRateId, updateInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let updateResult = null;\r\n    const onSuccess = response => {\r\n        updateResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        updateResult = DefineErrorLog(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.put('/exchange-rates/' + exchangeRateId + '/update', updateInfoJson, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return updateResult;\r\n}","import { isEmpty, isNumeric, isDecimal } from 'validator';\r\n\r\nconst ExchangeRateValidator = (userInput) => {\r\n    const errors = {};\r\n\r\n    //rate\r\n    if (userInput.rate != null) {\r\n        const unparsedRate = userInput.rate.toString();\r\n        const parsedRate = parseFloat(userInput.rate);\r\n        if (isEmpty(unparsedRate)) {\r\n            errors.rate = \"Tỉ lệ Chiết Khấu là bắt buộc!\"\r\n        } else if (!isDecimal(unparsedRate) || !isNumeric(unparsedRate)) {\r\n            errors.rate = \"Tỉ lệ Chiết Khấu chỉ nhận giá trị số thập phân!\"\r\n        } else if (parsedRate < 0 || parsedRate > 1) {\r\n            errors.rate = \"Tỉ lệ Chiết Khấu chỉ nhận giá trị lớn hơn 0 và nhỏ hơn 1!\"\r\n        } else if (unparsedRate.length > 4) {\r\n            errors.rate = \"Tỉ lệ Chiết Khấu chỉ nhận đến giá trị thập phân thứ hai!\"\r\n        }\r\n\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default ExchangeRateValidator","import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n    CCol,\r\n    CInput,\r\n    CButton,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalTitle,\r\n    CLabel,\r\n    CFormGroup,\r\n    CForm,\r\n    CAlert,\r\n    CRow,\r\n    CInvalidFeedback\r\n} from '@coreui/react'\r\nimport { GetExchangeRateInfoByIdAPI, UpdateExchangeRateInfoByIdAPI } from '../../../api/exchange-rate';\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nimport ExchangeRateValidator from '../../../reusable/ExchangeRateValidator';\r\n\r\nconst defineServiceName = (serviceName) => {\r\n    if (serviceName.includes(\"messaging_session\")) {\r\n        return \"Phiên nhắn tin\";\r\n    } else if (serviceName.includes(\"live_call_session\")) {\r\n        return \"Phiên gọi trực tuyến\";\r\n    } else if (serviceName.includes(\"translation_session\")) {\r\n        return \"Phòng phiên dịch trực tuyến\";\r\n    } else {\r\n        return \"Không xác định\";\r\n    }\r\n}\r\n\r\nconst UpdateExchangeRateModal = ({ selectedExchangeRateId, show, handleClose, refreshDataFlag, setRefreshDataFlag }) => {\r\n    const [updateExchangeRateId, setUpdateExchangeRateId] = useState(\"\");\r\n    const [updateExchangeRateServiceName, setUpdateExchangeRateServiceName] = useState(\"\");\r\n    const [updateExchangeRateRate, setUpdateExchangeRateRate] = useState(\"\");\r\n    const [fieldErrorMessages, setFieldErrorMessages] = useState({});\r\n    const [updateMessage, setUpdateMessage] = useState(null);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    //this useEffect will be executed every time the modal show\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            if (selectedExchangeRateId != null) {\r\n                const selectedExchangeRateInfo = await trackPromise(GetExchangeRateInfoByIdAPI(selectedExchangeRateId));\r\n                if (selectedExchangeRateInfo != null) {\r\n                    setUpdateExchangeRateId(selectedExchangeRateInfo.id);\r\n                    setUpdateExchangeRateServiceName(selectedExchangeRateInfo.service_name);\r\n                    setUpdateExchangeRateRate(selectedExchangeRateInfo.rate);\r\n                }\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [selectedExchangeRateId]);\r\n\r\n    const onSubmitUpdateForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const userInput = {\r\n            \"rate\": updateExchangeRateRate\r\n        }\r\n\r\n        const formValidate = ExchangeRateValidator(userInput);\r\n        const noErrors = Object.keys(formValidate).length === 0;\r\n\r\n        if (noErrors) {\r\n            const exchangeRateData = {\r\n                \"rate\": parseFloat(updateExchangeRateRate)\r\n            }\r\n\r\n            const updateExchangeRateResult = await trackPromise(UpdateExchangeRateInfoByIdAPI(selectedExchangeRateId, exchangeRateData));\r\n\r\n            if (updateExchangeRateResult === true) {\r\n                setUpdateMessage(<CAlert color=\"success\">Cập nhật thành công!</CAlert>);\r\n                setRefreshDataFlag(!refreshDataFlag);\r\n            } else {\r\n                setUpdateMessage(<CAlert color=\"danger\">{updateExchangeRateResult}</CAlert>);\r\n            }\r\n            //clear errors if any\r\n            setFieldErrorMessages({});\r\n        } else {\r\n            setFieldErrorMessages(formValidate);\r\n            setUpdateMessage(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CModal\r\n            show={show}\r\n            onClose={handleClose()}\r\n            closeOnBackdrop={false}\r\n            color=\"success\"\r\n        >\r\n            <CForm onSubmit={onSubmitUpdateForm} method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Cập nhật Chiết Khấu</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"exchange-rate-id-input\">ID:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <p name=\"exchange-rate-id-static\">{updateExchangeRateId}</p>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-exchange-rate-service-name-input\">Tên dịch vụ Chiết Khấu:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"text\" id=\"update-exchange-rate-service-name-input\" min=\"0\" name=\"service-name\" value={defineServiceName(updateExchangeRateServiceName)} readOnly />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel className=\"required\" htmlFor=\"update-exchange-rate-rate-input\">Tỉ lệ Chiết Khấu:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CRow className=\"m-0 align-items-center\">\r\n                                <CInput type=\"number\" className=\"w-25 mr-2\" id=\"update-exchange-rate-rate-input\" name=\"quantity\" value={updateExchangeRateRate} onChange={({ target }) => setUpdateExchangeRateRate(target.value)} required />\r\n                                {fieldErrorMessages.rate != null ? <CInvalidFeedback\r\n                                    className=\"d-block\"\r\n                                >\r\n                                    {fieldErrorMessages.rate}\r\n                                </CInvalidFeedback>\r\n                                    : null}\r\n                            </CRow>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    {updateMessage}\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"success\" type=\"submit\" disabled={promiseInProgress}>\r\n                        Cập nhật\r\n                        </CButton>\r\n                    <CButton color=\"secondary\" onClick={handleClose()}>\r\n                        Đóng\r\n                        </CButton>\r\n                </CModalFooter>\r\n            </CForm>\r\n        </CModal>\r\n    );\r\n}\r\n\r\nexport default UpdateExchangeRateModal","import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCol,\r\n    CDataTable,\r\n    CRow,\r\n    CCardHeader,\r\n    CAlert\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport UpdateExchangeRateModal from '../manage-exchange-rate/UpdateExchangeRateModal';\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nimport { format, parseISO } from 'date-fns';\r\n\r\nimport { GetExchangeRateInfoListAPI } from '../../../api/exchange-rate';\r\n\r\nconst defineServiceName = (serviceName) => {\r\n    if (serviceName.includes(\"messaging_session\")) {\r\n        return \"Phiên nhắn tin\";\r\n    } else if (serviceName.includes(\"live_call_session\")) {\r\n        return \"Phiên gọi trực tuyến\";\r\n    } else if (serviceName.includes(\"translation_session\")) {\r\n        return \"Phòng phiên dịch trực tuyến\";\r\n    } else {\r\n        return \"Không xác định\";\r\n    }\r\n}\r\n\r\nconst fields = [\r\n    { key: 'service_name', label: 'Tên dịch vụ Chiết Khấu', _style: { width: '35%' } },\r\n    { key: 'rate', label: 'Tỉ lệ Chiết Khấu', _style: { width: '20%' } },\r\n    { key: 'updated_at', label: 'Thời gian lần cuối cập nhật', _style: { width: '40%' } },\r\n    { key: 'action', label: '', _style: { width: '5%' } }\r\n]\r\n\r\nconst ManageExchangeRate = () => {\r\n    const [updateExchangeRateModalShow, setUpdateExchangeRateModalShow] = useState(false);\r\n    const [exchangeRateInfoList, setExchangeRateInfoList] = useState(null);\r\n    const [selectedExchangeRateId, setSelectedExchangeRateId] = useState(null);\r\n    const [refreshDataFlag, setRefreshDataFlag] = useState(false);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const exchangeRateInfoList = await trackPromise(GetExchangeRateInfoListAPI());\r\n            setExchangeRateInfoList(exchangeRateInfoList);\r\n        }\r\n        fetchData();\r\n    }, [refreshDataFlag]);\r\n\r\n    const updateExchangeRateOnclick = (exchangeRateId) => {\r\n        //open the update exchange rate modal\r\n        setUpdateExchangeRateModalShow(true);\r\n        //set params\r\n        setSelectedExchangeRateId(exchangeRateId);\r\n    }\r\n\r\n    const hideUpdateModal = () => {\r\n        setUpdateExchangeRateModalShow(false);\r\n    }\r\n\r\n    //check permission\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    const canManageExchangeRate = userInfo.moderator_details.can_manage_exchange_rate;\r\n    if (canManageExchangeRate) {\r\n        return (\r\n            <CRow>\r\n                <CCol>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            <h3 className=\"m-0\">Danh sách Chiết Khấu:</h3>\r\n                        </CCardHeader>\r\n                        <CCardBody className=\"pt-0 pb-0\">\r\n                            <CDataTable\r\n                                addTableClasses=\"text-break\"\r\n                                items={exchangeRateInfoList}\r\n                                fields={fields}\r\n                                hover\r\n                                striped\r\n                                bordered\r\n                                size=\"sm\"\r\n                                itemsPerPage={20}\r\n                                pagination\r\n                                loading={promiseInProgress}\r\n                                noItemsView={{ noResults: 'Không có kết quả tìm kiếm trùng khớp', noItems: 'Không có dữ liệu' }}\r\n                                scopedSlots={{\r\n                                    'service_name':\r\n                                        (item, index) => (\r\n                                            <td>\r\n                                                {defineServiceName(item.service_name)}\r\n                                            </td>\r\n                                        ),\r\n                                    'updated_at':\r\n                                        (item, index) => (\r\n                                            <td>\r\n                                                {\r\n                                                    (item.updated_at == null || item.updated_at === \"\") ? \"\" : format(parseISO(item.updated_at), 'dd-MM-yyyy hh:mm:ss')\r\n                                                }\r\n                                            </td>\r\n                                        ),\r\n                                    'action':\r\n                                        (item, index) => (\r\n                                            <td className=\"py-1\">\r\n                                                <button type=\"button\" className=\"table-action-button mr-2\" data-toggle=\"tooltip\" title=\"Cập nhật\">\r\n                                                    <CIcon name=\"cil-pencil\" onClick={() => updateExchangeRateOnclick(item.id)}>\r\n                                                    </CIcon>\r\n                                                </button>\r\n                                            </td>\r\n                                        )\r\n                                }}\r\n                            />\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n                {/*POPUP UPDATE EXCHANGE RATE*/}\r\n                {updateExchangeRateModalShow && selectedExchangeRateId != null ?\r\n                    <UpdateExchangeRateModal\r\n                        selectedExchangeRateId={selectedExchangeRateId}\r\n                        show={updateExchangeRateModalShow}\r\n                        handleClose={() => hideUpdateModal}\r\n                        refreshDataFlag={refreshDataFlag}\r\n                        setRefreshDataFlag={setRefreshDataFlag} />\r\n                    : null}\r\n            </CRow>\r\n        );\r\n    } else {\r\n        <CAlert color=\"danger\">Bạn không có quyền sử dụng chức năng này!</CAlert>\r\n    }\r\n}\r\n\r\nexport default ManageExchangeRate\r\n","// import axios from 'axios';\r\n\r\n// let APIKit = axios.create({\r\n//     baseURL: process.env.BACKEND_URL,\r\n//     timeout: 10000\r\n// })\r\n\r\n// export default APIKit;\r\n\r\nimport axios from 'axios';\r\n\r\n// Create axios client, pre-configured with baseURL\r\nlet APIKit = axios.create({\r\n  baseURL: 'https://got-english-backend-production-swiyh5bc4q-de.a.run.app',\r\n  timeout: 10000,\r\n});\r\n\r\n// Set JSON Web Token in Client to be included in all calls\r\n// export const setClientToken = token => {\r\n//   APIKit.interceptors.request.use(function (config) {\r\n//     config.headers.Authorization = `Bearer ${token}`;\r\n//     return config;\r\n//   });\r\n// };\r\n\r\nexport default APIKit;","const DefineErrorLog = (errorResponse) => {\r\n    let definedErrorLog = \"\";\r\n    if (errorResponse != null) {\r\n        if (errorResponse.response != null) {\r\n            if (errorResponse.response.data != null) {\r\n                const errorLogMessage = errorResponse.response.data;\r\n                if (errorLogMessage.includes(\"Account is already suspended.\")) {\r\n                    definedErrorLog = \"Tài khoản này đã bị khóa!\";\r\n                } else if (errorLogMessage.includes(\"account unavailable\")) {\r\n                    definedErrorLog = \"Email đã được sử dụng!\";\r\n                } else if (errorLogMessage.includes(\"'username'\")) {\r\n                    definedErrorLog = \"Tên tài khoản đã được sử dụng!\";\r\n                } else if (errorLogMessage.includes(\"Account is currently in a messaging session\")) {\r\n                    definedErrorLog = \"Tài khoản này hiện đang sử dụng dịch vụ Phiên nhắn tin! Chưa thể khóa...\";\r\n                } else if (errorLogMessage.includes(\"Account is currently in a live call session\")) {\r\n                    definedErrorLog = \"Tài khoản này hiện đang sử dụng dịch vụ Phiên gọi trực tuyến! Chưa thể khóa...\";\r\n                } else if (errorLogMessage.includes(\"Account is currently in a translation session\")) {\r\n                    definedErrorLog = \"Tài khoản này hiện đang sử dụng dịch vụ Phòng phiên dịch! Chưa thể khóa...\";\r\n                } else if (errorLogMessage.includes(\"Account is not yet suspended.\")) {\r\n                    definedErrorLog = \"Tài khoản này đã được mở khóa!\";\r\n                } else if (errorLogMessage.includes(\"You don't have permission\")) {\r\n                    definedErrorLog = \"Tài khoản của bạn không có quyền để thực hiện thao tác này!\";\r\n                } else {\r\n                    definedErrorLog = \"Đã có lỗi xảy ra!\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return definedErrorLog;\r\n}\r\n\r\nexport default DefineErrorLog","import toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (isNaN(date) || !date) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time) || time === null) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString; // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: null\n  };\n  var year = captures[1] && parseInt(captures[1]);\n  var century = captures[2] && parseInt(captures[2]);\n  return {\n    year: century == null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return null;\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return null;\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return null; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}"],"sourceRoot":""}