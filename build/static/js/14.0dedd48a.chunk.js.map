{"version":3,"sources":["api/user.js","api/APIKit.js","firebase/firebase.js","../node_modules/date-fns/esm/parseISO/index.js","views/pages/manage-admin/UpdateAdminModal.js","views/pages/manage-admin/AddAdminModal.js","views/pages/manage-admin/SuspendAdminModal.js","views/pages/manage-admin/UnsuspendAdminModal.js","views/pages/manage-admin/ManageAdmin.js"],"names":["GetUserInfoAPI","username","a","token","JSON","parse","localStorage","getItem","userInfo","onSuccess","data","onFailure","error","console","log","apiConfig","headers","APIKit","get","then","catch","GetAdminInfoListAPI","adminInfoList","GetModeratorInfoListAPI","moderatorInfoList","GetLearnerInfoListAPI","learnerInfoList","GetExpertInfoListAPI","GetExpertInfoByIdAPI","expertId","expertInfo","UpdateUserInfoByUserIdAPI","userID","updateInfoJson","updateResult","response","success","put","CreateUserAPI","userInfoJson","createData","post","UpdateModeratorPermissionByIdAPI","moderatorId","UpdateAdminPermissionByIdAPI","adminId","UpdateExpertPermissionByIdAPI","SuspendUserByIdAPI","userId","suspendResult","includes","UnsuspendUserByIdAPI","unsuspendResult","axios","create","baseURL","timeout","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","analytics","signInWithEmailAndPasswordHandler","email","password","signInWithEmailAndPassword","userCredential","undefined","firebaseUser","user","getIdTokenResult","idToken","MILLISECONDS_IN_HOUR","patterns","dateTimeDelimiter","timeZoneDelimiter","timezone","dateRegex","timeRegex","timezoneRegex","parseISO","argument","dirtyOptions","requiredArgs","arguments","options","additionalDigits","toInteger","RangeError","Object","prototype","toString","call","Date","NaN","date","dateStrings","splitDateString","parseYearResult","parseYear","parseDate","restDateString","year","isNaN","offset","timestamp","getTime","time","parseTime","dirtyDate","result","setFullYear","getUTCFullYear","getUTCMonth","getUTCDate","setHours","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","parseTimezone","dateString","timeString","array","split","length","test","substr","exec","replace","regex","RegExp","captures","match","parseInt","century","slice","isWeekDate","dayOfYear","parseDateUnit","month","day","week","dayOfWeek","_year","validateWeekDate","isoWeekYear","setUTCFullYear","fourthOfJanuaryDay","getUTCDay","diff","setUTCDate","dayOfISOWeekYear","daysInMonths","isLeapYearIndex","validateDate","validateDayOfYearDate","Math","max","value","hours","parseTimeUnit","minutes","seconds","validateTime","parseFloat","timezoneString","sign","_hours","validateTimezone","UpdateAdminModal","selectedAdminUsername","show","handleClose","refreshDataFlag","setRefreshDataFlag","useState","updateAdminUUID","setUpdateAdminUUID","updateAdminFullname","setUpdateAdminFullname","updateAdminUsername","setUpdateAdminUsername","updateAdminPassword","setUpdateAdminPassword","updateAdminEmail","setUpdateAdminEmail","updateAdminAddress","setUpdateAdminAddress","updateAdminPhoneNumber","setUpdateAdminPhoneNumber","updateAdminBirthday","setUpdateAdminBirthday","updateAdminAvatarUrl","setUpdateAdminAvatarUrl","updateAdminCanManageLearner","setUpdateAdminCanManageLearner","updateAdminCanManageExpert","setUpdateAdminCanManageExpert","updateAdminCanManageModerator","setUpdateAdminCanManageModerator","updateAdminCanManageAdmin","setUpdateAdminCanManageAdmin","updateMessage","setUpdateMessage","promiseInProgress","usePromiseTracker","useEffect","trackPromise","selectedAdminInfo","id","fullname","address","phone_number","birthday","avatar_url","admin_details","can_manage_learner","can_manage_expert","can_manage_moderator","can_manage_admin","uploadToStorage","imageURL","Promise","resolve","reject","xhr","XMLHttpRequest","onload","onerror","TypeError","responseType","open","send","blob","storageRef","storage","ref","imagesRef","child","snapshot","getDownloadURL","remoteUri","onSubmitUpdateForm","e","preventDefault","userInput","permissionInput","isBlob","newAvtSrc","format","permissionUpdateResult","color","registerLocale","vi","onClose","closeOnBackdrop","onSubmit","method","encType","className","closeButton","row","md","htmlFor","xs","name","type","onChange","target","required","placeholder","autoComplete","readOnly","locale","placeholderText","dateFormat","selected","checked","col","src","width","height","onClick","document","getElementById","click","onchange","img","fileSize","files","size","fileType","blobUrl","URL","createObjectURL","class","disabled","AddAdminModal","addAdminFullname","setAddAdminFullname","addAdminUsername","setAddAdminUsername","addAdminPassword","setAddAdminPassword","addAdminEmail","setAddAdminEmail","addAdminAddress","setAddAdminAddress","addAdminPhoneNumber","setAddAdminPhoneNumber","addAdminBirthday","setAddAdminBirthday","addAdminAvatarUrl","setAddAdminAvatarUrl","addAdminCanManageLearner","setAddAdminCanManageLearner","addAdminCanManageExpert","setAddAdminCanManageExpert","addAdminCanManageModerator","setAddAdminCanManageModerator","addAdminCanManageAdmin","setAddAdminCanManageAdmin","addMessage","setAddMessage","onSubmitAddForm","addAdminResult","newAdminToken","newAdminID","jwt_decode","claims","additionalData","updateAdminAvt","SuspendAdminModal","suspendAdminUUID","setSuspendAdminUUID","suspendAdminUsername","setSuspendAdminUsername","suspendMessage","setSuspendMessage","onSubmitSuspendForm","UnsuspendAdminModal","unsuspendAdminUUID","setUnsuspendAdminUUID","unsuspendAdminUsername","setUnsuspendAdminUsername","unsuspendMessage","setUnsuspendMessage","onSubmitUnsuspendForm","getBadge","isSuspended","fields","key","label","_style","ManageAdmin","addAdminModalShow","setAddAdminModalShow","suspendAdminModalShow","setSuspendAdminModalShow","unsuspendAdminModalShow","setUnsuspendAdminModalShow","updateAdminModalShow","setUpdateAdminModalShow","setAdminInfoList","setSelectedAdminUsername","hideUpdateModal","hideAddModal","hideSuspendModal","hideUnsuspendModal","addTableClasses","items","hover","striped","bordered","itemsPerPage","pagination","loading","noItemsView","noResults","noItems","tableFilter","scopedSlots","item","is_suspended","index","data-toggle","title","adminUsername"],"mappings":"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","file":"static/js/14.0dedd48a.chunk.js","sourcesContent":["import APIKit from './APIKit';\r\n\r\nexport const GetUserInfoAPI = async (username) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let userInfo = null;\r\n    const onSuccess = data => {\r\n        //only first data\r\n        userInfo = data.data.data[0];\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/accounts?username=' + username, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return userInfo;\r\n}\r\n\r\nexport const GetAdminInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let adminInfoList = null;\r\n    const onSuccess = data => {\r\n        adminInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/accounts?role=Admin', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return adminInfoList;\r\n}\r\n\r\nexport const GetModeratorInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let moderatorInfoList = null;\r\n    const onSuccess = data => {\r\n        moderatorInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/accounts?role=Moderator', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return moderatorInfoList;\r\n}\r\n\r\nexport const GetLearnerInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let learnerInfoList = null;\r\n    const onSuccess = data => {\r\n        learnerInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/accounts?role=Learner', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return learnerInfoList;\r\n}\r\n\r\nexport const GetExpertInfoListAPI = async () => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let learnerInfoList = null;\r\n    const onSuccess = data => {\r\n        learnerInfoList = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/accounts?role=Expert', apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return learnerInfoList;\r\n}\r\n\r\nexport const GetExpertInfoByIdAPI = async (expertId) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let expertInfo = null;\r\n    const onSuccess = data => {\r\n        expertInfo = data.data.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.get('/experts?id=' + expertId, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return expertInfo;\r\n}\r\n\r\nexport const UpdateUserInfoByUserIdAPI = async (userID, updateInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let updateResult = null;\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        updateResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n        updateResult = false;\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.put('/accounts/' + userID + '/update', updateInfoJson, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return updateResult;\r\n}\r\n\r\nexport const CreateUserAPI = async (userInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let createData = null;\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        createData = response.data;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.post('/accounts', userInfoJson, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return createData;\r\n}\r\n\r\nexport const UpdateModeratorPermissionByIdAPI = async (moderatorId, updateInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let updateResult = null;\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        updateResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n        updateResult = false;\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.put('/moderators/' + moderatorId + '/update', updateInfoJson, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return updateResult;\r\n}\r\n\r\nexport const UpdateAdminPermissionByIdAPI = async (adminId, updateInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let updateResult = null;\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        updateResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n        updateResult = false;\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.put('/admins/' + adminId + '/update', updateInfoJson, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return updateResult;\r\n}\r\n\r\nexport const UpdateExpertPermissionByIdAPI = async (expertId, updateInfoJson) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let updateResult = null;\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        updateResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n        updateResult = false;\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.put('/experts/' + expertId + '/update', updateInfoJson, apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return updateResult;\r\n}\r\n\r\nexport const SuspendUserByIdAPI = async (userId) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let suspendResult = null;\r\n\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        suspendResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n        suspendResult = error.response.data;\r\n        if ((error.response.data).includes(\"Account is already suspended.\")) {\r\n            suspendResult = \"Tài khoản này đã bị khóa!\"\r\n        } else {\r\n            suspendResult = \"Khóa tài khoản thất bại!\"\r\n        }\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.put('/accounts/' + userId + '/suspend', [], apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return suspendResult;\r\n}\r\n\r\nexport const UnsuspendUserByIdAPI = async (userId) => {\r\n    const token = (JSON.parse(localStorage.getItem(\"user\"))).token;\r\n    let unsuspendResult = null;\r\n\r\n    const onSuccess = response => {\r\n        console.log(response.data);\r\n        unsuspendResult = response.data.success;\r\n    }\r\n\r\n    const onFailure = error => {\r\n        console.log(error);\r\n        unsuspendResult = error.response.data;\r\n        if ((error.response.data).includes(\"Account is not yet suspended.\")) {\r\n            unsuspendResult = \"Tài khoản này hiện không bị khóa!\"\r\n        } else {\r\n            unsuspendResult = \"Mở khóa tài khoản thất bại!\"\r\n        }\r\n    }\r\n\r\n    const apiConfig = {\r\n        headers: { \"Authorization\": `Bearer ${token}` }\r\n    }\r\n\r\n    await APIKit.put('/accounts/' + userId + '/unsuspend', [], apiConfig)\r\n        .then(onSuccess)\r\n        .catch(onFailure);\r\n\r\n    return unsuspendResult;\r\n}","// import axios from 'axios';\r\n\r\n// let APIKit = axios.create({\r\n//     baseURL: process.env.BACKEND_URL,\r\n//     timeout: 10000\r\n// })\r\n\r\n// export default APIKit;\r\n\r\nimport axios from 'axios';\r\n\r\n// Create axios client, pre-configured with baseURL\r\nlet APIKit = axios.create({\r\n  baseURL: 'https://got-english-backend-production-swiyh5bc4q-de.a.run.app',\r\n  timeout: 10000,\r\n});\r\n\r\n// Set JSON Web Token in Client to be included in all calls\r\n// export const setClientToken = token => {\r\n//   APIKit.interceptors.request.use(function (config) {\r\n//     config.headers.Authorization = `Bearer ${token}`;\r\n//     return config;\r\n//   });\r\n// };\r\n\r\nexport default APIKit;","import firebase from 'firebase'\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport util from 'util';\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB0l31PMIfIMgDceOjlcOimsHUFSccvzjU\",\r\n    authDomain: \"gotenglish-app.firebaseapp.com\",\r\n    projectId: \"gotenglish-app\",\r\n    storageBucket: \"gotenglish-app.appspot.com\",\r\n    messagingSenderId: \"392616753385\",\r\n    appId: \"1:392616753385:web:cf70a3478c6f8ea51d5878\",\r\n    measurementId: \"G-T0K0LB12VF\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nfirebase.analytics();\r\n\r\nexport const signInWithEmailAndPasswordHandler = async (email, password) => {\r\n    var idToken\r\n    await auth.signInWithEmailAndPassword(email, password).catch(error => {\r\n        console.error(\"Error signing in with password and email\", error);\r\n    }).then(async (userCredential) => {\r\n        if (userCredential !== undefined) {\r\n            var firebaseUser = userCredential.user;\r\n            idToken = await firebaseUser.getIdTokenResult(false);\r\n        }\r\n    });\r\n    return idToken\r\n};\r\n\r\nexport default firebase","import toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * var result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? DEFAULT_ADDITIONAL_DIGITS : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (isNaN(date) || !date) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time) || time === null) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString; // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: null\n  };\n  var year = captures[1] && parseInt(captures[1]);\n  var century = captures[2] && parseInt(captures[2]);\n  return {\n    year: century == null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return null;\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return null;\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return null; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n    CCol,\r\n    CInput,\r\n    CButton,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalTitle,\r\n    CLabel,\r\n    CFormGroup,\r\n    CInputFile,\r\n    CForm,\r\n    CAlert,\r\n    CInputCheckbox\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nimport { GetUserInfoAPI, UpdateUserInfoByUserIdAPI, UpdateAdminPermissionByIdAPI } from '../../../api/user';\r\nimport firebase from '../../../firebase/firebase';\r\n\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport vi from \"date-fns/locale/vi\";\r\nimport { format, parseISO } from 'date-fns';\r\n\r\nconst UpdateAdminModal = ({ selectedAdminUsername, show, handleClose, refreshDataFlag, setRefreshDataFlag }) => {\r\n    const [updateAdminUUID, setUpdateAdminUUID] = useState(\"\");\r\n    const [updateAdminFullname, setUpdateAdminFullname] = useState(\"\");\r\n    const [updateAdminUsername, setUpdateAdminUsername] = useState(\"\");\r\n    const [updateAdminPassword, setUpdateAdminPassword] = useState(\"\");\r\n    const [updateAdminEmail, setUpdateAdminEmail] = useState(\"\");\r\n    const [updateAdminAddress, setUpdateAdminAddress] = useState(\"\");\r\n    const [updateAdminPhoneNumber, setUpdateAdminPhoneNumber] = useState(\"\");\r\n    const [updateAdminBirthday, setUpdateAdminBirthday] = useState(\"\");\r\n    const [updateAdminAvatarUrl, setUpdateAdminAvatarUrl] = useState(\"\");\r\n    const [updateAdminCanManageLearner, setUpdateAdminCanManageLearner] = useState(false);\r\n    const [updateAdminCanManageExpert, setUpdateAdminCanManageExpert] = useState(false);\r\n    const [updateAdminCanManageModerator, setUpdateAdminCanManageModerator] = useState(false);\r\n    const [updateAdminCanManageAdmin, setUpdateAdminCanManageAdmin] = useState(false);\r\n    const [updateMessage, setUpdateMessage] = useState(null);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    //this useEffect will be executed every time the modal show\r\n    useEffect(async () => {\r\n        if (selectedAdminUsername != null) {\r\n            const selectedAdminInfo = await trackPromise(GetUserInfoAPI(selectedAdminUsername));\r\n            if (selectedAdminInfo != null) {\r\n                setUpdateAdminUUID(selectedAdminInfo.id);\r\n                setUpdateAdminFullname(selectedAdminInfo.fullname);\r\n                setUpdateAdminUsername(selectedAdminInfo.username);\r\n                setUpdateAdminEmail(selectedAdminInfo.email);\r\n                setUpdateAdminAddress(selectedAdminInfo.address);\r\n                setUpdateAdminPhoneNumber(selectedAdminInfo.phone_number);\r\n                if (selectedAdminInfo.birthday == \"\" || selectedAdminInfo.birthday == null) {\r\n                    setUpdateAdminBirthday(\"\");\r\n                } else {\r\n                    setUpdateAdminBirthday(parseISO(selectedAdminInfo.birthday));\r\n                }\r\n                setUpdateAdminAvatarUrl((selectedAdminInfo.avatar_url == \"\" || selectedAdminInfo.avatar_url == null) ? \"\" : selectedAdminInfo.avatar_url);\r\n                setUpdateAdminCanManageLearner(selectedAdminInfo.admin_details.can_manage_learner);\r\n                setUpdateAdminCanManageExpert(selectedAdminInfo.admin_details.can_manage_expert);\r\n                setUpdateAdminCanManageModerator(selectedAdminInfo.admin_details.can_manage_moderator);\r\n                setUpdateAdminCanManageAdmin(selectedAdminInfo.admin_details.can_manage_admin);\r\n            }\r\n        }\r\n    }, [selectedAdminUsername]);\r\n\r\n    const uploadToStorage = async (imageURL) => {\r\n        let blob = await new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onload = function () {\r\n                resolve(xhr.response); // when BlobModule finishes reading, resolve with the blob\r\n            };\r\n            xhr.onerror = function () {\r\n                reject(new TypeError('Network request failed')); // error occurred, rejecting\r\n            };\r\n            xhr.responseType = 'blob'; // use BlobModule's UriHandler\r\n            xhr.open('GET', imageURL, true); // fetch the blob from uri in async mode\r\n            xhr.send(null); // no initial data\r\n        });\r\n\r\n        const storageRef = firebase.storage().ref();\r\n        const imagesRef = storageRef.child('uploads/' + updateAdminUUID);\r\n        const snapshot = await imagesRef.put(blob);\r\n        const remoteUri = await snapshot.ref.getDownloadURL();\r\n\r\n        // when we're done sending it, close and release the blob\r\n        blob = null;\r\n\r\n        return remoteUri;\r\n    }\r\n\r\n    const avtUrlUploadOnclick = () => {\r\n        document.getElementById('updateAdminAvtUrlInput').click();\r\n        document.getElementById('updateAdminAvtUrlInput').onchange = (e) => {\r\n            var img = document.getElementById(\"updateAdminAvt\");\r\n            const fileSize = e.target.files[0].size;\r\n            const fileType = e.target.files[0].type;\r\n            if (fileSize <= 300000 && (fileType == \"image/jpeg\" || fileType == \"image/png\" || fileType == \"image/jpg\")) {\r\n                // create blob url\r\n                var blobUrl = URL.createObjectURL(e.target.files[0]);\r\n                // use blob url to preview avatar\r\n                img.src = blobUrl;\r\n                setUpdateAdminAvatarUrl(blobUrl);\r\n            } else {\r\n                setUpdateMessage(<CAlert color=\"danger\">Hệ thống chỉ chấp nhận file hình ảnh JPEG, JPG, PNG và dung lượng không quá 300KB</CAlert>);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onSubmitUpdateForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let userInput = {};\r\n        let permissionInput = {};\r\n\r\n        //check if uploaded file is blob file from local\r\n        const isBlob = updateAdminAvatarUrl.includes(\"blob:\");\r\n        let newAvtSrc = updateAdminAvatarUrl;\r\n        if (isBlob) {\r\n            //upload local image to Firebase Storage\r\n            newAvtSrc = await trackPromise(uploadToStorage(updateAdminAvatarUrl));\r\n        } else {\r\n            //do nothing\r\n        }\r\n\r\n        if (updateAdminPassword === \"\") {\r\n            userInput = {\r\n                \"fullname\": updateAdminFullname,\r\n                \"username\": updateAdminUsername,\r\n                \"address\": updateAdminAddress,\r\n                \"phone_number\": updateAdminPhoneNumber,\r\n                \"birthday\": ((updateAdminBirthday != \"\" && updateAdminBirthday != null) ? format(updateAdminBirthday, 'yyyy-MM-dd') : null),\r\n                \"avatar_url\": newAvtSrc,\r\n\r\n            }\r\n            permissionInput = {\r\n                \"can_manage_learner\": updateAdminCanManageLearner,\r\n                \"can_manage_expert\": updateAdminCanManageExpert,\r\n                \"can_manage_moderator\": updateAdminCanManageModerator,\r\n                \"can_manage_admin\": updateAdminCanManageAdmin\r\n            }\r\n        } else {\r\n            userInput = {\r\n                \"fullname\": updateAdminFullname,\r\n                \"username\": updateAdminUsername,\r\n                \"password\": updateAdminPassword,\r\n                \"address\": updateAdminAddress,\r\n                \"phone_number\": updateAdminPhoneNumber,\r\n                \"birthday\": ((updateAdminBirthday != \"\" && updateAdminBirthday != null) ? format(updateAdminBirthday, 'yyyy-MM-dd') : null),\r\n                \"avatar_url\": newAvtSrc,\r\n            }\r\n            permissionInput = {\r\n                \"can_manage_learner\": updateAdminCanManageLearner,\r\n                \"can_manage_expert\": updateAdminCanManageExpert,\r\n                \"can_manage_moderator\": updateAdminCanManageModerator,\r\n                \"can_manage_admin\": updateAdminCanManageAdmin\r\n            }\r\n        }\r\n\r\n        console.log(userInput);\r\n\r\n        const updateResult = await trackPromise(UpdateUserInfoByUserIdAPI(updateAdminUUID, userInput));\r\n        const permissionUpdateResult = await trackPromise(UpdateAdminPermissionByIdAPI(updateAdminUUID, permissionInput));\r\n\r\n        if (updateResult === true && permissionUpdateResult === true) {\r\n            setUpdateMessage(<CAlert color=\"success\">Cập nhật thành công!</CAlert>);\r\n            setRefreshDataFlag(!refreshDataFlag);\r\n        } else {\r\n            setUpdateMessage(<CAlert color=\"danger\">Cập nhật thất bại!</CAlert>);\r\n        }\r\n    }\r\n\r\n    registerLocale(\"vi\", vi);\r\n\r\n    return (\r\n        <CModal\r\n            show={show}\r\n            onClose={handleClose()}\r\n            closeOnBackdrop={false}\r\n            color=\"success\"\r\n        >\r\n            <CForm onSubmit={onSubmitUpdateForm} method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Cập nhật Quản Trị Viên</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"admin-uuid-input\">UUID:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <p name=\"admin-id-static\">{updateAdminUUID}</p>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-admin-fullname-input\">Họ và tên:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"text\" id=\"update-admin-fullname-input\" name=\"fullname\" value={updateAdminFullname} onChange={({ target }) => setUpdateAdminFullname(target.value)} />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-admin-username-input\">Tên tài khoản:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"text\" id=\"update-admin-username-input\" name=\"username\" value={updateAdminUsername} required={true} onChange={({ target }) => setUpdateAdminUsername(target.value)} />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-admin-password-input\">Mật khẩu:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"password\" id=\"update-admin-password-input\" name=\"update-admin-password-input\" value={updateAdminPassword} placeholder=\"[Không thay đổi]\" onChange={({ target }) => setUpdateAdminPassword(target.value)} />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-admin-email-input\">Email:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"email\" id=\"update-admin-email-input\" name=\"update-admin-email-input\" autoComplete=\"email\" value={updateAdminEmail} required={true} readOnly />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-admin-birthday-input\">Ngày sinh:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            {(updateAdminBirthday == \"\" || updateAdminBirthday == null) ?\r\n                                <DatePicker\r\n                                    className=\"form-control\"\r\n                                    locale=\"vi\"\r\n                                    id=\"update-admin-birthday-input\"\r\n                                    name=\"update-admin-birthday-input\"\r\n                                    placeholderText=\"Ngày-Tháng-Năm\"\r\n                                    onChange={date => setUpdateAdminBirthday(date)}\r\n                                    dateFormat=\"dd-MM-yyyy\"\r\n                                />\r\n                                :\r\n                                <DatePicker\r\n                                    className=\"form-control\"\r\n                                    locale=\"vi\"\r\n                                    id=\"update-admin-birthday-input\"\r\n                                    name=\"update-admin-birthday-input\"\r\n                                    selected={updateAdminBirthday}\r\n                                    placeholderText=\"Ngày-Tháng-Năm\"\r\n                                    onChange={date => setUpdateAdminBirthday(date)}\r\n                                    dateFormat=\"dd-MM-yyyy\"\r\n                                    value={updateAdminBirthday}\r\n                                />\r\n                            }\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-admin-address-input\">Địa chỉ:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"text\" id=\"update-admin-address-input\" name=\"update-admin-address-input\" value={updateAdminAddress} onChange={({ target }) => setUpdateAdminAddress(target.value)} />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-admin-phone-input\">Số điện thoại:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"tel\" id=\"update-admin-phone-input\" name=\"update-admin-phone-input\" value={updateAdminPhoneNumber} onChange={({ target }) => setUpdateAdminPhoneNumber(target.value)} />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"update-admin-permission\">Quyền hạn:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CLabel htmlFor=\"update-admin-can-manage-learner-input\"\r\n                                className=\"w-100 permission-input-checkbox\">\r\n                                <CInputCheckbox\r\n                                    id=\"update-admin-can-manage-learner-input\"\r\n                                    name=\"update-admin-can-manage-learner-input\"\r\n                                    checked={updateAdminCanManageLearner}\r\n                                    onChange={({ target }) => setUpdateAdminCanManageLearner(target.checked)} />\r\n                                Quản lý Học Viên\r\n                                </CLabel>\r\n                            <CLabel htmlFor=\"update-admin-can-manage-expert-input\"\r\n                                className=\"w-100 permission-input-checkbox\">\r\n                                <CInputCheckbox\r\n                                    id=\"update-admin-can-manage-expert-input\"\r\n                                    name=\"update-admin-can-manage-expert-input\"\r\n                                    checked={updateAdminCanManageExpert}\r\n                                    onChange={({ target }) => setUpdateAdminCanManageExpert(target.checked)} />\r\n                                Quản lý Chuyên Gia\r\n                                </CLabel>\r\n                            <CLabel htmlFor=\"update-admin-can-manage-moderator-input\"\r\n                                className=\"w-100 permission-input-checkbox\">\r\n                                <CInputCheckbox\r\n                                    id=\"update-admin-can-manage-moderator-input\"\r\n                                    name=\"update-admin-can-manage-moderator-input\"\r\n                                    checked={updateAdminCanManageModerator}\r\n                                    onChange={({ target }) => setUpdateAdminCanManageModerator(target.checked)}\r\n                                />\r\n                                Quản lý Điều Hành Viên\r\n                                </CLabel>\r\n                            <CLabel htmlFor=\"update-admin-can-manage-admin-input\"\r\n                                className=\"w-100 permission-input-checkbox\">\r\n                                <CInputCheckbox\r\n                                    id=\"update-admin-can-manage-admin-input\"\r\n                                    name=\"update-admin-can-manage-admin-input\"\r\n                                    checked={updateAdminCanManageAdmin}\r\n                                    onChange={({ target }) => setUpdateAdminCanManageAdmin(target.checked)}\r\n                                />\r\n                                Quản lý Quản Trị Viên\r\n                                </CLabel>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CLabel col md=\"4\" htmlFor=\"update-admin-avatar-url\">Ảnh đại diện:</CLabel>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <img id=\"updateAdminAvt\" className=\"mr-2\" src={updateAdminAvatarUrl} width=\"80\" height=\"80\" />\r\n                            <CButton\r\n                                color=\"info\"\r\n                                className=\"rounded-circle\"\r\n                                onClick={avtUrlUploadOnclick}\r\n                            ><CIcon name=\"cil-pencil\"></CIcon></CButton>\r\n                            <CInputFile class=\"d-none\" id=\"updateAdminAvtUrlInput\" name=\"update-admin-avatar-url\" />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    {updateMessage}\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"success\" type=\"submit\" disabled={promiseInProgress}>\r\n                        Cập nhật\r\n                        </CButton>\r\n                    <CButton color=\"secondary\" onClick={handleClose()}>\r\n                        Hủy\r\n                        </CButton>\r\n                </CModalFooter>\r\n            </CForm>\r\n        </CModal>\r\n    );\r\n}\r\n\r\nexport default UpdateAdminModal","import React, { useState } from 'react'\r\n\r\nimport {\r\n    CCol,\r\n    CInput,\r\n    CButton,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalTitle,\r\n    CLabel,\r\n    CFormGroup,\r\n    CInputFile,\r\n    CForm,\r\n    CAlert,\r\n    CInputCheckbox\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nimport { CreateUserAPI, UpdateUserInfoByUserIdAPI, UpdateAdminPermissionByIdAPI } from '../../../api/user';\r\nimport firebase from '../../../firebase/firebase';\r\nimport jwt_decode from 'jwt-decode'\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport vi from \"date-fns/locale/vi\";\r\nimport { format } from 'date-fns';\r\n\r\nconst AddAdminModal = ({ show, handleClose, refreshDataFlag, setRefreshDataFlag }) => {\r\n    const [addAdminFullname, setAddAdminFullname] = useState(\"\");\r\n    const [addAdminUsername, setAddAdminUsername] = useState(\"\");\r\n    const [addAdminPassword, setAddAdminPassword] = useState(\"\");\r\n    const [addAdminEmail, setAddAdminEmail] = useState(\"\");\r\n    const [addAdminAddress, setAddAdminAddress] = useState(\"\");\r\n    const [addAdminPhoneNumber, setAddAdminPhoneNumber] = useState(\"\");\r\n    const [addAdminBirthday, setAddAdminBirthday] = useState(\"\");\r\n    const [addAdminAvatarUrl, setAddAdminAvatarUrl] = useState(\"\");\r\n    const [addAdminCanManageLearner, setAddAdminCanManageLearner] = useState(false);\r\n    const [addAdminCanManageExpert, setAddAdminCanManageExpert] = useState(false);\r\n    const [addAdminCanManageModerator, setAddAdminCanManageModerator] = useState(false);\r\n    const [addAdminCanManageAdmin, setAddAdminCanManageAdmin] = useState(false);\r\n    const [addMessage, setAddMessage] = useState(null);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    const uploadToStorage = async (imageURL, updateAdminUUID) => {\r\n        let blob = await new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onload = function () {\r\n                resolve(xhr.response); // when BlobModule finishes reading, resolve with the blob\r\n            };\r\n            xhr.onerror = function () {\r\n                reject(new TypeError('Network request failed')); // error occurred, rejecting\r\n            };\r\n            xhr.responseType = 'blob'; // use BlobModule's UriHandler\r\n            xhr.open('GET', imageURL, true); // fetch the blob from uri in async mode\r\n            xhr.send(null); // no initial data\r\n        });\r\n\r\n        const storageRef = firebase.storage().ref();\r\n        const imagesRef = storageRef.child('uploads/' + updateAdminUUID);\r\n        const snapshot = await imagesRef.put(blob);\r\n        const remoteUri = await snapshot.ref.getDownloadURL();\r\n\r\n        // when we're done sending it, close and release the blob\r\n        blob = null;\r\n\r\n        return remoteUri;\r\n    }\r\n\r\n    const avtUrlUploadOnclick = () => {\r\n        document.getElementById('addAdminAvtUrlInput').click();\r\n        document.getElementById('addAdminAvtUrlInput').onchange = (e) => {\r\n            var img = document.getElementById(\"addAdminAvt\");\r\n            const fileSize = e.target.files[0].size;\r\n            const fileType = e.target.files[0].type;\r\n            if (fileSize <= 300000 && (fileType == \"image/jpeg\" || fileType == \"image/png\" || fileType == \"image/jpg\")) {\r\n                // create blob url\r\n                var blobUrl = URL.createObjectURL(e.target.files[0]);\r\n                // use blob url to preview avatar\r\n                img.src = blobUrl;\r\n                setAddAdminAvatarUrl(blobUrl);\r\n            } else {\r\n                setAddMessage(<CAlert color=\"danger\">Hệ thống chỉ chấp nhận file hình ảnh JPEG, JPG, PNG và dung lượng không quá 300KB</CAlert>);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onSubmitAddForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const userInput = {\r\n            \"username\": addAdminUsername,\r\n            \"password\": addAdminPassword,\r\n            \"email\": addAdminEmail,\r\n            \"role_name\": \"Admin\"\r\n        };\r\n\r\n        const addAdminResult = await trackPromise(CreateUserAPI(userInput));\r\n        console.log(addAdminResult, userInput);\r\n\r\n        if (addAdminResult.success === true) {\r\n            const newAdminToken = addAdminResult.data.token;\r\n            const newAdminID = (jwt_decode(newAdminToken)).claims.id;\r\n            //check if uploaded file is blob file from local\r\n            const isBlob = addAdminAvatarUrl.includes(\"blob:\");\r\n            let newAvtSrc = addAdminAvatarUrl;\r\n            if (isBlob) {\r\n                //upload local image to Firebase Storage\r\n                newAvtSrc = await trackPromise(uploadToStorage(addAdminAvatarUrl, newAdminID));\r\n            } else {\r\n                //do nothing\r\n            }\r\n            const additionalData = {\r\n                \"fullname\": addAdminFullname,\r\n                \"address\": addAdminAddress,\r\n                \"phone_number\": addAdminPhoneNumber,\r\n                \"birthday\": ((addAdminBirthday == \"\" || addAdminBirthday == null) ? null : format(addAdminBirthday, 'yyyy-MM-dd')),\r\n                \"avatar_url\": newAvtSrc\r\n            }\r\n            const permissionInput = {\r\n                \"can_manage_learner\": addAdminCanManageLearner,\r\n                \"can_manage_expert\": addAdminCanManageExpert,\r\n                \"can_manage_moderator\": addAdminCanManageModerator,\r\n                \"can_manage_admin\": addAdminCanManageAdmin\r\n            }\r\n\r\n            const updateAdminAvt = await trackPromise(UpdateUserInfoByUserIdAPI(newAdminID, additionalData));\r\n            const permissionUpdateResult = await trackPromise(UpdateAdminPermissionByIdAPI(newAdminID, permissionInput));\r\n            console.log(newAdminID, additionalData)\r\n            if (updateAdminAvt === true && permissionUpdateResult === true) {\r\n                setAddMessage(<CAlert color=\"success\">Thêm mới thành công!</CAlert>);\r\n                setRefreshDataFlag(!refreshDataFlag);\r\n            } else {\r\n                setAddMessage(<CAlert color=\"danger\">Thêm mới thành công! Tuy nhiên phần thông tin cập nhật đã gặp sự cố. Hãy sử dụng chức năng Cập nhật để cập nhật lại thông tin.</CAlert>);\r\n            }\r\n        } else {\r\n            setAddMessage(<CAlert color=\"danger\">Thêm mới thất bại!</CAlert>);\r\n        }\r\n    }\r\n\r\n    registerLocale(\"vi\", vi);\r\n\r\n    return (\r\n        <CModal\r\n            show={show}\r\n            onClose={handleClose()}\r\n            closeOnBackdrop={false}\r\n            color=\"primary\"\r\n        >\r\n            <CForm onSubmit={onSubmitAddForm} method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Thêm mới Quản Trị Viên</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"admin-fullname-input\">Họ và tên:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput id=\"admin-fullname-input\" name=\"admin-fullname-input\" onChange={({ target }) => setAddAdminFullname(target.value)} />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"admin-username-input\">Tên tài khoản:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput id=\"admin-username-input\" name=\"admin-username-input\" onChange={({ target }) => setAddAdminUsername(target.value)} required={true} />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"admin-password-input\">Mật khẩu:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"password\" id=\"admin-password-input\" name=\"admin-password-input\" onChange={({ target }) => setAddAdminPassword(target.value)} required={true} />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"admin-email-input\">Email:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"email\" id=\"admin-email-input\" name=\"admin-email-input\" autoComplete=\"email\" onChange={({ target }) => setAddAdminEmail(target.value)} required={true} />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"admin-birthday-input\">Ngày sinh:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            {addAdminBirthday != \"\" ?\r\n                                <DatePicker\r\n                                    className=\"form-control\"\r\n                                    locale=\"vi\"\r\n                                    id=\"admin-birthday-input\"\r\n                                    name=\"admin-birthday-input\"\r\n                                    placeholderText=\"Ngày-Tháng-Năm\"\r\n                                    selected={addAdminBirthday}\r\n                                    onChange={date => setAddAdminBirthday(date)}\r\n                                    dateFormat=\"dd-MM-yyyy\"\r\n                                    value={addAdminBirthday}\r\n                                />\r\n                                :\r\n                                <DatePicker\r\n                                    className=\"form-control\"\r\n                                    locale=\"vi\"\r\n                                    id=\"admin-birthday-input\"\r\n                                    name=\"admin-birthday-input\"\r\n                                    placeholderText=\"Ngày-Tháng-Năm\"\r\n                                    onChange={date => setAddAdminBirthday(date)}\r\n                                    dateFormat=\"dd-MM-yyyy\" />\r\n                            }\r\n\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"admin-address-input\">Địa chỉ:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"tel\" id=\"admin-address-input\" name=\"admin-address-input\" onChange={({ target }) => setAddAdminAddress(target.value)} />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"admin-phone-input\">Số điện thoại:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CInput type=\"tel\" id=\"admin-phone-input\" name=\"admin-phone-input\" onChange={({ target }) => setAddAdminPhoneNumber(target.value)} />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CCol md=\"4\">\r\n                            <CLabel htmlFor=\"add-admin-permission\">Quyền hạn:</CLabel>\r\n                        </CCol>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <CLabel htmlFor=\"add-admin-can-manage-learner-input\"\r\n                                className=\"w-100 permission-input-checkbox\">\r\n                                <CInputCheckbox\r\n                                    id=\"add-admin-can-manage-learner-input\"\r\n                                    name=\"add-admin-can-manage-learner-input\"\r\n                                    checked={addAdminCanManageLearner}\r\n                                    onChange={({ target }) => setAddAdminCanManageLearner(target.checked)} />\r\n                                Quản lý Học Viên\r\n                                </CLabel>\r\n                            <CLabel htmlFor=\"add-admin-can-manage-expert-input\"\r\n                                className=\"w-100 permission-input-checkbox\">\r\n                                <CInputCheckbox\r\n                                    id=\"add-admin-can-manage-expert-input\"\r\n                                    name=\"add-admin-can-manage-expert-input\"\r\n                                    checked={addAdminCanManageExpert}\r\n                                    onChange={({ target }) => setAddAdminCanManageExpert(target.checked)} />\r\n                                Quản lý Chuyên Gia\r\n                                </CLabel>\r\n                            <CLabel htmlFor=\"add-admin-can-manage-moderator-input\"\r\n                                className=\"w-100 permission-input-checkbox\">\r\n                                <CInputCheckbox\r\n                                    id=\"add-admin-can-manage-moderator-input\"\r\n                                    name=\"add-admin-can-manage-moderator-input\"\r\n                                    checked={addAdminCanManageModerator}\r\n                                    onChange={({ target }) => setAddAdminCanManageModerator(target.checked)}\r\n                                />\r\n                                Quản lý Điều Hành Viên\r\n                                </CLabel>\r\n                            <CLabel htmlFor=\"add-admin-can-manage-admin-input\"\r\n                                className=\"w-100 permission-input-checkbox\">\r\n                                <CInputCheckbox\r\n                                    id=\"add-admin-can-manage-admin-input\"\r\n                                    name=\"add-admin-can-manage-admin-input\"\r\n                                    checked={addAdminCanManageAdmin}\r\n                                    onChange={({ target }) => setAddAdminCanManageAdmin(target.checked)}\r\n                                />\r\n                                Quản lý Quản Trị Viên\r\n                                </CLabel>\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                        <CLabel col md=\"4\" htmlFor=\"admin-avatar-url\">Ảnh đại diện:</CLabel>\r\n                        <CCol xs=\"12\" md=\"8\">\r\n                            <img id=\"addAdminAvt\" className=\"mr-2\" src={addAdminAvatarUrl} width=\"80\" height=\"80\" />\r\n                            <CButton\r\n                                color=\"info\"\r\n                                className=\"rounded-circle\"\r\n                                onClick={avtUrlUploadOnclick}\r\n                            ><CIcon name=\"cil-pencil\"></CIcon></CButton>\r\n                            <CInputFile class=\"d-none\" id=\"addAdminAvtUrlInput\" name=\"admin-avatar-url\" />\r\n                        </CCol>\r\n                    </CFormGroup>\r\n                    {addMessage}\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"primary\" type=\"submit\" disabled={promiseInProgress}>\r\n                        Thêm\r\n                </CButton>\r\n                    <CButton color=\"secondary\" onClick={handleClose()}>\r\n                        Hủy\r\n                </CButton>\r\n                </CModalFooter>\r\n            </CForm>\r\n        </CModal>\r\n    );\r\n}\r\n\r\nexport default AddAdminModal","import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n    CButton,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalTitle,\r\n    CAlert,\r\n    CForm\r\n} from '@coreui/react'\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nimport { GetUserInfoAPI, SuspendUserByIdAPI } from '../../../api/user';\r\n\r\nconst SuspendAdminModal = ({ selectedAdminUsername, show, handleClose, refreshDataFlag, setRefreshDataFlag }) => {\r\n    const [suspendAdminUUID, setSuspendAdminUUID] = useState(\"\");\r\n    const [suspendAdminUsername, setSuspendAdminUsername] = useState(\"\");\r\n    const [suspendMessage, setSuspendMessage] = useState(null);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    //this useEffect will be executed every time the modal show\r\n    useEffect(async () => {\r\n        if (selectedAdminUsername != null) {\r\n            const selectedAdminInfo = await trackPromise(GetUserInfoAPI(selectedAdminUsername));\r\n            if (selectedAdminInfo != null) {\r\n                setSuspendAdminUUID(selectedAdminInfo.id);\r\n                setSuspendAdminUsername(selectedAdminInfo.username);\r\n            }\r\n        }\r\n    }, [selectedAdminUsername]);\r\n\r\n    const onSubmitSuspendForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const suspendResult = await trackPromise(SuspendUserByIdAPI(suspendAdminUUID));\r\n        if (suspendResult === true) {\r\n            setSuspendMessage(<CAlert color=\"success\">Khóa tài khoản thành công!</CAlert>);\r\n            setRefreshDataFlag(!refreshDataFlag);\r\n        } else {\r\n            setSuspendMessage(<CAlert color=\"danger\">{suspendResult}</CAlert>);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CModal\r\n            show={show}\r\n            onClose={handleClose()}\r\n            closeOnBackdrop={false}\r\n            color=\"danger\"\r\n        >\r\n            <CForm onSubmit={onSubmitSuspendForm} method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Khóa Quản Trị Viên ({suspendAdminUsername})</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    {suspendMessage ? suspendMessage : \"Bạn chắc chắn muốn khóa Quản Trị Viên này chứ?\"}\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"danger\" type=\"submit\" disabled={promiseInProgress}>\r\n                        Khóa\r\n                </CButton>\r\n                    <CButton color=\"secondary\" onClick={handleClose()}>\r\n                        Hủy\r\n                </CButton>\r\n                </CModalFooter>\r\n            </CForm>\r\n        </CModal>\r\n    );\r\n}\r\n\r\nexport default SuspendAdminModal","import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n    CButton,\r\n    CModal,\r\n    CModalHeader,\r\n    CModalBody,\r\n    CModalFooter,\r\n    CModalTitle,\r\n    CAlert,\r\n    CForm\r\n} from '@coreui/react'\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nimport { GetUserInfoAPI, UnsuspendUserByIdAPI } from '../../../api/user';\r\n\r\nconst UnsuspendAdminModal = ({ selectedAdminUsername, show, handleClose, refreshDataFlag, setRefreshDataFlag }) => {\r\n    const [unsuspendAdminUUID, setUnsuspendAdminUUID] = useState(\"\");\r\n    const [unsuspendAdminUsername, setUnsuspendAdminUsername] = useState(\"\");\r\n    const [unsuspendMessage, setUnsuspendMessage] = useState(null);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    //this useEffect will be executed every time the modal show\r\n    useEffect(async () => {\r\n        if (selectedAdminUsername != null) {\r\n            const selectedAdminInfo = await trackPromise(GetUserInfoAPI(selectedAdminUsername));\r\n            if (selectedAdminInfo != null) {\r\n                setUnsuspendAdminUUID(selectedAdminInfo.id);\r\n                setUnsuspendAdminUsername(selectedAdminInfo.username);\r\n            }\r\n        }\r\n    }, [selectedAdminUsername]);\r\n\r\n    const onSubmitUnsuspendForm = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const unsuspendResult = await trackPromise(UnsuspendUserByIdAPI(unsuspendAdminUUID));\r\n        if (unsuspendResult === true) {\r\n            setUnsuspendMessage(<CAlert color=\"success\">Mở khóa tài khoản thành công!</CAlert>);\r\n            setRefreshDataFlag(!refreshDataFlag);\r\n        } else {\r\n            setUnsuspendMessage(<CAlert color=\"danger\">{unsuspendResult}</CAlert>);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CModal\r\n            show={show}\r\n            onClose={handleClose()}\r\n            closeOnBackdrop={false}\r\n            color=\"warning\"\r\n        >\r\n            <CForm onSubmit={onSubmitUnsuspendForm} method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\r\n                <CModalHeader closeButton>\r\n                    <CModalTitle>Mở Khóa Quản Trị Viên ({unsuspendAdminUsername})</CModalTitle>\r\n                </CModalHeader>\r\n                <CModalBody>\r\n                    {unsuspendMessage ? unsuspendMessage : \"Bạn chắc chắn muốn mở khóa cho Quản Trị Viên này chứ?\"}\r\n                </CModalBody>\r\n                <CModalFooter>\r\n                    <CButton color=\"warning\" type=\"submit\" disabled={promiseInProgress}>\r\n                        Mở khóa\r\n                </CButton>\r\n                    <CButton color=\"secondary\" onClick={handleClose()}>\r\n                        Hủy\r\n                </CButton>\r\n                </CModalFooter>\r\n            </CForm>\r\n        </CModal>\r\n    );\r\n}\r\n\r\nexport default UnsuspendAdminModal","import React, { useState, useEffect } from 'react'\r\n\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CDataTable,\r\n    CRow,\r\n    CButton,\r\n    CBadge,\r\n    CAlert\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport UpdateAdminModal from '../manage-admin/UpdateAdminModal'\r\nimport AddAdminModal from '../manage-admin/AddAdminModal'\r\nimport SuspendAdminModal from '../manage-admin/SuspendAdminModal'\r\nimport UnsuspendAdminModal from '../manage-admin/UnsuspendAdminModal'\r\n\r\nimport { format, parseISO } from 'date-fns';\r\n\r\nimport { usePromiseTracker, trackPromise } from \"react-promise-tracker\";\r\n\r\nimport { GetAdminInfoListAPI } from '../../../api/user';\r\n\r\nconst getBadge = isSuspended => {\r\n    switch (isSuspended) {\r\n        case false: return 'success'\r\n        case true: return 'danger'\r\n        default: return 'success'\r\n    }\r\n}\r\n\r\nconst fields = [\r\n    { key: 'fullname', label: 'Họ và tên', _style: { width: '14%' } },\r\n    { key: 'username', label: 'Tên tài khoản', _style: { width: '12%' } },\r\n    { key: 'email', label: 'Địa chỉ Email', _style: { width: '20%' } },\r\n    { key: 'birthday', label: 'Ngày sinh', _style: { width: '10%' } },\r\n    { key: 'address', label: 'Địa chỉ', _style: { width: '20%' } },\r\n    { key: 'phone_number', label: 'Số điện thoại', _style: { width: '10%' } },\r\n    { key: 'is_suspended', label: '', _style: { width: '8%' } },\r\n    //{ key: 'status', label: 'Trạng thái' },\r\n    { key: 'action', label: '', _style: { width: '6%' } }]\r\n\r\nconst ManageAdmin = () => {\r\n    const [addAdminModalShow, setAddAdminModalShow] = useState(false);\r\n    const [suspendAdminModalShow, setSuspendAdminModalShow] = useState(false);\r\n    const [unsuspendAdminModalShow, setUnsuspendAdminModalShow] = useState(false);\r\n    const [updateAdminModalShow, setUpdateAdminModalShow] = useState(false);\r\n    const [adminInfoList, setAdminInfoList] = useState(null);\r\n    const [selectedAdminUsername, setSelectedAdminUsername] = useState(null);\r\n    const [refreshDataFlag, setRefreshDataFlag] = useState(false);\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    useEffect(async () => {\r\n        const adminInfoList = await trackPromise(GetAdminInfoListAPI());\r\n        setAdminInfoList(adminInfoList);\r\n    }, [refreshDataFlag])\r\n\r\n    const updateAdminOnclick = (adminUsername) => {\r\n        //open the update admin modal\r\n        setUpdateAdminModalShow(true);\r\n        //set params\r\n        setSelectedAdminUsername(adminUsername);\r\n    }\r\n\r\n    const suspendAdminOnclick = (adminUsername) => {\r\n        //open the suspend admin modal\r\n        setSuspendAdminModalShow(true);\r\n        //set params\r\n        setSelectedAdminUsername(adminUsername);\r\n    }\r\n\r\n    const unsuspendAdminOnclick = (adminUsername) => {\r\n        //open the unsuspend admin modal\r\n        setUnsuspendAdminModalShow(true);\r\n        //set params\r\n        setSelectedAdminUsername(adminUsername);\r\n    }\r\n\r\n    const hideUpdateModal = () => {\r\n        setUpdateAdminModalShow(false);\r\n    }\r\n\r\n    const hideAddModal = () => {\r\n        setAddAdminModalShow(false);\r\n    }\r\n\r\n    const hideSuspendModal = () => {\r\n        setSuspendAdminModalShow(false);\r\n    }\r\n\r\n    const hideUnsuspendModal = () => {\r\n        setUnsuspendAdminModalShow(false);\r\n    }\r\n\r\n    //check permission\r\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    const canManageAdmin = userInfo.admin_details.can_manage_admin;\r\n    if (canManageAdmin) {\r\n        return (\r\n            <CRow>\r\n                <CCol>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            <h3 className=\"m-0\">Danh sách Quản Trị Viên</h3>\r\n                            <CButton color=\"primary\" className=\"mt-2 d-flex align-items-center\" onClick={() => setAddAdminModalShow(true)}>\r\n                                <CIcon name=\"cilPlus\" size=\"sm\" className=\"mr-1\"></CIcon>Thêm mới Quản Trị Viên</CButton>\r\n                        </CCardHeader>\r\n                        <CCardBody className=\"pt-0 pb-0\">\r\n                            <CDataTable\r\n                                addTableClasses=\"text-break\"\r\n                                items={adminInfoList}\r\n                                fields={fields}\r\n                                hover\r\n                                striped\r\n                                bordered\r\n                                size=\"sm\"\r\n                                itemsPerPage={20}\r\n                                pagination\r\n                                loading={promiseInProgress}\r\n                                noItemsView={{ noResults: 'Không có kết quả tìm kiếm trùng khớp', noItems: 'Không có dữ liệu' }}\r\n                                tableFilter={\r\n                                    {\r\n                                        label: \"Tìm kiếm:\",\r\n                                        placeholder: \"nhập thông tin tài khoản bất kỳ...\",\r\n                                    }\r\n                                }\r\n                                scopedSlots={{\r\n                                    'fullname':\r\n                                        (item) => (\r\n                                            <td>\r\n                                                {item.fullname == null ? \"\" : item.fullname}\r\n                                            </td>\r\n                                        ),\r\n                                    'address':\r\n                                        (item) => (\r\n                                            <td>\r\n                                                {item.address == null ? \"\" : item.address}\r\n                                            </td>\r\n                                        ),\r\n                                    'phone_number':\r\n                                        (item) => (\r\n                                            <td>\r\n                                                {item.phone_number == null ? \"\" : item.phone_number}\r\n                                            </td>\r\n                                        ),\r\n                                    'is_suspended':\r\n                                        (item) => (\r\n                                            <td>\r\n                                                <CBadge color={getBadge(item.is_suspended)}>\r\n                                                    {item.is_suspended ? \"Đã khóa\" : \"Hoạt động\"}\r\n                                                </CBadge>\r\n                                            </td>\r\n                                        ),\r\n                                    'birthday':\r\n                                        (item) => (<td>\r\n                                            {(item.birthday == \"\" || item.birthday == null) ? \"\" : format(parseISO(item.birthday), \"dd-MM-yyyy\")}\r\n                                        </td>),\r\n                                    'action':\r\n                                        (item, index) => {\r\n                                            if (item.id === userInfo.id) {\r\n                                                return (\r\n                                                    <td className=\"py-1\"></td>\r\n                                                );\r\n                                            } else {\r\n                                                return (\r\n                                                    <td className=\"py-1\">\r\n                                                        <button type=\"button\" className=\"table-action-button mr-2\" data-toggle=\"tooltip\" title=\"Cập nhật\" >\r\n                                                            <CIcon name=\"cil-pencil\" onClick={() => updateAdminOnclick(item.username)}>\r\n                                                            </CIcon>\r\n                                                        </button>\r\n                                                        {item.is_suspended ?\r\n                                                            <button type=\"button\" className=\"table-action-button\" data-toggle=\"tooltip\" title=\"Mở Khóa\">\r\n                                                                <CIcon name=\"cil-lock-unlocked\" onClick={() => unsuspendAdminOnclick(item.username)}>\r\n                                                                </CIcon>\r\n                                                            </button>\r\n                                                            : <button type=\"button\" className=\"table-action-button\" data-toggle=\"tooltip\" title=\"Khóa\">\r\n                                                                <CIcon name=\"cil-lock-locked\" onClick={() => suspendAdminOnclick(item.username)}>\r\n                                                                </CIcon>\r\n                                                            </button>}\r\n                                                    </td>\r\n                                                )\r\n                                            }\r\n                                        },\r\n                                }}\r\n                            />\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n                {/*POPUP ADD ADMIN*/}\r\n                {addAdminModalShow ?\r\n                    <AddAdminModal\r\n                        show={addAdminModalShow}\r\n                        handleClose={() => hideAddModal}\r\n                        refreshDataFlag={refreshDataFlag}\r\n                        setRefreshDataFlag={setRefreshDataFlag}\r\n                    />\r\n                    : null}\r\n                {/*POPUP UPDATE ADMIN*/}\r\n                {(updateAdminModalShow && selectedAdminUsername != null) ?\r\n                    <UpdateAdminModal\r\n                        selectedAdminUsername={selectedAdminUsername}\r\n                        show={updateAdminModalShow}\r\n                        handleClose={() => hideUpdateModal}\r\n                        refreshDataFlag={refreshDataFlag}\r\n                        setRefreshDataFlag={setRefreshDataFlag}\r\n                    />\r\n                    : null}\r\n                {/*POPUP SUSPEND ADMIN*/}\r\n                {suspendAdminModalShow && selectedAdminUsername ?\r\n                    <SuspendAdminModal\r\n                        selectedAdminUsername={selectedAdminUsername}\r\n                        show={suspendAdminModalShow}\r\n                        handleClose={() => hideSuspendModal}\r\n                        refreshDataFlag={refreshDataFlag}\r\n                        setRefreshDataFlag={setRefreshDataFlag}\r\n                    /> : null}\r\n                {/*POPUP UNSUSPEND ADMIN*/}\r\n                {unsuspendAdminModalShow && selectedAdminUsername ?\r\n                    <UnsuspendAdminModal\r\n                        selectedAdminUsername={selectedAdminUsername}\r\n                        show={unsuspendAdminModalShow}\r\n                        handleClose={() => hideUnsuspendModal}\r\n                        refreshDataFlag={refreshDataFlag}\r\n                        setRefreshDataFlag={setRefreshDataFlag}\r\n                    /> : null}\r\n            </CRow >\r\n        );\r\n    } else {\r\n        return (\r\n            <CAlert color=\"danger\">Bạn không có quyền sử dụng chức năng này!</CAlert>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ManageAdmin"],"sourceRoot":""}